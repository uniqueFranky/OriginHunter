{
  "origin": "codeshovel",
  "repositoryName": "httpie",
  "repositoryPath": "/Users/franky/Documents/Homework/毕业设计/testcase/httpie/.git",
  "startCommitName": "bece3c77bb51ecc55dcc4008375dc29ccd91575c",
  "sourceFileName": "downloads.py",
  "functionName": "report_speed",
  "functionId": "ProgressReporterThread__report_speed___self",
  "sourceFilePath": "httpie/downloads.py",
  "functionAnnotation": "",
  "functionStartLine": 418,
  "functionEndLine": 471,
  "numCommitsSeen": 51,
  "timeTaken": 592,
  "changeHistory": [
    "5af88756a6d89a44c191225d58953204b11e1bc2",
    "1fc8396c4ba6b6e6fda19fb1d3a7d8fa40296cd5",
    "cfa7199f0b505424343bac0b904f333ea6a67673",
    "5a1177d57e58072d929a674a28e80661b81a393a",
    "c63a92f9b7fe6159ab83d49921131d725b3c5cfd",
    "d17e02792b5a2150f7be0ace1effcd361b0b5fd1",
    "347653b369298c66fc046597d20981380a2c9394",
    "ebfce6fb93b077a039a5aef7f5deb0e5f23b5c28"
  ],
  "changeHistoryShort": {
    "5af88756a6d89a44c191225d58953204b11e1bc2": "Ybodychange",
    "1fc8396c4ba6b6e6fda19fb1d3a7d8fa40296cd5": "Ybodychange",
    "cfa7199f0b505424343bac0b904f333ea6a67673": "Ybodychange",
    "5a1177d57e58072d929a674a28e80661b81a393a": "Ybodychange",
    "c63a92f9b7fe6159ab83d49921131d725b3c5cfd": "Ybodychange",
    "d17e02792b5a2150f7be0ace1effcd361b0b5fd1": "Ybodychange",
    "347653b369298c66fc046597d20981380a2c9394": "Ybodychange",
    "ebfce6fb93b077a039a5aef7f5deb0e5f23b5c28": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5af88756a6d89a44c191225d58953204b11e1bc2": {
      "type": "Ybodychange",
      "commitMessage": "Fixed download ETA for Python 2.6.\n",
      "commitDate": "2013/5/14 下午6:49",
      "commitName": "5af88756a6d89a44c191225d58953204b11e1bc2",
      "commitAuthor": "Jakub Roztocil",
      "commitDateOld": "2013/5/14 下午6:49",
      "commitNameOld": "7f624e61b54a47b53959d451544423efd28f7f93",
      "commitAuthorOld": "Jakub Roztocil",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "    def report_speed(self):\n\n        now \u003d time()\n\n        if now - self._prev_time \u003e\u003d self._update_interval:\n            downloaded \u003d self.status.downloaded\n            try:\n                speed \u003d ((downloaded - self._prev_bytes)\n                         / (now - self._prev_time))\n            except ZeroDivisionError:\n                speed \u003d 0\n\n            if not self.status.total_size:\n                self._status_line \u003d PROGRESS_NO_CONTENT_LENGTH.format(\n                    downloaded\u003dhumanize_bytes(downloaded),\n                    speed\u003dhumanize_bytes(speed),\n                )\n            else:\n                try:\n                    percentage \u003d downloaded / self.status.total_size * 100\n                except ZeroDivisionError:\n                    percentage \u003d 0\n\n                if not speed:\n                    eta \u003d \u0027-:--:--\u0027\n                else:\n                    s \u003d int((self.status.total_size - downloaded) / speed)\n                    h, s \u003d divmod(s, 60 * 60)\n                    m, s \u003d divmod(s, 60)\n                    eta \u003d \u0027{0}:{1:0\u003e2}:{2:0\u003e2}\u0027.format(h, m, s)\n\n                self._status_line \u003d PROGRESS.format(\n                    percentage\u003dpercentage,\n                    downloaded\u003dhumanize_bytes(downloaded),\n                    speed\u003dhumanize_bytes(speed),\n                    eta\u003deta,\n                )\n\n            self._prev_time \u003d now\n            self._prev_bytes \u003d downloaded\n\n        self.output.write(\n            CLEAR_LINE\n            + \u0027 \u0027\n            + SPINNER[self._spinner_pos]\n            + \u0027 \u0027\n            + self._status_line\n        )\n        self.output.flush()\n\n        self._spinner_pos \u003d (self._spinner_pos + 1\n                             if self._spinner_pos + 1 !\u003d len(SPINNER)\n                             else 0)\n",
      "path": "httpie/downloads.py",
      "functionStartLine": 356,
      "functionName": "report_speed",
      "functionAnnotation": "",
      "diff": "@@ -1,53 +1,53 @@\n     def report_speed(self):\n \n         now \u003d time()\n \n         if now - self._prev_time \u003e\u003d self._update_interval:\n             downloaded \u003d self.status.downloaded\n             try:\n                 speed \u003d ((downloaded - self._prev_bytes)\n                          / (now - self._prev_time))\n             except ZeroDivisionError:\n                 speed \u003d 0\n \n             if not self.status.total_size:\n                 self._status_line \u003d PROGRESS_NO_CONTENT_LENGTH.format(\n                     downloaded\u003dhumanize_bytes(downloaded),\n                     speed\u003dhumanize_bytes(speed),\n                 )\n             else:\n                 try:\n                     percentage \u003d downloaded / self.status.total_size * 100\n                 except ZeroDivisionError:\n                     percentage \u003d 0\n \n                 if not speed:\n                     eta \u003d \u0027-:--:--\u0027\n                 else:\n                     s \u003d int((self.status.total_size - downloaded) / speed)\n                     h, s \u003d divmod(s, 60 * 60)\n                     m, s \u003d divmod(s, 60)\n-                    eta \u003d \u0027{}:{:0\u003e2}:{:0\u003e2}\u0027.format(h, m, s)\n+                    eta \u003d \u0027{0}:{1:0\u003e2}:{2:0\u003e2}\u0027.format(h, m, s)\n \n                 self._status_line \u003d PROGRESS.format(\n                     percentage\u003dpercentage,\n                     downloaded\u003dhumanize_bytes(downloaded),\n                     speed\u003dhumanize_bytes(speed),\n                     eta\u003deta,\n                 )\n \n             self._prev_time \u003d now\n             self._prev_bytes \u003d downloaded\n \n         self.output.write(\n             CLEAR_LINE\n             + \u0027 \u0027\n             + SPINNER[self._spinner_pos]\n             + \u0027 \u0027\n             + self._status_line\n         )\n         self.output.flush()\n \n         self._spinner_pos \u003d (self._spinner_pos + 1\n                              if self._spinner_pos + 1 !\u003d len(SPINNER)\n                              else 0)\n",
      "extendedDetails": {}
    },
    "1fc8396c4ba6b6e6fda19fb1d3a7d8fa40296cd5": {
      "type": "Ybodychange",
      "commitMessage": "Stop the progres reporter thread on error.\n",
      "commitDate": "2013/4/16 下午3:55",
      "commitName": "1fc8396c4ba6b6e6fda19fb1d3a7d8fa40296cd5",
      "commitAuthor": "Jakub Roztocil",
      "commitDateOld": "2013/4/15 上午11:56",
      "commitNameOld": "6c3b983c1861cc6079ef3e1a98028adf08ab1810",
      "commitAuthorOld": "Jakub Roztocil",
      "daysBetweenCommits": 1.17,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "    def report_speed(self):\n\n        now \u003d time()\n\n        if now - self._prev_time \u003e\u003d self._update_interval:\n            downloaded \u003d self.status.downloaded\n            try:\n                speed \u003d ((downloaded - self._prev_bytes)\n                         / (now - self._prev_time))\n            except ZeroDivisionError:\n                speed \u003d 0\n\n            if not self.status.total_size:\n                self._status_line \u003d PROGRESS_NO_CONTENT_LENGTH.format(\n                    downloaded\u003dhumanize_bytes(downloaded),\n                    speed\u003dhumanize_bytes(speed),\n                )\n            else:\n                try:\n                    percentage \u003d downloaded / self.status.total_size * 100\n                except ZeroDivisionError:\n                    percentage \u003d 0\n\n                if not speed:\n                    eta \u003d \u0027-:--:--\u0027\n                else:\n                    s \u003d int((self.status.total_size - downloaded) / speed)\n                    h, s \u003d divmod(s, 60 * 60)\n                    m, s \u003d divmod(s, 60)\n                    eta \u003d \u0027{}:{:0\u003e2}:{:0\u003e2}\u0027.format(h, m, s)\n\n                self._status_line \u003d PROGRESS.format(\n                    percentage\u003dpercentage,\n                    downloaded\u003dhumanize_bytes(downloaded),\n                    speed\u003dhumanize_bytes(speed),\n                    eta\u003deta,\n                )\n\n            self._prev_time \u003d now\n            self._prev_bytes \u003d downloaded\n\n        self.output.write(\n            CLEAR_LINE\n            + \u0027 \u0027\n            + SPINNER[self._spinner_pos]\n            + \u0027 \u0027\n            + self._status_line\n        )\n        self.output.flush()\n\n        self._spinner_pos \u003d (self._spinner_pos + 1\n                             if self._spinner_pos + 1 !\u003d len(SPINNER)\n                             else 0)\n",
      "path": "httpie/downloads.py",
      "functionStartLine": 356,
      "functionName": "report_speed",
      "functionAnnotation": "",
      "diff": "@@ -1,56 +1,53 @@\n     def report_speed(self):\n \n         now \u003d time()\n \n         if now - self._prev_time \u003e\u003d self._update_interval:\n-\n-            downloaded \u003d self.progress.downloaded\n-\n+            downloaded \u003d self.status.downloaded\n             try:\n-                # TODO: Use a longer interval for the speed/eta calculation?\n                 speed \u003d ((downloaded - self._prev_bytes)\n                          / (now - self._prev_time))\n             except ZeroDivisionError:\n                 speed \u003d 0\n \n-            if not self.progress.total_size:\n+            if not self.status.total_size:\n                 self._status_line \u003d PROGRESS_NO_CONTENT_LENGTH.format(\n                     downloaded\u003dhumanize_bytes(downloaded),\n                     speed\u003dhumanize_bytes(speed),\n                 )\n             else:\n                 try:\n-                    percentage \u003d downloaded / self.progress.total_size * 100\n+                    percentage \u003d downloaded / self.status.total_size * 100\n                 except ZeroDivisionError:\n                     percentage \u003d 0\n \n                 if not speed:\n                     eta \u003d \u0027-:--:--\u0027\n                 else:\n-                    s \u003d int((self.progress.total_size - downloaded) / speed)\n+                    s \u003d int((self.status.total_size - downloaded) / speed)\n                     h, s \u003d divmod(s, 60 * 60)\n                     m, s \u003d divmod(s, 60)\n                     eta \u003d \u0027{}:{:0\u003e2}:{:0\u003e2}\u0027.format(h, m, s)\n \n                 self._status_line \u003d PROGRESS.format(\n                     percentage\u003dpercentage,\n                     downloaded\u003dhumanize_bytes(downloaded),\n                     speed\u003dhumanize_bytes(speed),\n                     eta\u003deta,\n                 )\n \n             self._prev_time \u003d now\n             self._prev_bytes \u003d downloaded\n \n         self.output.write(\n             CLEAR_LINE\n             + \u0027 \u0027\n             + SPINNER[self._spinner_pos]\n             + \u0027 \u0027\n             + self._status_line\n         )\n         self.output.flush()\n \n         self._spinner_pos \u003d (self._spinner_pos + 1\n                              if self._spinner_pos + 1 !\u003d len(SPINNER)\n                              else 0)\n",
      "extendedDetails": {}
    },
    "cfa7199f0b505424343bac0b904f333ea6a67673": {
      "type": "Ybodychange",
      "commitMessage": "Added a simple download test.\n",
      "commitDate": "2013/4/14 上午2:34",
      "commitName": "cfa7199f0b505424343bac0b904f333ea6a67673",
      "commitAuthor": "Jakub Roztocil",
      "commitDateOld": "2013/4/14 上午1:50",
      "commitNameOld": "5a1177d57e58072d929a674a28e80661b81a393a",
      "commitAuthorOld": "Jakub Roztocil",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "    def report_speed(self):\n\n        now \u003d time()\n\n        if now - self._prev_time \u003e\u003d self._update_interval:\n\n            downloaded \u003d self.progress.downloaded\n\n            try:\n                # TODO: Use a longer interval for the speed/eta calculation?\n                speed \u003d ((downloaded - self._prev_bytes)\n                         / (now - self._prev_time))\n            except ZeroDivisionError:\n                speed \u003d 0\n\n            if not self.progress.total_size:\n                self._status_line \u003d PROGRESS_NO_CONTENT_LENGTH.format(\n                    downloaded\u003dhumanize_bytes(downloaded),\n                    speed\u003dhumanize_bytes(speed),\n                )\n            else:\n                try:\n                    percentage \u003d downloaded / self.progress.total_size * 100\n                except ZeroDivisionError:\n                    percentage \u003d 0\n\n                if not speed:\n                    eta \u003d \u0027-:--:--\u0027\n                else:\n                    s \u003d int((self.progress.total_size - downloaded) / speed)\n                    h, s \u003d divmod(s, 60 * 60)\n                    m, s \u003d divmod(s, 60)\n                    eta \u003d \u0027{}:{:0\u003e2}:{:0\u003e2}\u0027.format(h, m, s)\n\n                self._status_line \u003d PROGRESS.format(\n                    percentage\u003dpercentage,\n                    downloaded\u003dhumanize_bytes(downloaded),\n                    speed\u003dhumanize_bytes(speed),\n                    eta\u003deta,\n                )\n\n            self._prev_time \u003d now\n            self._prev_bytes \u003d downloaded\n\n        self.output.write(\n            CLEAR_LINE\n            + \u0027 \u0027\n            + SPINNER[self._spinner_pos]\n            + \u0027 \u0027\n            + self._status_line\n        )\n        self.output.flush()\n\n        self._spinner_pos \u003d (\n            self._spinner_pos + 1\n            if self._spinner_pos + 1 !\u003d len(SPINNER)\n            else 0\n        )\n",
      "path": "httpie/downloads.py",
      "functionStartLine": 339,
      "functionName": "report_speed",
      "functionAnnotation": "",
      "diff": "@@ -1,54 +1,58 @@\n     def report_speed(self):\n \n         now \u003d time()\n \n         if now - self._prev_time \u003e\u003d self._update_interval:\n \n             downloaded \u003d self.progress.downloaded\n \n             try:\n                 # TODO: Use a longer interval for the speed/eta calculation?\n                 speed \u003d ((downloaded - self._prev_bytes)\n                          / (now - self._prev_time))\n             except ZeroDivisionError:\n                 speed \u003d 0\n \n             if not self.progress.total_size:\n-                template \u003d PROGRESS_NO_CONTENT_LENGTH\n-                percentage \u003d None\n-                eta \u003d None\n+                self._status_line \u003d PROGRESS_NO_CONTENT_LENGTH.format(\n+                    downloaded\u003dhumanize_bytes(downloaded),\n+                    speed\u003dhumanize_bytes(speed),\n+                )\n             else:\n-                template \u003d PROGRESS\n-                percentage \u003d downloaded / self.progress.total_size * 100\n+                try:\n+                    percentage \u003d downloaded / self.progress.total_size * 100\n+                except ZeroDivisionError:\n+                    percentage \u003d 0\n+\n                 if not speed:\n                     eta \u003d \u0027-:--:--\u0027\n                 else:\n                     s \u003d int((self.progress.total_size - downloaded) / speed)\n                     h, s \u003d divmod(s, 60 * 60)\n                     m, s \u003d divmod(s, 60)\n                     eta \u003d \u0027{}:{:0\u003e2}:{:0\u003e2}\u0027.format(h, m, s)\n \n-            self._status_line \u003d template.format(\n-                percentage\u003dpercentage,\n-                downloaded\u003dhumanize_bytes(downloaded),\n-                speed\u003dhumanize_bytes(speed),\n-                eta\u003deta,\n-            )\n+                self._status_line \u003d PROGRESS.format(\n+                    percentage\u003dpercentage,\n+                    downloaded\u003dhumanize_bytes(downloaded),\n+                    speed\u003dhumanize_bytes(speed),\n+                    eta\u003deta,\n+                )\n \n             self._prev_time \u003d now\n             self._prev_bytes \u003d downloaded\n \n         self.output.write(\n             CLEAR_LINE\n             + \u0027 \u0027\n             + SPINNER[self._spinner_pos]\n             + \u0027 \u0027\n             + self._status_line\n         )\n         self.output.flush()\n \n         self._spinner_pos \u003d (\n             self._spinner_pos + 1\n             if self._spinner_pos + 1 !\u003d len(SPINNER)\n             else 0\n         )\n",
      "extendedDetails": {}
    },
    "5a1177d57e58072d929a674a28e80661b81a393a": {
      "type": "Ybodychange",
      "commitMessage": "Fixed downloads with no Content-Length.\n",
      "commitDate": "2013/4/14 上午1:50",
      "commitName": "5a1177d57e58072d929a674a28e80661b81a393a",
      "commitAuthor": "Jakub Roztocil",
      "commitDateOld": "2013/4/13 上午9:02",
      "commitNameOld": "c63a92f9b7fe6159ab83d49921131d725b3c5cfd",
      "commitAuthorOld": "Jakub Roztocil",
      "daysBetweenCommits": 0.7,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "    def report_speed(self):\n\n        now \u003d time()\n\n        if now - self._prev_time \u003e\u003d self._update_interval:\n\n            downloaded \u003d self.progress.downloaded\n\n            try:\n                # TODO: Use a longer interval for the speed/eta calculation?\n                speed \u003d ((downloaded - self._prev_bytes)\n                         / (now - self._prev_time))\n            except ZeroDivisionError:\n                speed \u003d 0\n\n            if not self.progress.total_size:\n                template \u003d PROGRESS_NO_CONTENT_LENGTH\n                percentage \u003d None\n                eta \u003d None\n            else:\n                template \u003d PROGRESS\n                percentage \u003d downloaded / self.progress.total_size * 100\n                if not speed:\n                    eta \u003d \u0027-:--:--\u0027\n                else:\n                    s \u003d int((self.progress.total_size - downloaded) / speed)\n                    h, s \u003d divmod(s, 60 * 60)\n                    m, s \u003d divmod(s, 60)\n                    eta \u003d \u0027{}:{:0\u003e2}:{:0\u003e2}\u0027.format(h, m, s)\n\n            self._status_line \u003d template.format(\n                percentage\u003dpercentage,\n                downloaded\u003dhumanize_bytes(downloaded),\n                speed\u003dhumanize_bytes(speed),\n                eta\u003deta,\n            )\n\n            self._prev_time \u003d now\n            self._prev_bytes \u003d downloaded\n\n        self.output.write(\n            CLEAR_LINE\n            + \u0027 \u0027\n            + SPINNER[self._spinner_pos]\n            + \u0027 \u0027\n            + self._status_line\n        )\n        self.output.flush()\n\n        self._spinner_pos \u003d (\n            self._spinner_pos + 1\n            if self._spinner_pos + 1 !\u003d len(SPINNER)\n            else 0\n        )\n",
      "path": "httpie/downloads.py",
      "functionStartLine": 338,
      "functionName": "report_speed",
      "functionAnnotation": "",
      "diff": "@@ -1,53 +1,54 @@\n     def report_speed(self):\n \n         now \u003d time()\n \n         if now - self._prev_time \u003e\u003d self._update_interval:\n \n             downloaded \u003d self.progress.downloaded\n \n-            if self.progress.total_size:\n-                template \u003d PROGRESS\n-                percentage \u003d (\n-                    downloaded / self.progress.total_size * 100)\n-            else:\n-                template \u003d PROGRESS_NO_CONTENT_LENGTH\n-                percentage \u003d None\n-\n             try:\n                 # TODO: Use a longer interval for the speed/eta calculation?\n                 speed \u003d ((downloaded - self._prev_bytes)\n                          / (now - self._prev_time))\n-                s \u003d int((self.progress.total_size - downloaded) / speed)\n             except ZeroDivisionError:\n                 speed \u003d 0\n-                eta \u003d \u0027-:--:--\u0027\n+\n+            if not self.progress.total_size:\n+                template \u003d PROGRESS_NO_CONTENT_LENGTH\n+                percentage \u003d None\n+                eta \u003d None\n             else:\n-                h, s \u003d divmod(s, 60 * 60)\n-                m, s \u003d divmod(s, 60)\n-                eta \u003d \u0027{}:{:0\u003e2}:{:0\u003e2}\u0027.format(h, m, s)\n+                template \u003d PROGRESS\n+                percentage \u003d downloaded / self.progress.total_size * 100\n+                if not speed:\n+                    eta \u003d \u0027-:--:--\u0027\n+                else:\n+                    s \u003d int((self.progress.total_size - downloaded) / speed)\n+                    h, s \u003d divmod(s, 60 * 60)\n+                    m, s \u003d divmod(s, 60)\n+                    eta \u003d \u0027{}:{:0\u003e2}:{:0\u003e2}\u0027.format(h, m, s)\n \n             self._status_line \u003d template.format(\n                 percentage\u003dpercentage,\n                 downloaded\u003dhumanize_bytes(downloaded),\n                 speed\u003dhumanize_bytes(speed),\n                 eta\u003deta,\n             )\n \n             self._prev_time \u003d now\n             self._prev_bytes \u003d downloaded\n \n         self.output.write(\n             CLEAR_LINE\n             + \u0027 \u0027\n             + SPINNER[self._spinner_pos]\n             + \u0027 \u0027\n             + self._status_line\n         )\n         self.output.flush()\n \n         self._spinner_pos \u003d (\n             self._spinner_pos + 1\n             if self._spinner_pos + 1 !\u003d len(SPINNER)\n             else 0\n         )\n",
      "extendedDetails": {}
    },
    "c63a92f9b7fe6159ab83d49921131d725b3c5cfd": {
      "type": "Ybodychange",
      "commitMessage": "Cleanup\n",
      "commitDate": "2013/4/13 上午9:02",
      "commitName": "c63a92f9b7fe6159ab83d49921131d725b3c5cfd",
      "commitAuthor": "Jakub Roztocil",
      "commitDateOld": "2013/4/13 上午8:49",
      "commitNameOld": "d17e02792b5a2150f7be0ace1effcd361b0b5fd1",
      "commitAuthorOld": "Jakub Roztocil",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "    def report_speed(self):\n\n        now \u003d time()\n\n        if now - self._prev_time \u003e\u003d self._update_interval:\n\n            downloaded \u003d self.progress.downloaded\n\n            if self.progress.total_size:\n                template \u003d PROGRESS\n                percentage \u003d (\n                    downloaded / self.progress.total_size * 100)\n            else:\n                template \u003d PROGRESS_NO_CONTENT_LENGTH\n                percentage \u003d None\n\n            try:\n                # TODO: Use a longer interval for the speed/eta calculation?\n                speed \u003d ((downloaded - self._prev_bytes)\n                         / (now - self._prev_time))\n                s \u003d int((self.progress.total_size - downloaded) / speed)\n            except ZeroDivisionError:\n                speed \u003d 0\n                eta \u003d \u0027-:--:--\u0027\n            else:\n                h, s \u003d divmod(s, 60 * 60)\n                m, s \u003d divmod(s, 60)\n                eta \u003d \u0027{}:{:0\u003e2}:{:0\u003e2}\u0027.format(h, m, s)\n\n            self._status_line \u003d template.format(\n                percentage\u003dpercentage,\n                downloaded\u003dhumanize_bytes(downloaded),\n                speed\u003dhumanize_bytes(speed),\n                eta\u003deta,\n            )\n\n            self._prev_time \u003d now\n            self._prev_bytes \u003d downloaded\n\n        self.output.write(\n            CLEAR_LINE\n            + \u0027 \u0027\n            + SPINNER[self._spinner_pos]\n            + \u0027 \u0027\n            + self._status_line\n        )\n        self.output.flush()\n\n        self._spinner_pos \u003d (\n            self._spinner_pos + 1\n            if self._spinner_pos + 1 !\u003d len(SPINNER)\n            else 0\n        )\n",
      "path": "httpie/downloads.py",
      "functionStartLine": 338,
      "functionName": "report_speed",
      "functionAnnotation": "",
      "diff": "@@ -1,54 +1,53 @@\n     def report_speed(self):\n \n         now \u003d time()\n \n         if now - self._prev_time \u003e\u003d self._update_interval:\n \n             downloaded \u003d self.progress.downloaded\n \n             if self.progress.total_size:\n                 template \u003d PROGRESS\n                 percentage \u003d (\n                     downloaded / self.progress.total_size * 100)\n             else:\n                 template \u003d PROGRESS_NO_CONTENT_LENGTH\n                 percentage \u003d None\n \n             try:\n                 # TODO: Use a longer interval for the speed/eta calculation?\n                 speed \u003d ((downloaded - self._prev_bytes)\n                          / (now - self._prev_time))\n                 s \u003d int((self.progress.total_size - downloaded) / speed)\n             except ZeroDivisionError:\n                 speed \u003d 0\n                 eta \u003d \u0027-:--:--\u0027\n             else:\n                 h, s \u003d divmod(s, 60 * 60)\n                 m, s \u003d divmod(s, 60)\n                 eta \u003d \u0027{}:{:0\u003e2}:{:0\u003e2}\u0027.format(h, m, s)\n \n             self._status_line \u003d template.format(\n                 percentage\u003dpercentage,\n                 downloaded\u003dhumanize_bytes(downloaded),\n-                total\u003dself.progress.total_size_humanized,\n                 speed\u003dhumanize_bytes(speed),\n                 eta\u003deta,\n             )\n \n             self._prev_time \u003d now\n             self._prev_bytes \u003d downloaded\n \n         self.output.write(\n             CLEAR_LINE\n             + \u0027 \u0027\n             + SPINNER[self._spinner_pos]\n             + \u0027 \u0027\n             + self._status_line\n         )\n         self.output.flush()\n \n         self._spinner_pos \u003d (\n             self._spinner_pos + 1\n             if self._spinner_pos + 1 !\u003d len(SPINNER)\n             else 0\n         )\n",
      "extendedDetails": {}
    },
    "d17e02792b5a2150f7be0ace1effcd361b0b5fd1": {
      "type": "Ybodychange",
      "commitMessage": "Fixed length progress bar.\n",
      "commitDate": "2013/4/13 上午8:49",
      "commitName": "d17e02792b5a2150f7be0ace1effcd361b0b5fd1",
      "commitAuthor": "Jakub Roztocil",
      "commitDateOld": "2013/4/13 上午1:07",
      "commitNameOld": "289e9b844efef10e2cf2ce751c0cc3ab395a4bbd",
      "commitAuthorOld": "Jakub Roztocil",
      "daysBetweenCommits": 0.32,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "    def report_speed(self):\n\n        now \u003d time()\n\n        if now - self._prev_time \u003e\u003d self._update_interval:\n\n            downloaded \u003d self.progress.downloaded\n\n            if self.progress.total_size:\n                template \u003d PROGRESS\n                percentage \u003d (\n                    downloaded / self.progress.total_size * 100)\n            else:\n                template \u003d PROGRESS_NO_CONTENT_LENGTH\n                percentage \u003d None\n\n            try:\n                # TODO: Use a longer interval for the speed/eta calculation?\n                speed \u003d ((downloaded - self._prev_bytes)\n                         / (now - self._prev_time))\n                s \u003d int((self.progress.total_size - downloaded) / speed)\n            except ZeroDivisionError:\n                speed \u003d 0\n                eta \u003d \u0027-:--:--\u0027\n            else:\n                h, s \u003d divmod(s, 60 * 60)\n                m, s \u003d divmod(s, 60)\n                eta \u003d \u0027{}:{:0\u003e2}:{:0\u003e2}\u0027.format(h, m, s)\n\n            self._status_line \u003d template.format(\n                percentage\u003dpercentage,\n                downloaded\u003dhumanize_bytes(downloaded),\n                total\u003dself.progress.total_size_humanized,\n                speed\u003dhumanize_bytes(speed),\n                eta\u003deta,\n            )\n\n            self._prev_time \u003d now\n            self._prev_bytes \u003d downloaded\n\n        self.output.write(\n            CLEAR_LINE\n            + \u0027 \u0027\n            + SPINNER[self._spinner_pos]\n            + \u0027 \u0027\n            + self._status_line\n        )\n        self.output.flush()\n\n        self._spinner_pos \u003d (\n            self._spinner_pos + 1\n            if self._spinner_pos + 1 !\u003d len(SPINNER)\n            else 0\n        )\n",
      "path": "httpie/downloads.py",
      "functionStartLine": 338,
      "functionName": "report_speed",
      "functionAnnotation": "",
      "diff": "@@ -1,50 +1,54 @@\n     def report_speed(self):\n \n         now \u003d time()\n \n         if now - self._prev_time \u003e\u003d self._update_interval:\n \n             downloaded \u003d self.progress.downloaded\n \n             if self.progress.total_size:\n                 template \u003d PROGRESS\n                 percentage \u003d (\n                     downloaded / self.progress.total_size * 100)\n             else:\n                 template \u003d PROGRESS_NO_CONTENT_LENGTH\n                 percentage \u003d None\n \n             try:\n                 # TODO: Use a longer interval for the speed/eta calculation?\n                 speed \u003d ((downloaded - self._prev_bytes)\n                          / (now - self._prev_time))\n-                eta \u003d int((self.progress.total_size - downloaded) / speed)\n-                eta \u003d str(timedelta(seconds\u003deta))\n+                s \u003d int((self.progress.total_size - downloaded) / speed)\n             except ZeroDivisionError:\n                 speed \u003d 0\n-                eta \u003d \u0027?\u0027\n+                eta \u003d \u0027-:--:--\u0027\n+            else:\n+                h, s \u003d divmod(s, 60 * 60)\n+                m, s \u003d divmod(s, 60)\n+                eta \u003d \u0027{}:{:0\u003e2}:{:0\u003e2}\u0027.format(h, m, s)\n \n             self._status_line \u003d template.format(\n                 percentage\u003dpercentage,\n                 downloaded\u003dhumanize_bytes(downloaded),\n                 total\u003dself.progress.total_size_humanized,\n                 speed\u003dhumanize_bytes(speed),\n                 eta\u003deta,\n             )\n \n             self._prev_time \u003d now\n             self._prev_bytes \u003d downloaded\n \n         self.output.write(\n             CLEAR_LINE\n+            + \u0027 \u0027\n             + SPINNER[self._spinner_pos]\n             + \u0027 \u0027\n             + self._status_line\n         )\n         self.output.flush()\n \n         self._spinner_pos \u003d (\n             self._spinner_pos + 1\n             if self._spinner_pos + 1 !\u003d len(SPINNER)\n             else 0\n         )\n",
      "extendedDetails": {}
    },
    "347653b369298c66fc046597d20981380a2c9394": {
      "type": "Ybodychange",
      "commitMessage": "Performance and progress bar improvements.\n\n  #104\n",
      "commitDate": "2013/4/12 下午7:59",
      "commitName": "347653b369298c66fc046597d20981380a2c9394",
      "commitAuthor": "Jakub Roztocil",
      "commitDateOld": "2013/4/12 上午5:51",
      "commitNameOld": "ebfce6fb93b077a039a5aef7f5deb0e5f23b5c28",
      "commitAuthorOld": "Jakub Roztocil",
      "daysBetweenCommits": 0.59,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "    def report_speed(self):\n\n        now \u003d time()\n\n        if now - self._prev_time \u003e\u003d self._update_interval:\n\n            downloaded \u003d self.progress.downloaded\n\n            if self.progress.total_size:\n                template \u003d PROGRESS\n                percentage \u003d (\n                    downloaded / self.progress.total_size * 100)\n            else:\n                template \u003d PROGRESS_NO_CONTENT_LENGTH\n                percentage \u003d None\n\n            try:\n                # TODO: Use a longer interval for the speed/eta calculation?\n                speed \u003d ((downloaded - self._prev_bytes)\n                         / (now - self._prev_time))\n                eta \u003d int((self.progress.total_size - downloaded) / speed)\n                eta \u003d str(timedelta(seconds\u003deta))\n            except ZeroDivisionError:\n                speed \u003d 0\n                eta \u003d \u0027?\u0027\n\n            self._status_line \u003d template.format(\n                percentage\u003dpercentage,\n                downloaded\u003dhumanize_bytes(downloaded),\n                total\u003dself.progress.total_size_humanized,\n                speed\u003dhumanize_bytes(speed),\n                eta\u003deta,\n            )\n\n            self._prev_time \u003d now\n            self._prev_bytes \u003d downloaded\n\n        self.output.write(\n            CLEAR_LINE\n            + SPINNER[self._spinner_pos]\n            + \u0027 \u0027\n            + self._status_line\n        )\n        self.output.flush()\n\n        self._spinner_pos \u003d (\n            self._spinner_pos + 1\n            if self._spinner_pos + 1 !\u003d len(SPINNER)\n            else 0\n        )\n",
      "path": "httpie/downloads.py",
      "functionStartLine": 311,
      "functionName": "report_speed",
      "functionAnnotation": "",
      "diff": "@@ -1,34 +1,50 @@\n     def report_speed(self):\n \n-        downloaded \u003d self.progress.downloaded\n         now \u003d time()\n \n-        if self.progress.total_size:\n-            template \u003d PROGRESS\n-            percentage \u003d (\n-                downloaded / self.progress.total_size * 100)\n-        else:\n-            template \u003d PROGRESS_NO_CONTENT_LENGTH\n-            percentage \u003d None\n+        if now - self._prev_time \u003e\u003d self._update_interval:\n \n-        if now - self._prev_time \u003e\u003d self._speed_interval:\n-            # Update reported speed\n-            self._speed \u003d (\n-                (downloaded - self._prev_bytes) / (now - self._prev_time))\n+            downloaded \u003d self.progress.downloaded\n+\n+            if self.progress.total_size:\n+                template \u003d PROGRESS\n+                percentage \u003d (\n+                    downloaded / self.progress.total_size * 100)\n+            else:\n+                template \u003d PROGRESS_NO_CONTENT_LENGTH\n+                percentage \u003d None\n+\n+            try:\n+                # TODO: Use a longer interval for the speed/eta calculation?\n+                speed \u003d ((downloaded - self._prev_bytes)\n+                         / (now - self._prev_time))\n+                eta \u003d int((self.progress.total_size - downloaded) / speed)\n+                eta \u003d str(timedelta(seconds\u003deta))\n+            except ZeroDivisionError:\n+                speed \u003d 0\n+                eta \u003d \u0027?\u0027\n+\n+            self._status_line \u003d template.format(\n+                percentage\u003dpercentage,\n+                downloaded\u003dhumanize_bytes(downloaded),\n+                total\u003dself.progress.total_size_humanized,\n+                speed\u003dhumanize_bytes(speed),\n+                eta\u003deta,\n+            )\n+\n             self._prev_time \u003d now\n             self._prev_bytes \u003d downloaded\n \n-        self.output.write(CLEAR_LINE)\n-        self.output.write(template.format(\n-            spinner\u003dSPINNER[self._spinner_pos],\n-            percentage\u003dpercentage,\n-            downloaded\u003dhumanize_bytes(downloaded),\n-            total\u003dself.progress.total_size_humanized,\n-            speed\u003dhumanize_bytes(self._speed)\n-        ))\n+        self.output.write(\n+            CLEAR_LINE\n+            + SPINNER[self._spinner_pos]\n+            + \u0027 \u0027\n+            + self._status_line\n+        )\n         self.output.flush()\n \n-        if downloaded \u003e self._prev_bytes:\n-            self._spinner_pos +\u003d 1\n-            if self._spinner_pos \u003d\u003d len(SPINNER):\n-                self._spinner_pos \u003d 0\n+        self._spinner_pos \u003d (\n+            self._spinner_pos + 1\n+            if self._spinner_pos + 1 !\u003d len(SPINNER)\n+            else 0\n+        )\n",
      "extendedDetails": {}
    },
    "ebfce6fb93b077a039a5aef7f5deb0e5f23b5c28": {
      "type": "Yintroduced",
      "commitMessage": "Improved progress bar (#104).\n",
      "commitDate": "2013/4/12 上午5:51",
      "commitName": "ebfce6fb93b077a039a5aef7f5deb0e5f23b5c28",
      "commitAuthor": "Jakub Roztocil",
      "diff": "@@ -0,0 +1,34 @@\n+    def report_speed(self):\n+\n+        downloaded \u003d self.progress.downloaded\n+        now \u003d time()\n+\n+        if self.progress.total_size:\n+            template \u003d PROGRESS\n+            percentage \u003d (\n+                downloaded / self.progress.total_size * 100)\n+        else:\n+            template \u003d PROGRESS_NO_CONTENT_LENGTH\n+            percentage \u003d None\n+\n+        if now - self._prev_time \u003e\u003d self._speed_interval:\n+            # Update reported speed\n+            self._speed \u003d (\n+                (downloaded - self._prev_bytes) / (now - self._prev_time))\n+            self._prev_time \u003d now\n+            self._prev_bytes \u003d downloaded\n+\n+        self.output.write(CLEAR_LINE)\n+        self.output.write(template.format(\n+            spinner\u003dSPINNER[self._spinner_pos],\n+            percentage\u003dpercentage,\n+            downloaded\u003dhumanize_bytes(downloaded),\n+            total\u003dself.progress.total_size_humanized,\n+            speed\u003dhumanize_bytes(self._speed)\n+        ))\n+        self.output.flush()\n+\n+        if downloaded \u003e self._prev_bytes:\n+            self._spinner_pos +\u003d 1\n+            if self._spinner_pos \u003d\u003d len(SPINNER):\n+                self._spinner_pos \u003d 0\n",
      "actualSource": "    def report_speed(self):\n\n        downloaded \u003d self.progress.downloaded\n        now \u003d time()\n\n        if self.progress.total_size:\n            template \u003d PROGRESS\n            percentage \u003d (\n                downloaded / self.progress.total_size * 100)\n        else:\n            template \u003d PROGRESS_NO_CONTENT_LENGTH\n            percentage \u003d None\n\n        if now - self._prev_time \u003e\u003d self._speed_interval:\n            # Update reported speed\n            self._speed \u003d (\n                (downloaded - self._prev_bytes) / (now - self._prev_time))\n            self._prev_time \u003d now\n            self._prev_bytes \u003d downloaded\n\n        self.output.write(CLEAR_LINE)\n        self.output.write(template.format(\n            spinner\u003dSPINNER[self._spinner_pos],\n            percentage\u003dpercentage,\n            downloaded\u003dhumanize_bytes(downloaded),\n            total\u003dself.progress.total_size_humanized,\n            speed\u003dhumanize_bytes(self._speed)\n        ))\n        self.output.flush()\n\n        if downloaded \u003e self._prev_bytes:\n            self._spinner_pos +\u003d 1\n            if self._spinner_pos \u003d\u003d len(SPINNER):\n                self._spinner_pos \u003d 0\n",
      "path": "httpie/downloads.py",
      "functionStartLine": 308,
      "functionName": "report_speed",
      "functionAnnotation": ""
    }
  }
}