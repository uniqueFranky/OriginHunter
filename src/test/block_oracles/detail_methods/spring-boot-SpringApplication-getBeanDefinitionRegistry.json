{
  "origin": "codeshovel",
  "repositoryName": "spring-boot",
  "repositoryPath": "/Users/franky/Documents/Homework/毕业设计/testcase/spring-boot/.git",
  "startCommitName": "5cfe8dbee950dbf3a8de3ece2f6f3363f13d904a",
  "sourceFileName": "SpringApplication.java",
  "functionName": "getBeanDefinitionRegistry",
  "functionId": "getBeanDefinitionRegistry___context-ApplicationContext",
  "sourceFilePath": "spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java",
  "functionAnnotation": "",
  "functionDoc": "Get the bean definition registry.\n\n@param context the application context\n@return the BeanDefinitionRegistry if it can be determined\n",
  "functionStartLine": 741,
  "functionEndLine": 750,
  "numCommitsSeen": 212,
  "timeTaken": 3726,
  "changeHistory": [
    "0ba4830b4fb20deea040ca5e1c9a34651708b222",
    "e674d751dee33e295755ec6c58895aa3d448471e",
    "345c0fc5a490cc792559eab4c42cbc2e7739e729",
    "b665a2bb1d898f251da348beba8b71b3ac34497f",
    "3f2bb03fb8ebc6a44a7ca3add21b53b906e74424",
    "2098e23fca3858e218f055373665fb1cf2188fdc",
    "0b863611d9563d6a41ebe219925e68be407e501a",
    "cd51f357a3cfae04954ac6dce5134c3e2a6ad241",
    "261955c50b8fb44311324d2188bf6e3f92237e0c",
    "40bf33487177a26e578486942218449658c5e715",
    "20cce0c69c53d996bb6e9c919b0755a2860a7817"
  ],
  "changeHistoryShort": {
    "0ba4830b4fb20deea040ca5e1c9a34651708b222": "Yfilerename",
    "e674d751dee33e295755ec6c58895aa3d448471e": "Ydocchange",
    "345c0fc5a490cc792559eab4c42cbc2e7739e729": "Ybodychange",
    "b665a2bb1d898f251da348beba8b71b3ac34497f": "Ymovefromfile",
    "3f2bb03fb8ebc6a44a7ca3add21b53b906e74424": "Yfilerename",
    "2098e23fca3858e218f055373665fb1cf2188fdc": "Ymovefromfile",
    "0b863611d9563d6a41ebe219925e68be407e501a": "Ymovefromfile",
    "cd51f357a3cfae04954ac6dce5134c3e2a6ad241": "Yfilerename",
    "261955c50b8fb44311324d2188bf6e3f92237e0c": "Ymovefromfile",
    "40bf33487177a26e578486942218449658c5e715": "Yfilerename",
    "20cce0c69c53d996bb6e9c919b0755a2860a7817": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0ba4830b4fb20deea040ca5e1c9a34651708b222": {
      "type": "Yfilerename",
      "commitMessage": "Relocate projects to spring-boot-project\n\nMove projects to better reflect the way that Spring Boot is released.\n\nThe following projects are under `spring-boot-project`:\n\n  - `spring-boot`\n  - `spring-boot-autoconfigure`\n  - `spring-boot-tools`\n  - `spring-boot-starters`\n  - `spring-boot-actuator`\n  - `spring-boot-actuator-autoconfigure`\n  - `spring-boot-test`\n  - `spring-boot-test-autoconfigure`\n  - `spring-boot-devtools`\n  - `spring-boot-cli`\n  - `spring-boot-docs`\n\nSee gh-9316\n",
      "commitDate": "2017/10/5 上午7:34",
      "commitName": "0ba4830b4fb20deea040ca5e1c9a34651708b222",
      "commitAuthor": "Phillip Webb",
      "commitDateOld": "2017/10/5 上午7:04",
      "commitNameOld": "0419d42b7ca37611955bc0211359c215e5477fa4",
      "commitAuthorOld": "Phillip Webb",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {\n    if (context instanceof BeanDefinitionRegistry) {\n        return (BeanDefinitionRegistry) context;\n    }\n    if (context instanceof AbstractApplicationContext) {\n        return (BeanDefinitionRegistry) ((AbstractApplicationContext) context).getBeanFactory();\n    }\n    throw new IllegalStateException(\"Could not locate BeanDefinitionRegistry\");\n}",
      "path": "spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java",
      "functionStartLine": 722,
      "functionName": "getBeanDefinitionRegistry",
      "functionAnnotation": "",
      "functionDoc": "Get the bean definition registry.\n\n@param context the application context\n@return the BeanDefinitionRegistry if it can be determined\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "spring-boot/src/main/java/org/springframework/boot/SpringApplication.java",
        "newPath": "spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java"
      }
    },
    "e674d751dee33e295755ec6c58895aa3d448471e": {
      "type": "Ydocchange",
      "commitMessage": "Polish Javadoc\n",
      "commitDate": "2015/9/9 上午8:01",
      "commitName": "e674d751dee33e295755ec6c58895aa3d448471e",
      "commitAuthor": "Phillip Webb",
      "commitDateOld": "2015/9/4 上午2:30",
      "commitNameOld": "f4dcef281cfe227ce22a6570b3734ba4bea92db0",
      "commitAuthorOld": "",
      "daysBetweenCommits": 5.23,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "actualSource": "private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {\n    if (context instanceof BeanDefinitionRegistry) {\n        return (BeanDefinitionRegistry) context;\n    }\n    if (context instanceof AbstractApplicationContext) {\n        return (BeanDefinitionRegistry) ((AbstractApplicationContext) context).getBeanFactory();\n    }\n    throw new IllegalStateException(\"Could not locate BeanDefinitionRegistry\");\n}",
      "path": "spring-boot/src/main/java/org/springframework/boot/SpringApplication.java",
      "functionStartLine": 643,
      "functionName": "getBeanDefinitionRegistry",
      "functionAnnotation": "",
      "functionDoc": "Get the bean definition registry.\n\n@param context the application context\n@return the BeanDefinitionRegistry if it can be determined\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "\n@param context the application context\n@return the BeanDefinitionRegistry if it can be determined\n",
        "newValue": "Get the bean definition registry.\n\n@param context the application context\n@return the BeanDefinitionRegistry if it can be determined\n"
      }
    },
    "345c0fc5a490cc792559eab4c42cbc2e7739e729": {
      "type": "Ybodychange",
      "commitMessage": "Add SpringApplicationBuilder\n\nBuilder for SpringApplication and ApplicationContext instances with\nconvenient fluent API and context hierarchy support. Simple example\nof a context hierarchy:\n\n   new SpringApplicationBuilder(ParentConfig.class)\n               .child(ChildConfig.class).run(args);\n\nAnother common use case is setting default arguments, e.g.\nactive Spring profiles, to set up the environment for an application:\n\n     new SpringApplicationBuilder(Application.class).profiles(\"server\")\n \t\t.defaultArgs(\"--transport\u003dlocal\").run(args);\n\nIf your needs are simpler, consider using the static convenience\nmethods in SpringApplication instead.\n\n[#49703716] [bs-116] Parent context for some beans maybe?\n",
      "commitDate": "2013/10/2 下午7:06",
      "commitName": "345c0fc5a490cc792559eab4c42cbc2e7739e729",
      "commitAuthor": "Dave Syer",
      "commitDateOld": "2013/9/6 上午8:14",
      "commitNameOld": "6edc7570c107edd8d0593b9d3e6f7adc81e7030e",
      "commitAuthorOld": "Phillip Webb",
      "daysBetweenCommits": 26.45,
      "commitsBetweenForRepo": 115,
      "commitsBetweenForFile": 1,
      "actualSource": "private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {\n    if (context instanceof BeanDefinitionRegistry) {\n        return (BeanDefinitionRegistry) context;\n    }\n    if (context instanceof AbstractApplicationContext) {\n        return (BeanDefinitionRegistry) ((AbstractApplicationContext) context).getBeanFactory();\n    }\n    throw new IllegalStateException(\"Could not locate BeanDefinitionRegistry\");\n}",
      "path": "spring-boot/src/main/java/org/springframework/boot/SpringApplication.java",
      "functionStartLine": 466,
      "functionName": "getBeanDefinitionRegistry",
      "functionAnnotation": "",
      "functionDoc": "\n@param context the application context\n@return the BeanDefinitionRegistry if it can be determined\n",
      "diff": "@@ -1,6 +1,9 @@\n private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {\n     if (context instanceof BeanDefinitionRegistry) {\n         return (BeanDefinitionRegistry) context;\n     }\n+    if (context instanceof AbstractApplicationContext) {\n+        return (BeanDefinitionRegistry) ((AbstractApplicationContext) context).getBeanFactory();\n+    }\n     throw new IllegalStateException(\"Could not locate BeanDefinitionRegistry\");\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b665a2bb1d898f251da348beba8b71b3ac34497f": {
      "type": "Ymovefromfile",
      "commitMessage": "Renamed packages\n\nIssue: #54095231\n",
      "commitDate": "2013/7/27 上午5:11",
      "commitName": "b665a2bb1d898f251da348beba8b71b3ac34497f",
      "commitAuthor": "Phillip Webb",
      "commitDateOld": "2013/7/27 上午3:31",
      "commitNameOld": "3f2bb03fb8ebc6a44a7ca3add21b53b906e74424",
      "commitAuthorOld": "Phillip Webb",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {\n    if (context instanceof BeanDefinitionRegistry) {\n        return (BeanDefinitionRegistry) context;\n    }\n    throw new IllegalStateException(\"Could not locate BeanDefinitionRegistry\");\n}",
      "path": "spring-boot/src/main/java/org/springframework/boot/SpringApplication.java",
      "functionStartLine": 444,
      "functionName": "getBeanDefinitionRegistry",
      "functionAnnotation": "",
      "functionDoc": "\n@param context the application context\n@return the BeanDefinitionRegistry if it can be determined\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "spring-boot/src/main/java/org/springframework/boot/strap/SpringApplication.java",
        "newPath": "spring-boot/src/main/java/org/springframework/boot/SpringApplication.java",
        "oldMethodName": "getBeanDefinitionRegistry",
        "newMethodName": "getBeanDefinitionRegistry"
      }
    },
    "3f2bb03fb8ebc6a44a7ca3add21b53b906e74424": {
      "type": "Yfilerename",
      "commitMessage": "Renamed some projects and polish POMs\n\nIssue: #54095231\n",
      "commitDate": "2013/7/27 上午3:31",
      "commitName": "3f2bb03fb8ebc6a44a7ca3add21b53b906e74424",
      "commitAuthor": "Phillip Webb",
      "commitDateOld": "2013/7/27 上午12:54",
      "commitNameOld": "06ddd92438d7d2e64f2c54da5932efbd4b47f1b9",
      "commitAuthorOld": "Dave Syer",
      "daysBetweenCommits": 0.11,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {\n    if (context instanceof BeanDefinitionRegistry) {\n        return (BeanDefinitionRegistry) context;\n    }\n    throw new IllegalStateException(\"Could not locate BeanDefinitionRegistry\");\n}",
      "path": "spring-boot/src/main/java/org/springframework/boot/strap/SpringApplication.java",
      "functionStartLine": 444,
      "functionName": "getBeanDefinitionRegistry",
      "functionAnnotation": "",
      "functionDoc": "\n@param context the application context\n@return the BeanDefinitionRegistry if it can be determined\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "spring-boot-strap/src/main/java/org/springframework/boot/strap/SpringApplication.java",
        "newPath": "spring-boot/src/main/java/org/springframework/boot/strap/SpringApplication.java"
      }
    },
    "2098e23fca3858e218f055373665fb1cf2188fdc": {
      "type": "Ymovefromfile",
      "commitMessage": "Change package names zero-\u003eboot\n\n* actuator -\u003e boot-ops\n* cli -\u003e boot-cli\n* launcher -\u003e boot-load\n* autoconfig -\u003e boot-config\n* bootstrap -\u003e boot-strap\n* starters -\u003e boot-up\n\n[#54095231] [bs-253] Refactor Zero-\u003eBoot\n",
      "commitDate": "2013/7/26 下午9:13",
      "commitName": "2098e23fca3858e218f055373665fb1cf2188fdc",
      "commitAuthor": "Dave Syer",
      "commitDateOld": "2013/7/26 下午6:11",
      "commitNameOld": "b2873fbc2d55c007d7fbc882bbcff701173b1887",
      "commitAuthorOld": "Dave Syer",
      "daysBetweenCommits": 0.13,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {\n    if (context instanceof BeanDefinitionRegistry) {\n        return (BeanDefinitionRegistry) context;\n    }\n    throw new IllegalStateException(\"Could not locate BeanDefinitionRegistry\");\n}",
      "path": "spring-boot-strap/src/main/java/org/springframework/boot/strap/SpringApplication.java",
      "functionStartLine": 444,
      "functionName": "getBeanDefinitionRegistry",
      "functionAnnotation": "",
      "functionDoc": "\n@param context the application context\n@return the BeanDefinitionRegistry if it can be determined\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "spring-bootstrap/src/main/java/org/springframework/bootstrap/SpringApplication.java",
        "newPath": "spring-boot-strap/src/main/java/org/springframework/boot/strap/SpringApplication.java",
        "oldMethodName": "getBeanDefinitionRegistry",
        "newMethodName": "getBeanDefinitionRegistry"
      }
    },
    "0b863611d9563d6a41ebe219925e68be407e501a": {
      "type": "Ymovefromfile",
      "commitMessage": "Package restructure\n",
      "commitDate": "2013/7/9 上午4:42",
      "commitName": "0b863611d9563d6a41ebe219925e68be407e501a",
      "commitAuthor": "Phillip Webb",
      "commitDateOld": "2013/7/9 上午4:42",
      "commitNameOld": "cd51f357a3cfae04954ac6dce5134c3e2a6ad241",
      "commitAuthorOld": "Phillip Webb",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {\n    if (context instanceof BeanDefinitionRegistry) {\n        return (BeanDefinitionRegistry) context;\n    }\n    throw new IllegalStateException(\"Could not locate BeanDefinitionRegistry\");\n}",
      "path": "spring-bootstrap/src/main/java/org/springframework/bootstrap/SpringApplication.java",
      "functionStartLine": 416,
      "functionName": "getBeanDefinitionRegistry",
      "functionAnnotation": "",
      "functionDoc": "\n@param context the application context\n@return the BeanDefinitionRegistry if it can be determined\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "spring-bootstrap/src/main/java/org/springframework/zero/SpringApplication.java",
        "newPath": "spring-bootstrap/src/main/java/org/springframework/bootstrap/SpringApplication.java",
        "oldMethodName": "getBeanDefinitionRegistry",
        "newMethodName": "getBeanDefinitionRegistry"
      }
    },
    "cd51f357a3cfae04954ac6dce5134c3e2a6ad241": {
      "type": "Yfilerename",
      "commitMessage": "Further maven module restructure\n",
      "commitDate": "2013/7/9 上午4:42",
      "commitName": "cd51f357a3cfae04954ac6dce5134c3e2a6ad241",
      "commitAuthor": "Phillip Webb",
      "commitDateOld": "2013/7/9 上午4:42",
      "commitNameOld": "9fde0a3715d00c1a3fc968b856db036ca4a8845c",
      "commitAuthorOld": "Phillip Webb",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {\n    if (context instanceof BeanDefinitionRegistry) {\n        return (BeanDefinitionRegistry) context;\n    }\n    throw new IllegalStateException(\"Could not locate BeanDefinitionRegistry\");\n}",
      "path": "spring-bootstrap/src/main/java/org/springframework/zero/SpringApplication.java",
      "functionStartLine": 416,
      "functionName": "getBeanDefinitionRegistry",
      "functionAnnotation": "",
      "functionDoc": "\n@param context the application context\n@return the BeanDefinitionRegistry if it can be determined\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "spring-zero-core/src/main/java/org/springframework/zero/SpringApplication.java",
        "newPath": "spring-bootstrap/src/main/java/org/springframework/zero/SpringApplication.java"
      }
    },
    "261955c50b8fb44311324d2188bf6e3f92237e0c": {
      "type": "Ymovefromfile",
      "commitMessage": "Restructure \u0027bootstrap\u0027 to use \u0027zero\u0027\n",
      "commitDate": "2013/7/9 上午4:42",
      "commitName": "261955c50b8fb44311324d2188bf6e3f92237e0c",
      "commitAuthor": "Phillip Webb",
      "commitDateOld": "2013/7/9 上午4:42",
      "commitNameOld": "d039822064b3ed1c16973428fc4b477f8b86048e",
      "commitAuthorOld": "Phillip Webb",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {\n    if (context instanceof BeanDefinitionRegistry) {\n        return (BeanDefinitionRegistry) context;\n    }\n    throw new IllegalStateException(\"Could not locate BeanDefinitionRegistry\");\n}",
      "path": "spring-zero-core/src/main/java/org/springframework/zero/SpringApplication.java",
      "functionStartLine": 412,
      "functionName": "getBeanDefinitionRegistry",
      "functionAnnotation": "",
      "functionDoc": "\n@param context the application context\n@return the BeanDefinitionRegistry if it can be determined\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "spring-zero-core/src/main/java/org/springframework/bootstrap/SpringApplication.java",
        "newPath": "spring-zero-core/src/main/java/org/springframework/zero/SpringApplication.java",
        "oldMethodName": "getBeanDefinitionRegistry",
        "newMethodName": "getBeanDefinitionRegistry"
      }
    },
    "40bf33487177a26e578486942218449658c5e715": {
      "type": "Yfilerename",
      "commitMessage": "Restructure projects layout\n",
      "commitDate": "2013/7/9 上午4:42",
      "commitName": "40bf33487177a26e578486942218449658c5e715",
      "commitAuthor": "Phillip Webb",
      "commitDateOld": "2013/7/8 下午7:32",
      "commitNameOld": "3996353e3513c86ca74f983f09c8491712ca48cf",
      "commitAuthorOld": "Dave Syer",
      "daysBetweenCommits": 0.38,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {\n    if (context instanceof BeanDefinitionRegistry) {\n        return (BeanDefinitionRegistry) context;\n    }\n    throw new IllegalStateException(\"Could not locate BeanDefinitionRegistry\");\n}",
      "path": "spring-zero-core/src/main/java/org/springframework/bootstrap/SpringApplication.java",
      "functionStartLine": 412,
      "functionName": "getBeanDefinitionRegistry",
      "functionAnnotation": "",
      "functionDoc": "\n@param context the application context\n@return the BeanDefinitionRegistry if it can be determined\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "spring-bootstrap/src/main/java/org/springframework/bootstrap/SpringApplication.java",
        "newPath": "spring-zero-core/src/main/java/org/springframework/bootstrap/SpringApplication.java"
      }
    },
    "20cce0c69c53d996bb6e9c919b0755a2860a7817": {
      "type": "Yintroduced",
      "commitMessage": "[bs-52] Added support for SpringApplication in a ServletContextInitializer\n\nWAR applications should extend SpringServletInitializer to take advantage\nof Servlet 3.0 initialization and SpringApplication context loading features.\n\n[#48386505] [bs-52] Support for running \"traditional\" webapps in place\n",
      "commitDate": "2013/6/11 下午2:40",
      "commitName": "20cce0c69c53d996bb6e9c919b0755a2860a7817",
      "commitAuthor": "Dave Syer",
      "diff": "@@ -0,0 +1,6 @@\n+private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {\n+    if (context instanceof BeanDefinitionRegistry) {\n+        return (BeanDefinitionRegistry) context;\n+    }\n+    throw new IllegalStateException(\"Could not locate BeanDefinitionRegistry\");\n+}\n\\ No newline at end of file\n",
      "actualSource": "private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {\n    if (context instanceof BeanDefinitionRegistry) {\n        return (BeanDefinitionRegistry) context;\n    }\n    throw new IllegalStateException(\"Could not locate BeanDefinitionRegistry\");\n}",
      "path": "spring-bootstrap/src/main/java/org/springframework/bootstrap/SpringApplication.java",
      "functionStartLine": 412,
      "functionName": "getBeanDefinitionRegistry",
      "functionAnnotation": "",
      "functionDoc": "\n@param context the application context\n@return the BeanDefinitionRegistry if it can be determined\n"
    }
  }
}