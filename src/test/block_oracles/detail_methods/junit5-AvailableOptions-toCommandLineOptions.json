{
  "origin": "codeshovel",
  "repositoryName": "junit5",
  "repositoryPath": "/Users/franky/Documents/Homework/毕业设计/testcase/junit5/.git",
  "startCommitName": "77cfe71e7f787c59626198e25350545f41e968bd",
  "sourceFileName": "AvailableOptions.java",
  "functionName": "toCommandLineOptions",
  "functionId": "toCommandLineOptions___detectedOptions-OptionSet",
  "sourceFilePath": "junit-platform-console/src/main/java/org/junit/platform/console/options/AvailableOptions.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 220,
  "functionEndLine": 264,
  "numCommitsSeen": 65,
  "timeTaken": 1997,
  "changeHistory": [
    "c52afe0668c462a5935a708cb396d234eeb018d4",
    "b3cec572c6334095f84ec009d5488370119e62c9",
    "f9c6e768eb82df9b8a11da5c7a9f64b889dad44d",
    "3e042ee4923b029711682d81cec89e33d48cf842",
    "e909f6f1acae468907e09fa23edb90c1143e7fb9",
    "7661592bbfaf2a3b541a0bd3a56993cb4834c12e",
    "b10a4ee18d51d93180d22f5cd1c04d12bd2d185e",
    "b701ea2fc13c53db6259e48b36e5c24d463b90ea",
    "a64e354fa285ecd9297521ca327d9fbed34c21c9",
    "d1043ffcc05ab6f6626868dab808ebf65a0c311c",
    "536acefeb28ee6a37853b4fccc3850f43e543861",
    "adaf70d9d08a3ab2002e6365ea9ae52c5013c8d4",
    "36665aadaa829bc2bc003e245fa05e99f2bebfd8",
    "1243f3dfa6df67ec1fa45ea884d8f7993bf5bbe8",
    "8cf2a7b372be1436f73d2803891cc305275913a6",
    "862e93157164d37eaa1b087aaa9d3d449ac792c6",
    "14dc25aaf77f1694aef55e1f593c6584b997769a",
    "75da1de42ac3fffb0e28acc4bf5312dcf22ff84c",
    "f2e6ef078a40e97ee16aebbf262c0ed4a4a0b01b",
    "631e03ab0260c14df6bec3b1292961e1d4b24b8e",
    "e568a3563c417829a20eec988daa98797c8391b3",
    "4972eb58d680a30e8fbd1ffb6cdc6477bef83374",
    "4537bec58804c392a8bce296dced0337c8ec1a8d",
    "8f23f4fa7eb977b718a0b3be1c20c7814a3b12a1",
    "85f3156214f0ee205b6caaaef87bd291700188ff",
    "5707c028b2183766383c8fe83b0b662495cba59d",
    "ea2127a5cfc44f137902241203b444dcd23c5051",
    "30a17b707b00b3274fba81f4670111c15363e37c",
    "48dd35c9002c80eeb666f56489785d1bf47f9aa4",
    "69b0a0138e4c3158504f7b382cdf05cc1e05b92e",
    "591eab7207b37451a23c89cb7746ad80344a9078",
    "e9b1bd435dc182d13f610948024659a99bd727da",
    "550e5b1d774d538ecfa22d7efe8fe893dcd9fa06"
  ],
  "changeHistoryShort": {
    "c52afe0668c462a5935a708cb396d234eeb018d4": "Ybodychange",
    "b3cec572c6334095f84ec009d5488370119e62c9": "Ybodychange",
    "f9c6e768eb82df9b8a11da5c7a9f64b889dad44d": "Ybodychange",
    "3e042ee4923b029711682d81cec89e33d48cf842": "Ybodychange",
    "e909f6f1acae468907e09fa23edb90c1143e7fb9": "Ybodychange",
    "7661592bbfaf2a3b541a0bd3a56993cb4834c12e": "Ybodychange",
    "b10a4ee18d51d93180d22f5cd1c04d12bd2d185e": "Ybodychange",
    "b701ea2fc13c53db6259e48b36e5c24d463b90ea": "Ybodychange",
    "a64e354fa285ecd9297521ca327d9fbed34c21c9": "Ybodychange",
    "d1043ffcc05ab6f6626868dab808ebf65a0c311c": "Ybodychange",
    "536acefeb28ee6a37853b4fccc3850f43e543861": "Ybodychange",
    "adaf70d9d08a3ab2002e6365ea9ae52c5013c8d4": "Ybodychange",
    "36665aadaa829bc2bc003e245fa05e99f2bebfd8": "Ybodychange",
    "1243f3dfa6df67ec1fa45ea884d8f7993bf5bbe8": "Ybodychange",
    "8cf2a7b372be1436f73d2803891cc305275913a6": "Ybodychange",
    "862e93157164d37eaa1b087aaa9d3d449ac792c6": "Ybodychange",
    "14dc25aaf77f1694aef55e1f593c6584b997769a": "Ybodychange",
    "75da1de42ac3fffb0e28acc4bf5312dcf22ff84c": "Ybodychange",
    "f2e6ef078a40e97ee16aebbf262c0ed4a4a0b01b": "Ybodychange",
    "631e03ab0260c14df6bec3b1292961e1d4b24b8e": "Ybodychange",
    "e568a3563c417829a20eec988daa98797c8391b3": "Ybodychange",
    "4972eb58d680a30e8fbd1ffb6cdc6477bef83374": "Yfilerename",
    "4537bec58804c392a8bce296dced0337c8ec1a8d": "Yfilerename",
    "8f23f4fa7eb977b718a0b3be1c20c7814a3b12a1": "Ybodychange",
    "85f3156214f0ee205b6caaaef87bd291700188ff": "Ybodychange",
    "5707c028b2183766383c8fe83b0b662495cba59d": "Ybodychange",
    "ea2127a5cfc44f137902241203b444dcd23c5051": "Ybodychange",
    "30a17b707b00b3274fba81f4670111c15363e37c": "Ybodychange",
    "48dd35c9002c80eeb666f56489785d1bf47f9aa4": "Ybodychange",
    "69b0a0138e4c3158504f7b382cdf05cc1e05b92e": "Ybodychange",
    "591eab7207b37451a23c89cb7746ad80344a9078": "Ybodychange",
    "e9b1bd435dc182d13f610948024659a99bd727da": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
    "550e5b1d774d538ecfa22d7efe8fe893dcd9fa06": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c52afe0668c462a5935a708cb396d234eeb018d4": {
      "type": "Ybodychange",
      "commitMessage": "Add --fail-if-no-tests command line option to ConsoleLauncher (#1399)\n\nPrior to this commit, if the ConsoleLauncher found no tests it would\r\nexit with a success status. This could happen by user mistake -- for\r\nexample, due to improper use of a selector. In such situations, a user\r\nwould not be informed of the misconfiguration.\r\n\r\nThis commit introduces a new `--fail-if-not-tests` command-line option\r\nfor the ConsoleLauncher. This flag can be set to `true` to make the\r\nlauncher fail when no tests are found, helping users catch such\r\nmisconfigurations.\r\n\r\nCloses: #1298\r\n",
      "commitDate": "2018/6/3 上午12:18",
      "commitName": "c52afe0668c462a5935a708cb396d234eeb018d4",
      "commitAuthor": "Giorgos Gaganis",
      "commitDateOld": "2018/4/6 下午7:41",
      "commitNameOld": "ce303c347e42b606ce51eaf72294dabf19a0ae72",
      "commitAuthorOld": "Sam Brannen",
      "daysBetweenCommits": 57.19,
      "commitsBetweenForRepo": 188,
      "commitsBetweenForFile": 1,
      "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(this.help));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n    result.setDetails(detectedOptions.valueOf(this.details));\n    result.setTheme(detectedOptions.valueOf(this.theme));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n    result.setFailIfNoTests(detectedOptions.has(this.failIfNoTests));\n    result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n    result.setScanModulepath(detectedOptions.has(this.scanModulepath));\n    result.setSelectedModules(detectedOptions.valuesOf(this.selectedModules));\n    result.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n    result.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n    result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n    result.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n    result.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n    result.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n    result.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n    result.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n    result.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n    result.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n    result.setExcludedClassNamePatterns(detectedOptions.valuesOf(this.excludeClassNamePattern));\n    result.setIncludedPackages(detectedOptions.valuesOf(this.includePackage));\n    result.setExcludedPackages(detectedOptions.valuesOf(this.excludePackage));\n    result.setIncludedTagExpressions(detectedOptions.valuesOf(this.includeTag));\n    result.setExcludedTagExpressions(detectedOptions.valuesOf(this.excludeTag));\n    result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n    result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n    result.setConfigurationParameters(toMap(detectedOptions.valuesOf(this.configurationParameters)));\n    return result;\n}",
      "path": "junit-platform-console/src/main/java/org/junit/platform/console/options/AvailableOptions.java",
      "functionStartLine": 221,
      "functionName": "toCommandLineOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,30 +1,31 @@\n CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n     result.setDisplayHelp(detectedOptions.has(this.help));\n     result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n     result.setDetails(detectedOptions.valueOf(this.details));\n     result.setTheme(detectedOptions.valueOf(this.theme));\n     result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n+    result.setFailIfNoTests(detectedOptions.has(this.failIfNoTests));\n     result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n     result.setScanModulepath(detectedOptions.has(this.scanModulepath));\n     result.setSelectedModules(detectedOptions.valuesOf(this.selectedModules));\n     result.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n     result.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n     result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n     result.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n     result.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n     result.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n     result.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n     result.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n     result.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n     result.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n     result.setExcludedClassNamePatterns(detectedOptions.valuesOf(this.excludeClassNamePattern));\n     result.setIncludedPackages(detectedOptions.valuesOf(this.includePackage));\n     result.setExcludedPackages(detectedOptions.valuesOf(this.excludePackage));\n     result.setIncludedTagExpressions(detectedOptions.valuesOf(this.includeTag));\n     result.setExcludedTagExpressions(detectedOptions.valuesOf(this.excludeTag));\n     result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n     result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n     result.setConfigurationParameters(toMap(detectedOptions.valuesOf(this.configurationParameters)));\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b3cec572c6334095f84ec009d5488370119e62c9": {
      "type": "Ybodychange",
      "commitMessage": "Emit helpful message when a configuration key is not unique\n\nPrior to this commit a bug [1] in Java 8\u0027s stream toMap() collector did\nreport the value instead of the duplicated key in the exception message.\nNow, a custom list-to-map helper always emits a helpful error message.\n\n[1] https://bugs.openjdk.java.net/browse/JDK-8040892\n\nCloses #1308\n",
      "commitDate": "2018/2/28 下午3:14",
      "commitName": "b3cec572c6334095f84ec009d5488370119e62c9",
      "commitAuthor": "Christian Stein",
      "commitDateOld": "2018/1/24 上午4:51",
      "commitNameOld": "f9c6e768eb82df9b8a11da5c7a9f64b889dad44d",
      "commitAuthorOld": "Marc Philipp",
      "daysBetweenCommits": 35.43,
      "commitsBetweenForRepo": 142,
      "commitsBetweenForFile": 1,
      "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(this.help));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n    result.setDetails(detectedOptions.valueOf(this.details));\n    result.setTheme(detectedOptions.valueOf(this.theme));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n    result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n    result.setScanModulepath(detectedOptions.has(this.scanModulepath));\n    result.setSelectedModules(detectedOptions.valuesOf(this.selectedModules));\n    result.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n    result.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n    result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n    result.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n    result.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n    result.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n    result.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n    result.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n    result.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n    result.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n    result.setExcludedClassNamePatterns(detectedOptions.valuesOf(this.excludeClassNamePattern));\n    result.setIncludedPackages(detectedOptions.valuesOf(this.includePackage));\n    result.setExcludedPackages(detectedOptions.valuesOf(this.excludePackage));\n    result.setIncludedTagExpressions(detectedOptions.valuesOf(this.includeTag));\n    result.setExcludedTagExpressions(detectedOptions.valuesOf(this.excludeTag));\n    result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n    result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n    result.setConfigurationParameters(toMap(detectedOptions.valuesOf(this.configurationParameters)));\n    return result;\n}",
      "path": "junit-platform-console/src/main/java/org/junit/platform/console/options/AvailableOptions.java",
      "functionStartLine": 217,
      "functionName": "toCommandLineOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,31 +1,30 @@\n CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n     result.setDisplayHelp(detectedOptions.has(this.help));\n     result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n     result.setDetails(detectedOptions.valueOf(this.details));\n     result.setTheme(detectedOptions.valueOf(this.theme));\n     result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n     result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n     result.setScanModulepath(detectedOptions.has(this.scanModulepath));\n     result.setSelectedModules(detectedOptions.valuesOf(this.selectedModules));\n     result.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n     result.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n     result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n     result.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n     result.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n     result.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n     result.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n     result.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n     result.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n     result.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n     result.setExcludedClassNamePatterns(detectedOptions.valuesOf(this.excludeClassNamePattern));\n     result.setIncludedPackages(detectedOptions.valuesOf(this.includePackage));\n     result.setExcludedPackages(detectedOptions.valuesOf(this.excludePackage));\n     result.setIncludedTagExpressions(detectedOptions.valuesOf(this.includeTag));\n     result.setExcludedTagExpressions(detectedOptions.valuesOf(this.excludeTag));\n     result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n     result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n-    Map\u003cString, String\u003e configurationParametersMap \u003d detectedOptions.valuesOf(this.configurationParameters).stream().collect(toMap(pair -\u003e pair.key, pair -\u003e pair.value));\n-    result.setConfigurationParameters(configurationParametersMap);\n+    result.setConfigurationParameters(toMap(detectedOptions.valuesOf(this.configurationParameters)));\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f9c6e768eb82df9b8a11da5c7a9f64b889dad44d": {
      "type": "Ybodychange",
      "commitMessage": "Add additional documentation for tag expressions\n\nIssue: #454\n",
      "commitDate": "2018/1/24 上午4:51",
      "commitName": "f9c6e768eb82df9b8a11da5c7a9f64b889dad44d",
      "commitAuthor": "Marc Philipp",
      "commitDateOld": "2018/1/24 上午4:51",
      "commitNameOld": "16cc3e4c3bc2e91cde7e720ca731112e0123c6a9",
      "commitAuthorOld": "Thomas Heilbronner",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(this.help));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n    result.setDetails(detectedOptions.valueOf(this.details));\n    result.setTheme(detectedOptions.valueOf(this.theme));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n    result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n    result.setScanModulepath(detectedOptions.has(this.scanModulepath));\n    result.setSelectedModules(detectedOptions.valuesOf(this.selectedModules));\n    result.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n    result.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n    result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n    result.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n    result.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n    result.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n    result.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n    result.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n    result.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n    result.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n    result.setExcludedClassNamePatterns(detectedOptions.valuesOf(this.excludeClassNamePattern));\n    result.setIncludedPackages(detectedOptions.valuesOf(this.includePackage));\n    result.setExcludedPackages(detectedOptions.valuesOf(this.excludePackage));\n    result.setIncludedTagExpressions(detectedOptions.valuesOf(this.includeTag));\n    result.setExcludedTagExpressions(detectedOptions.valuesOf(this.excludeTag));\n    result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n    result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n    Map\u003cString, String\u003e configurationParametersMap \u003d detectedOptions.valuesOf(this.configurationParameters).stream().collect(toMap(pair -\u003e pair.key, pair -\u003e pair.value));\n    result.setConfigurationParameters(configurationParametersMap);\n    return result;\n}",
      "path": "junit-platform-console/src/main/java/org/junit/platform/console/options/AvailableOptions.java",
      "functionStartLine": 216,
      "functionName": "toCommandLineOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,31 +1,31 @@\n CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n     result.setDisplayHelp(detectedOptions.has(this.help));\n     result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n     result.setDetails(detectedOptions.valueOf(this.details));\n     result.setTheme(detectedOptions.valueOf(this.theme));\n     result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n     result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n     result.setScanModulepath(detectedOptions.has(this.scanModulepath));\n     result.setSelectedModules(detectedOptions.valuesOf(this.selectedModules));\n     result.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n     result.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n     result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n     result.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n     result.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n     result.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n     result.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n     result.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n     result.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n     result.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n     result.setExcludedClassNamePatterns(detectedOptions.valuesOf(this.excludeClassNamePattern));\n     result.setIncludedPackages(detectedOptions.valuesOf(this.includePackage));\n     result.setExcludedPackages(detectedOptions.valuesOf(this.excludePackage));\n-    result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n-    result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n+    result.setIncludedTagExpressions(detectedOptions.valuesOf(this.includeTag));\n+    result.setExcludedTagExpressions(detectedOptions.valuesOf(this.excludeTag));\n     result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n     result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n     Map\u003cString, String\u003e configurationParametersMap \u003d detectedOptions.valuesOf(this.configurationParameters).stream().collect(toMap(pair -\u003e pair.key, pair -\u003e pair.value));\n     result.setConfigurationParameters(configurationParametersMap);\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "3e042ee4923b029711682d81cec89e33d48cf842": {
      "type": "Ybodychange",
      "commitMessage": "Add \"--scan-module-path\" to the command line options\n\nInternally it is treated as if \"--select-module ALL-MODULES\" was given.\nIn the future \"--scan-module-path\" might support custom path entries\nthat are routed to the \u0027ModuleFinder.of(...)\u0027 factory method allowing\ncustom module-paths to be specified at runtime.\n",
      "commitDate": "2017/10/17 下午7:38",
      "commitName": "3e042ee4923b029711682d81cec89e33d48cf842",
      "commitAuthor": "Christian Stein",
      "commitDateOld": "2017/10/17 下午7:38",
      "commitNameOld": "e909f6f1acae468907e09fa23edb90c1143e7fb9",
      "commitAuthorOld": "Christian Stein",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(this.help));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n    result.setDetails(detectedOptions.valueOf(this.details));\n    result.setTheme(detectedOptions.valueOf(this.theme));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n    result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n    result.setScanModulepath(detectedOptions.has(this.scanModulepath));\n    result.setSelectedModules(detectedOptions.valuesOf(this.selectedModules));\n    result.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n    result.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n    result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n    result.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n    result.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n    result.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n    result.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n    result.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n    result.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n    result.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n    result.setExcludedClassNamePatterns(detectedOptions.valuesOf(this.excludeClassNamePattern));\n    result.setIncludedPackages(detectedOptions.valuesOf(this.includePackage));\n    result.setExcludedPackages(detectedOptions.valuesOf(this.excludePackage));\n    result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n    result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n    result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n    result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n    Map\u003cString, String\u003e configurationParametersMap \u003d detectedOptions.valuesOf(this.configurationParameters).stream().collect(toMap(pair -\u003e pair.key, pair -\u003e pair.value));\n    result.setConfigurationParameters(configurationParametersMap);\n    return result;\n}",
      "path": "junit-platform-console/src/main/java/org/junit/platform/console/options/AvailableOptions.java",
      "functionStartLine": 214,
      "functionName": "toCommandLineOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,30 +1,31 @@\n CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n     result.setDisplayHelp(detectedOptions.has(this.help));\n     result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n     result.setDetails(detectedOptions.valueOf(this.details));\n     result.setTheme(detectedOptions.valueOf(this.theme));\n     result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n     result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n+    result.setScanModulepath(detectedOptions.has(this.scanModulepath));\n+    result.setSelectedModules(detectedOptions.valuesOf(this.selectedModules));\n     result.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n     result.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n     result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n     result.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n     result.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n-    result.setSelectedModules(detectedOptions.valuesOf(this.selectedModules));\n     result.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n     result.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n     result.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n     result.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n     result.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n     result.setExcludedClassNamePatterns(detectedOptions.valuesOf(this.excludeClassNamePattern));\n     result.setIncludedPackages(detectedOptions.valuesOf(this.includePackage));\n     result.setExcludedPackages(detectedOptions.valuesOf(this.excludePackage));\n     result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n     result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n     result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n     result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n     Map\u003cString, String\u003e configurationParametersMap \u003d detectedOptions.valuesOf(this.configurationParameters).stream().collect(toMap(pair -\u003e pair.key, pair -\u003e pair.value));\n     result.setConfigurationParameters(configurationParametersMap);\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e909f6f1acae468907e09fa23edb90c1143e7fb9": {
      "type": "Ybodychange",
      "commitMessage": "Add ModuleSelector and introduce console option `--select-module name`\n",
      "commitDate": "2017/10/17 下午7:38",
      "commitName": "e909f6f1acae468907e09fa23edb90c1143e7fb9",
      "commitAuthor": "Christian Stein",
      "commitDateOld": "2017/9/22 下午11:04",
      "commitNameOld": "403c821e95f6c66081ca11fd490867eb78aa2795",
      "commitAuthorOld": "Sam Brannen",
      "daysBetweenCommits": 24.86,
      "commitsBetweenForRepo": 75,
      "commitsBetweenForFile": 1,
      "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(this.help));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n    result.setDetails(detectedOptions.valueOf(this.details));\n    result.setTheme(detectedOptions.valueOf(this.theme));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n    result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n    result.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n    result.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n    result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n    result.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n    result.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n    result.setSelectedModules(detectedOptions.valuesOf(this.selectedModules));\n    result.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n    result.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n    result.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n    result.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n    result.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n    result.setExcludedClassNamePatterns(detectedOptions.valuesOf(this.excludeClassNamePattern));\n    result.setIncludedPackages(detectedOptions.valuesOf(this.includePackage));\n    result.setExcludedPackages(detectedOptions.valuesOf(this.excludePackage));\n    result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n    result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n    result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n    result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n    Map\u003cString, String\u003e configurationParametersMap \u003d detectedOptions.valuesOf(this.configurationParameters).stream().collect(toMap(pair -\u003e pair.key, pair -\u003e pair.value));\n    result.setConfigurationParameters(configurationParametersMap);\n    return result;\n}",
      "path": "junit-platform-console/src/main/java/org/junit/platform/console/options/AvailableOptions.java",
      "functionStartLine": 206,
      "functionName": "toCommandLineOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,29 +1,30 @@\n CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n     result.setDisplayHelp(detectedOptions.has(this.help));\n     result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n     result.setDetails(detectedOptions.valueOf(this.details));\n     result.setTheme(detectedOptions.valueOf(this.theme));\n     result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n     result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n     result.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n     result.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n     result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n     result.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n     result.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n+    result.setSelectedModules(detectedOptions.valuesOf(this.selectedModules));\n     result.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n     result.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n     result.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n     result.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n     result.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n     result.setExcludedClassNamePatterns(detectedOptions.valuesOf(this.excludeClassNamePattern));\n     result.setIncludedPackages(detectedOptions.valuesOf(this.includePackage));\n     result.setExcludedPackages(detectedOptions.valuesOf(this.excludePackage));\n     result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n     result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n     result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n     result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n     Map\u003cString, String\u003e configurationParametersMap \u003d detectedOptions.valuesOf(this.configurationParameters).stream().collect(toMap(pair -\u003e pair.key, pair -\u003e pair.value));\n     result.setConfigurationParameters(configurationParametersMap);\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7661592bbfaf2a3b541a0bd3a56993cb4834c12e": {
      "type": "Ybodychange",
      "commitMessage": "Introduce --config for setting config params from ConsoleLauncher\n\nIssue: #1015\n",
      "commitDate": "2017/8/23 上午2:03",
      "commitName": "7661592bbfaf2a3b541a0bd3a56993cb4834c12e",
      "commitAuthor": "Marc Philipp",
      "commitDateOld": "2017/4/4 上午3:52",
      "commitNameOld": "625b078b899db47bfdcc5831609cc04deb8c304b",
      "commitAuthorOld": "Christian Stein",
      "daysBetweenCommits": 140.92,
      "commitsBetweenForRepo": 453,
      "commitsBetweenForFile": 1,
      "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(this.help));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n    result.setDetails(detectedOptions.valueOf(this.details));\n    result.setTheme(detectedOptions.valueOf(this.theme));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n    result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n    result.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n    result.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n    result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n    result.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n    result.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n    result.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n    result.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n    result.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n    result.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n    result.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n    result.setExcludedClassNamePatterns(detectedOptions.valuesOf(this.excludeClassNamePattern));\n    result.setIncludedPackages(detectedOptions.valuesOf(this.includePackage));\n    result.setExcludedPackages(detectedOptions.valuesOf(this.excludePackage));\n    result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n    result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n    result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n    result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n    Map\u003cString, String\u003e configurationParametersMap \u003d detectedOptions.valuesOf(this.configurationParameters).stream().collect(toMap(pair -\u003e pair.key, pair -\u003e pair.value));\n    result.setConfigurationParameters(configurationParametersMap);\n    return result;\n}",
      "path": "junit-platform-console/src/main/java/org/junit/platform/console/options/AvailableOptions.java",
      "functionStartLine": 200,
      "functionName": "toCommandLineOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,27 +1,29 @@\n CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n     result.setDisplayHelp(detectedOptions.has(this.help));\n     result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n     result.setDetails(detectedOptions.valueOf(this.details));\n     result.setTheme(detectedOptions.valueOf(this.theme));\n     result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n     result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n     result.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n     result.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n     result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n     result.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n     result.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n     result.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n     result.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n     result.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n     result.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n     result.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n     result.setExcludedClassNamePatterns(detectedOptions.valuesOf(this.excludeClassNamePattern));\n     result.setIncludedPackages(detectedOptions.valuesOf(this.includePackage));\n     result.setExcludedPackages(detectedOptions.valuesOf(this.excludePackage));\n     result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n     result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n     result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n     result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n+    Map\u003cString, String\u003e configurationParametersMap \u003d detectedOptions.valuesOf(this.configurationParameters).stream().collect(toMap(pair -\u003e pair.key, pair -\u003e pair.value));\n+    result.setConfigurationParameters(configurationParametersMap);\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b10a4ee18d51d93180d22f5cd1c04d12bd2d185e": {
      "type": "Ybodychange",
      "commitMessage": "New command line option: --details-theme\n",
      "commitDate": "2017/3/9 上午9:06",
      "commitName": "b10a4ee18d51d93180d22f5cd1c04d12bd2d185e",
      "commitAuthor": "Christian Stein",
      "commitDateOld": "2017/2/1 下午9:43",
      "commitNameOld": "b701ea2fc13c53db6259e48b36e5c24d463b90ea",
      "commitAuthorOld": "Matthias Merdes",
      "daysBetweenCommits": 35.47,
      "commitsBetweenForRepo": 88,
      "commitsBetweenForFile": 1,
      "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(this.help));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n    result.setDetails(detectedOptions.valueOf(this.details));\n    result.setTheme(detectedOptions.valueOf(this.theme));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n    result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n    result.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n    result.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n    result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n    result.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n    result.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n    result.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n    result.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n    result.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n    result.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n    result.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n    result.setExcludedClassNamePatterns(detectedOptions.valuesOf(this.excludeClassNamePattern));\n    result.setIncludedPackages(detectedOptions.valuesOf(this.includePackage));\n    result.setExcludedPackages(detectedOptions.valuesOf(this.excludePackage));\n    result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n    result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n    result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n    result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n    return result;\n}",
      "path": "junit-platform-console/src/main/java/org/junit/platform/console/options/AvailableOptions.java",
      "functionStartLine": 192,
      "functionName": "toCommandLineOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,26 +1,27 @@\n CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n     result.setDisplayHelp(detectedOptions.has(this.help));\n     result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n     result.setDetails(detectedOptions.valueOf(this.details));\n+    result.setTheme(detectedOptions.valueOf(this.theme));\n     result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n     result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n     result.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n     result.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n     result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n     result.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n     result.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n     result.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n     result.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n     result.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n     result.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n     result.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n     result.setExcludedClassNamePatterns(detectedOptions.valuesOf(this.excludeClassNamePattern));\n     result.setIncludedPackages(detectedOptions.valuesOf(this.includePackage));\n     result.setExcludedPackages(detectedOptions.valuesOf(this.excludePackage));\n     result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n     result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n     result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n     result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b701ea2fc13c53db6259e48b36e5c24d463b90ea": {
      "type": "Ybodychange",
      "commitMessage": "Introduce exclude class name filter support in the ConsoleLauncher\n\n#314\n",
      "commitDate": "2017/2/1 下午9:43",
      "commitName": "b701ea2fc13c53db6259e48b36e5c24d463b90ea",
      "commitAuthor": "Matthias Merdes",
      "commitDateOld": "2017/1/20 上午4:46",
      "commitNameOld": "62ec592d6de9c5d7902b51c7eac35834fc9f81e1",
      "commitAuthorOld": "Christian Stein",
      "daysBetweenCommits": 12.71,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(this.help));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n    result.setDetails(detectedOptions.valueOf(this.details));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n    result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n    result.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n    result.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n    result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n    result.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n    result.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n    result.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n    result.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n    result.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n    result.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n    result.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n    result.setExcludedClassNamePatterns(detectedOptions.valuesOf(this.excludeClassNamePattern));\n    result.setIncludedPackages(detectedOptions.valuesOf(this.includePackage));\n    result.setExcludedPackages(detectedOptions.valuesOf(this.excludePackage));\n    result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n    result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n    result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n    result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n    return result;\n}",
      "path": "junit-platform-console/src/main/java/org/junit/platform/console/options/AvailableOptions.java",
      "functionStartLine": 184,
      "functionName": "toCommandLineOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,25 +1,26 @@\n CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n     result.setDisplayHelp(detectedOptions.has(this.help));\n     result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n     result.setDetails(detectedOptions.valueOf(this.details));\n     result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n     result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n     result.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n     result.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n     result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n     result.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n     result.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n     result.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n     result.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n     result.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n     result.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n     result.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n+    result.setExcludedClassNamePatterns(detectedOptions.valuesOf(this.excludeClassNamePattern));\n     result.setIncludedPackages(detectedOptions.valuesOf(this.includePackage));\n     result.setExcludedPackages(detectedOptions.valuesOf(this.excludePackage));\n     result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n     result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n     result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n     result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a64e354fa285ecd9297521ca327d9fbed34c21c9": {
      "type": "Ybodychange",
      "commitMessage": "Introduce ASCII-based tree printing TestExecutionListeners\n\nThis commit introduces `TreePrintingListener` and\r\n`VerboseTreePrintingListener` which render ASCII-based tree layouts for\r\nthe executed test plan. If the default character set encoding (e.g.,\r\nfor the terminal or build environment) is UTF-8, then extended ASCII\r\ncharacters are used to display the test execution tree; otherwise,\r\nstandard 7-bit ASCII characters are used to display the test tree.\r\n\r\nA new enum named `Details` has been introduced in the\r\n`org.junit.platform.console.options` package in order to allow the user\r\nto choose between various display modes:\r\n\r\n - NONE: No test plan execution details are printed.\r\n - FLAT: Test plan execution details are rendered in a flat,\r\n   line-per-line mode.\r\n - TREE: Test plan execution details are rendered as a simple tree.\r\n - VERBOSE: Combines tree and flat mode.\r\n\r\nConsequently, the original `ColoredPrintingTestListener` has been\r\nrenamed to `FlatPrintingListener`.\r\n\r\nIn addition, the `--hide-details` command line option is now deprecated\r\nin favor of `--details none`.\r\n\r\nIssues: #369, #546\r\n\r\n---\r\nI hereby agree to the terms of the JUnit Contributor License Agreement.\r\n",
      "commitDate": "2017/1/19 上午8:07",
      "commitName": "a64e354fa285ecd9297521ca327d9fbed34c21c9",
      "commitAuthor": "Christian Stein",
      "commitDateOld": "2017/1/3 上午4:10",
      "commitNameOld": "73f3eeb436e78226f19554f2c2b5dab63e103670",
      "commitAuthorOld": "JUnit Team",
      "daysBetweenCommits": 16.16,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(this.help));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n    result.setDetails(detectedOptions.valueOf(this.details));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n    result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n    result.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n    result.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n    result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n    result.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n    result.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n    result.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n    result.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n    result.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n    result.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n    result.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n    result.setIncludedPackages(detectedOptions.valuesOf(this.includePackage));\n    result.setExcludedPackages(detectedOptions.valuesOf(this.excludePackage));\n    result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n    result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n    result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n    result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n    return result;\n}",
      "path": "junit-platform-console/src/main/java/org/junit/platform/console/options/AvailableOptions.java",
      "functionStartLine": 178,
      "functionName": "toCommandLineOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,25 +1,25 @@\n CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n     result.setDisplayHelp(detectedOptions.has(this.help));\n     result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n-    result.setHideDetails(detectedOptions.has(this.hideDetails));\n+    result.setDetails(detectedOptions.valueOf(this.details));\n     result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n     result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n     result.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n     result.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n     result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n     result.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n     result.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n     result.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n     result.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n     result.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n     result.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n     result.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n     result.setIncludedPackages(detectedOptions.valuesOf(this.includePackage));\n     result.setExcludedPackages(detectedOptions.valuesOf(this.excludePackage));\n     result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n     result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n     result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n     result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d1043ffcc05ab6f6626868dab808ebf65a0c311c": {
      "type": "Ybodychange",
      "commitMessage": "add PackageNameFilter for including and excluding package names.\n\nIssues: #313\n",
      "commitDate": "2016/11/22 下午2:46",
      "commitName": "d1043ffcc05ab6f6626868dab808ebf65a0c311c",
      "commitAuthor": "Stefan Bechtold",
      "commitDateOld": "2016/11/13 上午2:31",
      "commitNameOld": "536acefeb28ee6a37853b4fccc3850f43e543861",
      "commitAuthorOld": "Marc Philipp",
      "daysBetweenCommits": 9.51,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(this.help));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n    result.setHideDetails(detectedOptions.has(this.hideDetails));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n    result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n    result.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n    result.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n    result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n    result.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n    result.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n    result.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n    result.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n    result.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n    result.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n    result.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n    result.setIncludedPackages(detectedOptions.valuesOf(this.includePackage));\n    result.setExcludedPackages(detectedOptions.valuesOf(this.excludePackage));\n    result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n    result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n    result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n    result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n    return result;\n}",
      "path": "junit-platform-console/src/main/java/org/junit/platform/console/options/AvailableOptions.java",
      "functionStartLine": 163,
      "functionName": "toCommandLineOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,23 +1,25 @@\n CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n     result.setDisplayHelp(detectedOptions.has(this.help));\n     result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n     result.setHideDetails(detectedOptions.has(this.hideDetails));\n     result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n     result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n     result.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n     result.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n     result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n     result.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n     result.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n     result.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n     result.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n     result.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n     result.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n     result.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n+    result.setIncludedPackages(detectedOptions.valuesOf(this.includePackage));\n+    result.setExcludedPackages(detectedOptions.valuesOf(this.excludePackage));\n     result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n     result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n     result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n     result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "536acefeb28ee6a37853b4fccc3850f43e543861": {
      "type": "Ybodychange",
      "commitMessage": "Remove support for non-option arguments for --scan-classpath (step 2)\n\n#555\n",
      "commitDate": "2016/11/13 上午2:31",
      "commitName": "536acefeb28ee6a37853b4fccc3850f43e543861",
      "commitAuthor": "Marc Philipp",
      "commitDateOld": "2016/11/13 上午2:11",
      "commitNameOld": "adaf70d9d08a3ab2002e6365ea9ae52c5013c8d4",
      "commitAuthorOld": "Marc Philipp",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(this.help));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n    result.setHideDetails(detectedOptions.has(this.hideDetails));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n    result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n    result.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n    result.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n    result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n    result.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n    result.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n    result.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n    result.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n    result.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n    result.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n    result.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n    result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n    result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n    result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n    result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n    return result;\n}",
      "path": "junit-platform-console/src/main/java/org/junit/platform/console/options/AvailableOptions.java",
      "functionStartLine": 154,
      "functionName": "toCommandLineOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,25 +1,23 @@\n CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n     result.setDisplayHelp(detectedOptions.has(this.help));\n     result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n     result.setHideDetails(detectedOptions.has(this.hideDetails));\n     result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n     result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n     result.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n-    List\u003cPath\u003e selectedClasspathEntries \u003d new LinkedList\u003c\u003e(detectedOptions.valuesOf(this.selectedClasspathEntries));\n-    detectedOptions.valuesOf(this.arguments).stream().map(Paths::get).forEach(selectedClasspathEntries::add);\n-    result.setSelectedClasspathEntries(selectedClasspathEntries);\n+    result.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n     result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n     result.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n     result.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n     result.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n     result.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n     result.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n     result.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n     result.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n     result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n     result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n     result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n     result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "adaf70d9d08a3ab2002e6365ea9ae52c5013c8d4": {
      "type": "Ybodychange",
      "commitMessage": "Accept option arguments for --scan-classpath (step 1)\n\n#555\n",
      "commitDate": "2016/11/13 上午2:11",
      "commitName": "adaf70d9d08a3ab2002e6365ea9ae52c5013c8d4",
      "commitAuthor": "Marc Philipp",
      "commitDateOld": "2016/11/7 上午2:38",
      "commitNameOld": "36665aadaa829bc2bc003e245fa05e99f2bebfd8",
      "commitAuthorOld": "Marc Philipp",
      "daysBetweenCommits": 5.98,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(this.help));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n    result.setHideDetails(detectedOptions.has(this.hideDetails));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n    result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n    result.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n    List\u003cPath\u003e selectedClasspathEntries \u003d new LinkedList\u003c\u003e(detectedOptions.valuesOf(this.selectedClasspathEntries));\n    detectedOptions.valuesOf(this.arguments).stream().map(Paths::get).forEach(selectedClasspathEntries::add);\n    result.setSelectedClasspathEntries(selectedClasspathEntries);\n    result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n    result.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n    result.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n    result.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n    result.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n    result.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n    result.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n    result.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n    result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n    result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n    result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n    result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n    return result;\n}",
      "path": "junit-platform-console/src/main/java/org/junit/platform/console/options/AvailableOptions.java",
      "functionStartLine": 164,
      "functionName": "toCommandLineOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,23 +1,25 @@\n CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n     result.setDisplayHelp(detectedOptions.has(this.help));\n     result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n     result.setHideDetails(detectedOptions.has(this.hideDetails));\n     result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n     result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n-    result.setScanClasspath(detectedOptions.has(this.scanClasspath));\n-    result.setArguments(detectedOptions.valuesOf(this.arguments));\n+    result.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n+    List\u003cPath\u003e selectedClasspathEntries \u003d new LinkedList\u003c\u003e(detectedOptions.valuesOf(this.selectedClasspathEntries));\n+    detectedOptions.valuesOf(this.arguments).stream().map(Paths::get).forEach(selectedClasspathEntries::add);\n+    result.setSelectedClasspathEntries(selectedClasspathEntries);\n     result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n     result.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n     result.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n     result.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n     result.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n     result.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n     result.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n     result.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n     result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n     result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n     result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n     result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "36665aadaa829bc2bc003e245fa05e99f2bebfd8": {
      "type": "Ybodychange",
      "commitMessage": "Support multiple include patterns for class names in ConsoleLauncher\n\n#474\n",
      "commitDate": "2016/11/7 上午2:38",
      "commitName": "36665aadaa829bc2bc003e245fa05e99f2bebfd8",
      "commitAuthor": "Marc Philipp",
      "commitDateOld": "2016/11/2 下午8:19",
      "commitNameOld": "1243f3dfa6df67ec1fa45ea884d8f7993bf5bbe8",
      "commitAuthorOld": "Marc Philipp",
      "daysBetweenCommits": 4.26,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(this.help));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n    result.setHideDetails(detectedOptions.has(this.hideDetails));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n    result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n    result.setScanClasspath(detectedOptions.has(this.scanClasspath));\n    result.setArguments(detectedOptions.valuesOf(this.arguments));\n    result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n    result.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n    result.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n    result.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n    result.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n    result.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n    result.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n    result.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n    result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n    result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n    result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n    result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n    return result;\n}",
      "path": "junit-platform-console/src/main/java/org/junit/platform/console/options/AvailableOptions.java",
      "functionStartLine": 155,
      "functionName": "toCommandLineOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,23 +1,23 @@\n CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n     result.setDisplayHelp(detectedOptions.has(this.help));\n     result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n     result.setHideDetails(detectedOptions.has(this.hideDetails));\n     result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n     result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n     result.setScanClasspath(detectedOptions.has(this.scanClasspath));\n     result.setArguments(detectedOptions.valuesOf(this.arguments));\n     result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n     result.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n     result.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n     result.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n     result.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n     result.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n     result.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n-    result.setIncludeClassNamePattern(detectedOptions.valueOf(this.includeClassNamePattern));\n+    result.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n     result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n     result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n     result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n     result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1243f3dfa6df67ec1fa45ea884d8f7993bf5bbe8": {
      "type": "Ybodychange",
      "commitMessage": "Support selecting a classpath resource in ConsoleLauncher\n\nIssue: #452\n",
      "commitDate": "2016/11/2 下午8:19",
      "commitName": "1243f3dfa6df67ec1fa45ea884d8f7993bf5bbe8",
      "commitAuthor": "Marc Philipp",
      "commitDateOld": "2016/11/2 下午7:03",
      "commitNameOld": "8cf2a7b372be1436f73d2803891cc305275913a6",
      "commitAuthorOld": "Marc Philipp",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(this.help));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n    result.setHideDetails(detectedOptions.has(this.hideDetails));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n    result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n    result.setScanClasspath(detectedOptions.has(this.scanClasspath));\n    result.setArguments(detectedOptions.valuesOf(this.arguments));\n    result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n    result.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n    result.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n    result.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n    result.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n    result.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n    result.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n    result.setIncludeClassNamePattern(detectedOptions.valueOf(this.includeClassNamePattern));\n    result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n    result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n    result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n    result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n    return result;\n}",
      "path": "junit-platform-console/src/main/java/org/junit/platform/console/options/AvailableOptions.java",
      "functionStartLine": 154,
      "functionName": "toCommandLineOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,22 +1,23 @@\n CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n     result.setDisplayHelp(detectedOptions.has(this.help));\n     result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n     result.setHideDetails(detectedOptions.has(this.hideDetails));\n     result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n     result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n     result.setScanClasspath(detectedOptions.has(this.scanClasspath));\n     result.setArguments(detectedOptions.valuesOf(this.arguments));\n     result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n     result.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n     result.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n     result.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n     result.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n     result.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n+    result.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n     result.setIncludeClassNamePattern(detectedOptions.valueOf(this.includeClassNamePattern));\n     result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n     result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n     result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n     result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "8cf2a7b372be1436f73d2803891cc305275913a6": {
      "type": "Ybodychange",
      "commitMessage": "Support selecting a package/class/method in ConsoleLauncher\n\nIssue: #437\n",
      "commitDate": "2016/11/2 下午7:03",
      "commitName": "8cf2a7b372be1436f73d2803891cc305275913a6",
      "commitAuthor": "Marc Philipp",
      "commitDateOld": "2016/11/2 下午4:52",
      "commitNameOld": "862e93157164d37eaa1b087aaa9d3d449ac792c6",
      "commitAuthorOld": "Marc Philipp",
      "daysBetweenCommits": 0.09,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(this.help));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n    result.setHideDetails(detectedOptions.has(this.hideDetails));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n    result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n    result.setScanClasspath(detectedOptions.has(this.scanClasspath));\n    result.setArguments(detectedOptions.valuesOf(this.arguments));\n    result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n    result.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n    result.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n    result.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n    result.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n    result.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n    result.setIncludeClassNamePattern(detectedOptions.valueOf(this.includeClassNamePattern));\n    result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n    result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n    result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n    result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n    return result;\n}",
      "path": "junit-platform-console/src/main/java/org/junit/platform/console/options/AvailableOptions.java",
      "functionStartLine": 149,
      "functionName": "toCommandLineOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,19 +1,22 @@\n CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n     result.setDisplayHelp(detectedOptions.has(this.help));\n     result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n     result.setHideDetails(detectedOptions.has(this.hideDetails));\n     result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n     result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n     result.setScanClasspath(detectedOptions.has(this.scanClasspath));\n     result.setArguments(detectedOptions.valuesOf(this.arguments));\n     result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n     result.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n     result.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n+    result.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n+    result.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n+    result.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n     result.setIncludeClassNamePattern(detectedOptions.valueOf(this.includeClassNamePattern));\n     result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n     result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n     result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n     result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "862e93157164d37eaa1b087aaa9d3d449ac792c6": {
      "type": "Ybodychange",
      "commitMessage": "Introduce support for selecting files \u0026 directories in ConsoleLauncher\n\nIssue: #453\n",
      "commitDate": "2016/11/2 下午4:52",
      "commitName": "862e93157164d37eaa1b087aaa9d3d449ac792c6",
      "commitAuthor": "Marc Philipp",
      "commitDateOld": "2016/11/2 上午1:21",
      "commitNameOld": "14dc25aaf77f1694aef55e1f593c6584b997769a",
      "commitAuthorOld": "Marc Philipp",
      "daysBetweenCommits": 0.65,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(this.help));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n    result.setHideDetails(detectedOptions.has(this.hideDetails));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n    result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n    result.setScanClasspath(detectedOptions.has(this.scanClasspath));\n    result.setArguments(detectedOptions.valuesOf(this.arguments));\n    result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n    result.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n    result.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n    result.setIncludeClassNamePattern(detectedOptions.valueOf(this.includeClassNamePattern));\n    result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n    result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n    result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n    result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n    return result;\n}",
      "path": "junit-platform-console/src/main/java/org/junit/platform/console/options/AvailableOptions.java",
      "functionStartLine": 134,
      "functionName": "toCommandLineOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,17 +1,19 @@\n CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n     result.setDisplayHelp(detectedOptions.has(this.help));\n     result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n     result.setHideDetails(detectedOptions.has(this.hideDetails));\n     result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n     result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n     result.setScanClasspath(detectedOptions.has(this.scanClasspath));\n     result.setArguments(detectedOptions.valuesOf(this.arguments));\n     result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n+    result.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n+    result.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n     result.setIncludeClassNamePattern(detectedOptions.valueOf(this.includeClassNamePattern));\n     result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n     result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n     result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n     result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "14dc25aaf77f1694aef55e1f593c6584b997769a": {
      "type": "Ybodychange",
      "commitMessage": "Add -u/--select-uri command-line option (#470)\n",
      "commitDate": "2016/11/2 上午1:21",
      "commitName": "14dc25aaf77f1694aef55e1f593c6584b997769a",
      "commitAuthor": "Marc Philipp",
      "commitDateOld": "2016/9/13 上午3:55",
      "commitNameOld": "429ec6ff9817b0d291d398b7eb2adc7fd4ead510",
      "commitAuthorOld": "Marc Philipp",
      "daysBetweenCommits": 49.89,
      "commitsBetweenForRepo": 61,
      "commitsBetweenForFile": 1,
      "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(this.help));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n    result.setHideDetails(detectedOptions.has(this.hideDetails));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n    result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n    result.setScanClasspath(detectedOptions.has(this.scanClasspath));\n    result.setArguments(detectedOptions.valuesOf(this.arguments));\n    result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n    result.setIncludeClassNamePattern(detectedOptions.valueOf(this.includeClassNamePattern));\n    result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n    result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n    result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n    result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n    return result;\n}",
      "path": "junit-platform-console/src/main/java/org/junit/platform/console/options/AvailableOptions.java",
      "functionStartLine": 124,
      "functionName": "toCommandLineOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,16 +1,17 @@\n CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n     result.setDisplayHelp(detectedOptions.has(this.help));\n     result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n     result.setHideDetails(detectedOptions.has(this.hideDetails));\n     result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n     result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n     result.setScanClasspath(detectedOptions.has(this.scanClasspath));\n     result.setArguments(detectedOptions.valuesOf(this.arguments));\n+    result.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n     result.setIncludeClassNamePattern(detectedOptions.valueOf(this.includeClassNamePattern));\n     result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n     result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n     result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n     result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "75da1de42ac3fffb0e28acc4bf5312dcf22ff84c": {
      "type": "Ybodychange",
      "commitMessage": "Introduce --scan-class-path alias for -a | --all CL options in ConsoleLauncher\n\nThis commit introduces a `--scan-class-path` alias for the `-a` and\n`--all` command-line options in the `ConsoleLauncher`.\n\nIssue: #468\n",
      "commitDate": "2016/8/20 上午12:35",
      "commitName": "75da1de42ac3fffb0e28acc4bf5312dcf22ff84c",
      "commitAuthor": "Sam Brannen",
      "commitDateOld": "2016/8/20 上午12:12",
      "commitNameOld": "f2e6ef078a40e97ee16aebbf262c0ed4a4a0b01b",
      "commitAuthorOld": "Sam Brannen",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(this.help));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n    result.setHideDetails(detectedOptions.has(this.hideDetails));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n    result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n    result.setScanClasspath(detectedOptions.has(this.scanClasspath));\n    result.setArguments(detectedOptions.valuesOf(this.arguments));\n    result.setIncludeClassNamePattern(detectedOptions.valueOf(this.includeClassNamePattern));\n    result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n    result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n    result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n    result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n    return result;\n}",
      "path": "junit-platform-console/src/main/java/org/junit/platform/console/options/AvailableOptions.java",
      "functionStartLine": 108,
      "functionName": "toCommandLineOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,16 +1,16 @@\n CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n     result.setDisplayHelp(detectedOptions.has(this.help));\n     result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n     result.setHideDetails(detectedOptions.has(this.hideDetails));\n-    result.setRunAllTests(detectedOptions.has(this.runAllTests));\n     result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n     result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n+    result.setScanClasspath(detectedOptions.has(this.scanClasspath));\n     result.setArguments(detectedOptions.valuesOf(this.arguments));\n     result.setIncludeClassNamePattern(detectedOptions.valueOf(this.includeClassNamePattern));\n     result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n     result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n     result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n     result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f2e6ef078a40e97ee16aebbf262c0ed4a4a0b01b": {
      "type": "Ybodychange",
      "commitMessage": "Rename --xml-reports-dir CL option for ConsoleLauncher to --reports-dir\n\nThis commit renames the `--xml-reports-dir` command-line option for the\n`ConsoleLauncher` to `--reports-dir`.\n\nIssue: #468\n",
      "commitDate": "2016/8/20 上午12:12",
      "commitName": "f2e6ef078a40e97ee16aebbf262c0ed4a4a0b01b",
      "commitAuthor": "Sam Brannen",
      "commitDateOld": "2016/8/19 下午11:54",
      "commitNameOld": "6ffd52f817490d5b4fb54ae53c25e2bbed3befda",
      "commitAuthorOld": "Sam Brannen",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(this.help));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n    result.setHideDetails(detectedOptions.has(this.hideDetails));\n    result.setRunAllTests(detectedOptions.has(this.runAllTests));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n    result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n    result.setArguments(detectedOptions.valuesOf(this.arguments));\n    result.setIncludeClassNamePattern(detectedOptions.valueOf(this.includeClassNamePattern));\n    result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n    result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n    result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n    result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n    return result;\n}",
      "path": "junit-platform-console/src/main/java/org/junit/platform/console/options/AvailableOptions.java",
      "functionStartLine": 108,
      "functionName": "toCommandLineOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,16 +1,16 @@\n CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n     result.setDisplayHelp(detectedOptions.has(this.help));\n     result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n     result.setHideDetails(detectedOptions.has(this.hideDetails));\n     result.setRunAllTests(detectedOptions.has(this.runAllTests));\n     result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n-    result.setXmlReportsDir(detectedOptions.valueOf(this.xmlReportsDir));\n+    result.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n     result.setArguments(detectedOptions.valuesOf(this.arguments));\n     result.setIncludeClassNamePattern(detectedOptions.valueOf(this.includeClassNamePattern));\n     result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n     result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n     result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n     result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "631e03ab0260c14df6bec3b1292961e1d4b24b8e": {
      "type": "Ybodychange",
      "commitMessage": "Reorganize code in AvailableOptions into logical groupings\n",
      "commitDate": "2016/8/12 上午6:50",
      "commitName": "631e03ab0260c14df6bec3b1292961e1d4b24b8e",
      "commitAuthor": "Sam Brannen",
      "commitDateOld": "2016/6/22 上午5:43",
      "commitNameOld": "305e31d9a123a5ff895be21aefca01880cd947e2",
      "commitAuthorOld": "Stefan Birkner",
      "daysBetweenCommits": 51.05,
      "commitsBetweenForRepo": 195,
      "commitsBetweenForFile": 1,
      "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(this.help));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n    result.setHideDetails(detectedOptions.has(this.hideDetails));\n    result.setRunAllTests(detectedOptions.has(this.runAllTests));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n    result.setXmlReportsDir(detectedOptions.valueOf(this.xmlReportsDir));\n    result.setArguments(detectedOptions.valuesOf(this.arguments));\n    result.setIncludeClassNamePattern(detectedOptions.valueOf(this.includeClassNamePattern));\n    result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n    result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n    result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n    result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n    return result;\n}",
      "path": "junit-platform-console/src/main/java/org/junit/platform/console/options/AvailableOptions.java",
      "functionStartLine": 104,
      "functionName": "toCommandLineOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,16 +1,16 @@\n CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n     result.setDisplayHelp(detectedOptions.has(this.help));\n     result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n-    result.setRunAllTests(detectedOptions.has(this.runAllTests));\n     result.setHideDetails(detectedOptions.has(this.hideDetails));\n+    result.setRunAllTests(detectedOptions.has(this.runAllTests));\n+    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n+    result.setXmlReportsDir(detectedOptions.valueOf(this.xmlReportsDir));\n+    result.setArguments(detectedOptions.valuesOf(this.arguments));\n     result.setIncludeClassNamePattern(detectedOptions.valueOf(this.includeClassNamePattern));\n     result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n     result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n     result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n     result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n-    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n-    result.setXmlReportsDir(detectedOptions.valueOf(this.xmlReportsDir));\n-    result.setArguments(detectedOptions.valuesOf(this.arguments));\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e568a3563c417829a20eec988daa98797c8391b3": {
      "type": "Ybodychange",
      "commitMessage": "Always use status code on exit. (#338)\n\nI consider it helpful to always return a status code that is not 0 in\r\ncase of a failure. This makes it easy for scripts to decide whether all\r\ntests succeeded. In addition I cannot imagine any use case that relies\r\non returning 0 in case of a failure.\r\n\r\nThe old implementation returned the number of failing tests as status\r\ncode if the flag `enable-exit-code` has been set. But this is only\r\npossible for a small number (\u003c 256) of failing tests. The problem was\r\nthat n*256 failing tests have been reported as 0 failing tests and\r\ntherefore could not be distinguished from a successful run by status\r\ncode.\r\n\r\nThe parser in `AvailableOptions` still accepts the `enable-exit-code`\r\nflag because the project is build with an older version of the Gradle\r\nplugin from https://oss.sonatype.org/content/repositories/snapshots The\r\nparser does not to have accept the flag anymore once a new version of\r\nthe Gradle plugin is pushed to the snapshot repository.",
      "commitDate": "2016/6/21 下午10:01",
      "commitName": "e568a3563c417829a20eec988daa98797c8391b3",
      "commitAuthor": "Stefan Birkner",
      "commitDateOld": "2016/6/20 下午7:43",
      "commitNameOld": "f05183091a62cbbd58df338fc58f599f7994ec74",
      "commitAuthorOld": "JUnit Team",
      "daysBetweenCommits": 1.1,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(this.help));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n    result.setRunAllTests(detectedOptions.has(this.runAllTests));\n    result.setHideDetails(detectedOptions.has(this.hideDetails));\n    result.setIncludeClassNamePattern(detectedOptions.valueOf(this.includeClassNamePattern));\n    result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n    result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n    result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n    result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n    result.setXmlReportsDir(detectedOptions.valueOf(this.xmlReportsDir));\n    result.setArguments(detectedOptions.valuesOf(this.arguments));\n    return result;\n}",
      "path": "junit-platform-console/src/main/java/org/junit/platform/console/options/AvailableOptions.java",
      "functionStartLine": 89,
      "functionName": "toCommandLineOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,17 +1,16 @@\n CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n     result.setDisplayHelp(detectedOptions.has(this.help));\n-    result.setExitCodeEnabled(detectedOptions.has(this.enableExitCode));\n     result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n     result.setRunAllTests(detectedOptions.has(this.runAllTests));\n     result.setHideDetails(detectedOptions.has(this.hideDetails));\n     result.setIncludeClassNamePattern(detectedOptions.valueOf(this.includeClassNamePattern));\n     result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n     result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n     result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n     result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n     result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n     result.setXmlReportsDir(detectedOptions.valueOf(this.xmlReportsDir));\n     result.setArguments(detectedOptions.valuesOf(this.arguments));\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "4972eb58d680a30e8fbd1ffb6cdc6477bef83374": {
      "type": "Yfilerename",
      "commitMessage": "Rename all JUnit 5 artifacts to platform, jupiter, \u0026 vintage\n\nIssue: #286\n",
      "commitDate": "2016/6/20 下午4:59",
      "commitName": "4972eb58d680a30e8fbd1ffb6cdc6477bef83374",
      "commitAuthor": "JUnit Team",
      "commitDateOld": "2016/6/20 上午2:04",
      "commitNameOld": "e5b7300ba40a0420e310d463a63ea4c10cc8d9b9",
      "commitAuthorOld": "Sam Brannen",
      "daysBetweenCommits": 0.62,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(this.help));\n    result.setExitCodeEnabled(detectedOptions.has(this.enableExitCode));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n    result.setRunAllTests(detectedOptions.has(this.runAllTests));\n    result.setHideDetails(detectedOptions.has(this.hideDetails));\n    result.setIncludeClassNamePattern(detectedOptions.valueOf(this.includeClassNamePattern));\n    result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n    result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n    result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n    result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n    result.setXmlReportsDir(detectedOptions.valueOf(this.xmlReportsDir));\n    result.setArguments(detectedOptions.valuesOf(this.arguments));\n    return result;\n}",
      "path": "junit-platform-console/src/main/java/org/junit/platform/console/options/AvailableOptions.java",
      "functionStartLine": 90,
      "functionName": "toCommandLineOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "junit-console/src/main/java/org/junit/platform/console/options/AvailableOptions.java",
        "newPath": "junit-platform-console/src/main/java/org/junit/platform/console/options/AvailableOptions.java"
      }
    },
    "4537bec58804c392a8bce296dced0337c8ec1a8d": {
      "type": "Yfilerename",
      "commitMessage": "Rename remaining org.junit.gen5 base packages to org.junit.platform\n\nIssue: #286\n",
      "commitDate": "2016/6/20 上午1:22",
      "commitName": "4537bec58804c392a8bce296dced0337c8ec1a8d",
      "commitAuthor": "JUnit Team",
      "commitDateOld": "2016/6/20 上午12:25",
      "commitNameOld": "4dd821ac0cf681f17f14e1dcd383b10c99104e70",
      "commitAuthorOld": "Sam Brannen",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(this.help));\n    result.setExitCodeEnabled(detectedOptions.has(this.enableExitCode));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n    result.setRunAllTests(detectedOptions.has(this.runAllTests));\n    result.setHideDetails(detectedOptions.has(this.hideDetails));\n    result.setIncludeClassNamePattern(detectedOptions.valueOf(this.includeClassNamePattern));\n    result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n    result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n    result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n    result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n    result.setXmlReportsDir(detectedOptions.valueOf(this.xmlReportsDir));\n    result.setArguments(detectedOptions.valuesOf(this.arguments));\n    return result;\n}",
      "path": "junit-console/src/main/java/org/junit/platform/console/options/AvailableOptions.java",
      "functionStartLine": 90,
      "functionName": "toCommandLineOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "junit-console/src/main/java/org/junit/gen5/console/options/AvailableOptions.java",
        "newPath": "junit-console/src/main/java/org/junit/platform/console/options/AvailableOptions.java"
      }
    },
    "8f23f4fa7eb977b718a0b3be1c20c7814a3b12a1": {
      "type": "Ybodychange",
      "commitMessage": "Apply consistent naming for class name include patterns\n\n- byClassNamePattern() in ClassFilter --\u003e includeClassNamePattern()\n- @FilterClassName --\u003e @IncludeClassNamePattern\n- matchClassName in Gradle plugin --\u003e includeClassNamePattern\n- --filter-classname option in ConsoleRunner --\u003e --include-classname\n\nIssue: #312\n",
      "commitDate": "2016/6/18 下午9:17",
      "commitName": "8f23f4fa7eb977b718a0b3be1c20c7814a3b12a1",
      "commitAuthor": "Sam Brannen",
      "commitDateOld": "2016/6/12 上午2:12",
      "commitNameOld": "85f3156214f0ee205b6caaaef87bd291700188ff",
      "commitAuthorOld": "Sam Brannen",
      "daysBetweenCommits": 6.79,
      "commitsBetweenForRepo": 63,
      "commitsBetweenForFile": 1,
      "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(this.help));\n    result.setExitCodeEnabled(detectedOptions.has(this.enableExitCode));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n    result.setRunAllTests(detectedOptions.has(this.runAllTests));\n    result.setHideDetails(detectedOptions.has(this.hideDetails));\n    result.setIncludeClassNamePattern(detectedOptions.valueOf(this.includeClassNamePattern));\n    result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n    result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n    result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n    result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n    result.setXmlReportsDir(detectedOptions.valueOf(this.xmlReportsDir));\n    result.setArguments(detectedOptions.valuesOf(this.arguments));\n    return result;\n}",
      "path": "junit-console/src/main/java/org/junit/gen5/console/options/AvailableOptions.java",
      "functionStartLine": 90,
      "functionName": "toCommandLineOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,17 +1,17 @@\n CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n     result.setDisplayHelp(detectedOptions.has(this.help));\n     result.setExitCodeEnabled(detectedOptions.has(this.enableExitCode));\n     result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n     result.setRunAllTests(detectedOptions.has(this.runAllTests));\n     result.setHideDetails(detectedOptions.has(this.hideDetails));\n-    result.setClassnameFilter(detectedOptions.valueOf(this.classnameFilter));\n+    result.setIncludeClassNamePattern(detectedOptions.valueOf(this.includeClassNamePattern));\n     result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n     result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n     result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n     result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n     result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n     result.setXmlReportsDir(detectedOptions.valueOf(this.xmlReportsDir));\n     result.setArguments(detectedOptions.valuesOf(this.arguments));\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "85f3156214f0ee205b6caaaef87bd291700188ff": {
      "type": "Ybodychange",
      "commitMessage": "Use consistent include/exclude terminology for tags and engines\n\nCloses: #304\n",
      "commitDate": "2016/6/12 上午2:12",
      "commitName": "85f3156214f0ee205b6caaaef87bd291700188ff",
      "commitAuthor": "Sam Brannen",
      "commitDateOld": "2016/6/11 下午11:54",
      "commitNameOld": "5707c028b2183766383c8fe83b0b662495cba59d",
      "commitAuthorOld": "Sam Brannen",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(this.help));\n    result.setExitCodeEnabled(detectedOptions.has(this.enableExitCode));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n    result.setRunAllTests(detectedOptions.has(this.runAllTests));\n    result.setHideDetails(detectedOptions.has(this.hideDetails));\n    result.setClassnameFilter(detectedOptions.valueOf(this.classnameFilter));\n    result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n    result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n    result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n    result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n    result.setXmlReportsDir(detectedOptions.valueOf(this.xmlReportsDir));\n    result.setArguments(detectedOptions.valuesOf(this.arguments));\n    return result;\n}",
      "path": "junit-console/src/main/java/org/junit/gen5/console/options/AvailableOptions.java",
      "functionStartLine": 90,
      "functionName": "toCommandLineOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,17 +1,17 @@\n CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n     result.setDisplayHelp(detectedOptions.has(this.help));\n     result.setExitCodeEnabled(detectedOptions.has(this.enableExitCode));\n     result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n     result.setRunAllTests(detectedOptions.has(this.runAllTests));\n     result.setHideDetails(detectedOptions.has(this.hideDetails));\n     result.setClassnameFilter(detectedOptions.valueOf(this.classnameFilter));\n-    result.setRequiredTags(detectedOptions.valuesOf(this.requireTag));\n+    result.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n     result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n-    result.setRequiredEngines(detectedOptions.valuesOf(this.requireEngine));\n+    result.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n     result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n     result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n     result.setXmlReportsDir(detectedOptions.valueOf(this.xmlReportsDir));\n     result.setArguments(detectedOptions.valuesOf(this.arguments));\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5707c028b2183766383c8fe83b0b662495cba59d": {
      "type": "Ybodychange",
      "commitMessage": "Support required \u0026 excluded engines in ConsoleRunner\n\nCloses: #295\n",
      "commitDate": "2016/6/11 下午11:54",
      "commitName": "5707c028b2183766383c8fe83b0b662495cba59d",
      "commitAuthor": "Sam Brannen",
      "commitDateOld": "2016/6/11 上午2:59",
      "commitNameOld": "ea2127a5cfc44f137902241203b444dcd23c5051",
      "commitAuthorOld": "Sam Brannen",
      "daysBetweenCommits": 0.87,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(this.help));\n    result.setExitCodeEnabled(detectedOptions.has(this.enableExitCode));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n    result.setRunAllTests(detectedOptions.has(this.runAllTests));\n    result.setHideDetails(detectedOptions.has(this.hideDetails));\n    result.setClassnameFilter(detectedOptions.valueOf(this.classnameFilter));\n    result.setRequiredTags(detectedOptions.valuesOf(this.requireTag));\n    result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n    result.setRequiredEngines(detectedOptions.valuesOf(this.requireEngine));\n    result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n    result.setXmlReportsDir(detectedOptions.valueOf(this.xmlReportsDir));\n    result.setArguments(detectedOptions.valuesOf(this.arguments));\n    return result;\n}",
      "path": "junit-console/src/main/java/org/junit/gen5/console/options/AvailableOptions.java",
      "functionStartLine": 90,
      "functionName": "toCommandLineOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,16 +1,17 @@\n CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n-    result.setDisplayHelp(detectedOptions.has(help));\n-    result.setExitCodeEnabled(detectedOptions.has(enableExitCode));\n-    result.setAnsiColorOutputDisabled(detectedOptions.has(disableAnsiColors));\n-    result.setRunAllTests(detectedOptions.has(runAllTests));\n-    result.setHideDetails(detectedOptions.has(hideDetails));\n-    result.setClassnameFilter(detectedOptions.valueOf(classnameFilter));\n-    result.setRequiredTags(detectedOptions.valuesOf(requiredTags));\n-    result.setExcludedTags(detectedOptions.valuesOf(excludedTags));\n-    result.setRequiredEngine(detectedOptions.valueOf(requiredEngine));\n-    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(additionalClasspathEntries));\n-    result.setXmlReportsDir(detectedOptions.valueOf(xmlReportsDir));\n-    result.setArguments(detectedOptions.valuesOf(arguments));\n+    result.setDisplayHelp(detectedOptions.has(this.help));\n+    result.setExitCodeEnabled(detectedOptions.has(this.enableExitCode));\n+    result.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n+    result.setRunAllTests(detectedOptions.has(this.runAllTests));\n+    result.setHideDetails(detectedOptions.has(this.hideDetails));\n+    result.setClassnameFilter(detectedOptions.valueOf(this.classnameFilter));\n+    result.setRequiredTags(detectedOptions.valuesOf(this.requireTag));\n+    result.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n+    result.setRequiredEngines(detectedOptions.valuesOf(this.requireEngine));\n+    result.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n+    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n+    result.setXmlReportsDir(detectedOptions.valueOf(this.xmlReportsDir));\n+    result.setArguments(detectedOptions.valuesOf(this.arguments));\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ea2127a5cfc44f137902241203b444dcd23c5051": {
      "type": "Ybodychange",
      "commitMessage": "Polish console options and add tests for excluded tags\n",
      "commitDate": "2016/6/11 上午2:59",
      "commitName": "ea2127a5cfc44f137902241203b444dcd23c5051",
      "commitAuthor": "Sam Brannen",
      "commitDateOld": "2016/5/26 上午12:46",
      "commitNameOld": "7b80cb0f513d8c451280c3d040308709596fe582",
      "commitAuthorOld": "Sam Brannen",
      "daysBetweenCommits": 16.09,
      "commitsBetweenForRepo": 131,
      "commitsBetweenForFile": 1,
      "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(help));\n    result.setExitCodeEnabled(detectedOptions.has(enableExitCode));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(disableAnsiColors));\n    result.setRunAllTests(detectedOptions.has(runAllTests));\n    result.setHideDetails(detectedOptions.has(hideDetails));\n    result.setClassnameFilter(detectedOptions.valueOf(classnameFilter));\n    result.setRequiredTags(detectedOptions.valuesOf(requiredTags));\n    result.setExcludedTags(detectedOptions.valuesOf(excludedTags));\n    result.setRequiredEngine(detectedOptions.valueOf(requiredEngine));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(additionalClasspathEntries));\n    result.setXmlReportsDir(detectedOptions.valueOf(xmlReportsDir));\n    result.setArguments(detectedOptions.valuesOf(arguments));\n    return result;\n}",
      "path": "junit-console/src/main/java/org/junit/gen5/console/options/AvailableOptions.java",
      "functionStartLine": 86,
      "functionName": "toCommandLineOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,16 +1,16 @@\n CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n     result.setDisplayHelp(detectedOptions.has(help));\n     result.setExitCodeEnabled(detectedOptions.has(enableExitCode));\n     result.setAnsiColorOutputDisabled(detectedOptions.has(disableAnsiColors));\n     result.setRunAllTests(detectedOptions.has(runAllTests));\n     result.setHideDetails(detectedOptions.has(hideDetails));\n     result.setClassnameFilter(detectedOptions.valueOf(classnameFilter));\n-    result.setRequiredTagsFilter(detectedOptions.valuesOf(requiredTagsFilter));\n-    result.setExcludedTagsFilter(detectedOptions.valuesOf(excludedTagsFilter));\n-    result.setRequiredEngineFilter(detectedOptions.valueOf(requiredEngineFilter));\n+    result.setRequiredTags(detectedOptions.valuesOf(requiredTags));\n+    result.setExcludedTags(detectedOptions.valuesOf(excludedTags));\n+    result.setRequiredEngine(detectedOptions.valueOf(requiredEngine));\n     result.setAdditionalClasspathEntries(detectedOptions.valuesOf(additionalClasspathEntries));\n     result.setXmlReportsDir(detectedOptions.valueOf(xmlReportsDir));\n     result.setArguments(detectedOptions.valuesOf(arguments));\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "30a17b707b00b3274fba81f4670111c15363e37c": {
      "type": "Ybodychange",
      "commitMessage": "#158 Added require-engine filter to console runner\n",
      "commitDate": "2016/2/19 下午4:11",
      "commitName": "30a17b707b00b3274fba81f4670111c15363e37c",
      "commitAuthor": "Johannes Link",
      "commitDateOld": "2016/2/1 下午7:34",
      "commitNameOld": "fa8d2dcd5d84036a60017289fefc7d7012703842",
      "commitAuthorOld": "Matthias Merdes",
      "daysBetweenCommits": 17.86,
      "commitsBetweenForRepo": 47,
      "commitsBetweenForFile": 1,
      "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(help));\n    result.setExitCodeEnabled(detectedOptions.has(enableExitCode));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(disableAnsiColors));\n    result.setRunAllTests(detectedOptions.has(runAllTests));\n    result.setHideDetails(detectedOptions.has(hideDetails));\n    result.setClassnameFilter(detectedOptions.valueOf(classnameFilter));\n    result.setRequiredTagsFilter(detectedOptions.valuesOf(requiredTagsFilter));\n    result.setExcludedTagsFilter(detectedOptions.valuesOf(excludedTagsFilter));\n    result.setRequiredEngineFilter(detectedOptions.valueOf(requiredEngineFilter));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(additionalClasspathEntries));\n    result.setXmlReportsDir(detectedOptions.valueOf(xmlReportsDir));\n    result.setArguments(detectedOptions.valuesOf(arguments));\n    return result;\n}",
      "path": "junit-console/src/main/java/org/junit/gen5/console/options/AvailableOptions.java",
      "functionStartLine": 78,
      "functionName": "toCommandLineOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,15 +1,16 @@\n CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n     result.setDisplayHelp(detectedOptions.has(help));\n     result.setExitCodeEnabled(detectedOptions.has(enableExitCode));\n     result.setAnsiColorOutputDisabled(detectedOptions.has(disableAnsiColors));\n     result.setRunAllTests(detectedOptions.has(runAllTests));\n     result.setHideDetails(detectedOptions.has(hideDetails));\n     result.setClassnameFilter(detectedOptions.valueOf(classnameFilter));\n     result.setRequiredTagsFilter(detectedOptions.valuesOf(requiredTagsFilter));\n     result.setExcludedTagsFilter(detectedOptions.valuesOf(excludedTagsFilter));\n+    result.setRequiredEngineFilter(detectedOptions.valueOf(requiredEngineFilter));\n     result.setAdditionalClasspathEntries(detectedOptions.valuesOf(additionalClasspathEntries));\n     result.setXmlReportsDir(detectedOptions.valueOf(xmlReportsDir));\n     result.setArguments(detectedOptions.valuesOf(arguments));\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "48dd35c9002c80eeb666f56489785d1bf47f9aa4": {
      "type": "Ybodychange",
      "commitMessage": "#131: improved naming for tag filters\n",
      "commitDate": "2016/2/1 下午7:19",
      "commitName": "48dd35c9002c80eeb666f56489785d1bf47f9aa4",
      "commitAuthor": "Matthias Merdes",
      "commitDateOld": "2016/1/26 下午11:06",
      "commitNameOld": "69b0a0138e4c3158504f7b382cdf05cc1e05b92e",
      "commitAuthorOld": "Marc Philipp",
      "daysBetweenCommits": 5.84,
      "commitsBetweenForRepo": 96,
      "commitsBetweenForFile": 1,
      "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(help));\n    result.setExitCodeEnabled(detectedOptions.has(enableExitCode));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(disableAnsiColors));\n    result.setRunAllTests(detectedOptions.has(runAllTests));\n    result.setHideDetails(detectedOptions.has(hideDetails));\n    result.setClassnameFilter(detectedOptions.valueOf(classnameFilter));\n    result.setRequiredTagsFilter(detectedOptions.valuesOf(requiredTagsFilter));\n    result.setExcludedTagsFilter(detectedOptions.valuesOf(excludedTagsFilter));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(additionalClasspathEntries));\n    result.setXmlReportsDir(detectedOptions.valueOf(xmlReportsDir));\n    result.setArguments(detectedOptions.valuesOf(arguments));\n    return result;\n}",
      "path": "junit-console/src/main/java/org/junit/gen5/console/options/AvailableOptions.java",
      "functionStartLine": 70,
      "functionName": "toCommandLineOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,15 +1,15 @@\n CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n     result.setDisplayHelp(detectedOptions.has(help));\n     result.setExitCodeEnabled(detectedOptions.has(enableExitCode));\n     result.setAnsiColorOutputDisabled(detectedOptions.has(disableAnsiColors));\n     result.setRunAllTests(detectedOptions.has(runAllTests));\n     result.setHideDetails(detectedOptions.has(hideDetails));\n     result.setClassnameFilter(detectedOptions.valueOf(classnameFilter));\n-    result.setTagsFilter(detectedOptions.valuesOf(tagFilter));\n-    result.setExcludeTags(detectedOptions.valuesOf(excludeTags));\n+    result.setRequiredTagsFilter(detectedOptions.valuesOf(requiredTagsFilter));\n+    result.setExcludedTagsFilter(detectedOptions.valuesOf(excludedTagsFilter));\n     result.setAdditionalClasspathEntries(detectedOptions.valuesOf(additionalClasspathEntries));\n     result.setXmlReportsDir(detectedOptions.valueOf(xmlReportsDir));\n     result.setArguments(detectedOptions.valuesOf(arguments));\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "69b0a0138e4c3158504f7b382cdf05cc1e05b92e": {
      "type": "Ybodychange",
      "commitMessage": "Pseudo XML file is now written by ConsoleRunner\n\nIssue: #86\n",
      "commitDate": "2016/1/26 下午11:06",
      "commitName": "69b0a0138e4c3158504f7b382cdf05cc1e05b92e",
      "commitAuthor": "Marc Philipp",
      "commitDateOld": "2016/1/2 上午2:57",
      "commitNameOld": "a6e3e77eeb01b8e6fdc91be3120c6d07af1b5a91",
      "commitAuthorOld": "Marc Philipp",
      "daysBetweenCommits": 24.84,
      "commitsBetweenForRepo": 569,
      "commitsBetweenForFile": 1,
      "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(help));\n    result.setExitCodeEnabled(detectedOptions.has(enableExitCode));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(disableAnsiColors));\n    result.setRunAllTests(detectedOptions.has(runAllTests));\n    result.setHideDetails(detectedOptions.has(hideDetails));\n    result.setClassnameFilter(detectedOptions.valueOf(classnameFilter));\n    result.setTagsFilter(detectedOptions.valuesOf(tagFilter));\n    result.setExcludeTags(detectedOptions.valuesOf(excludeTags));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(additionalClasspathEntries));\n    result.setXmlReportsDir(detectedOptions.valueOf(xmlReportsDir));\n    result.setArguments(detectedOptions.valuesOf(arguments));\n    return result;\n}",
      "path": "junit-console/src/main/java/org/junit/gen5/console/options/AvailableOptions.java",
      "functionStartLine": 70,
      "functionName": "toCommandLineOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,14 +1,15 @@\n CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n     result.setDisplayHelp(detectedOptions.has(help));\n     result.setExitCodeEnabled(detectedOptions.has(enableExitCode));\n     result.setAnsiColorOutputDisabled(detectedOptions.has(disableAnsiColors));\n     result.setRunAllTests(detectedOptions.has(runAllTests));\n     result.setHideDetails(detectedOptions.has(hideDetails));\n     result.setClassnameFilter(detectedOptions.valueOf(classnameFilter));\n     result.setTagsFilter(detectedOptions.valuesOf(tagFilter));\n     result.setExcludeTags(detectedOptions.valuesOf(excludeTags));\n     result.setAdditionalClasspathEntries(detectedOptions.valuesOf(additionalClasspathEntries));\n+    result.setXmlReportsDir(detectedOptions.valueOf(xmlReportsDir));\n     result.setArguments(detectedOptions.valuesOf(arguments));\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "591eab7207b37451a23c89cb7746ad80344a9078": {
      "type": "Ybodychange",
      "commitMessage": "Added -T/--exclude-tags option to console runner.\n\n------------------------------------------------------------------------\nOn behalf of the community, the JUnit Lambda Team thanks\nAdNovum Informatik AG (http://www.adnovum.ch)\nJUnit crowdfunding campaign!\n------------------------------------------------------------------------\n",
      "commitDate": "2015/12/24 上午1:56",
      "commitName": "591eab7207b37451a23c89cb7746ad80344a9078",
      "commitAuthor": "Johannes Link",
      "commitDateOld": "2015/12/7 上午3:16",
      "commitNameOld": "e9b1bd435dc182d13f610948024659a99bd727da",
      "commitAuthorOld": "Marc Philipp",
      "daysBetweenCommits": 16.94,
      "commitsBetweenForRepo": 145,
      "commitsBetweenForFile": 1,
      "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(help));\n    result.setExitCodeEnabled(detectedOptions.has(enableExitCode));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(disableAnsiColors));\n    result.setRunAllTests(detectedOptions.has(runAllTests));\n    result.setHideDetails(detectedOptions.has(hideDetails));\n    result.setClassnameFilter(detectedOptions.valueOf(classnameFilter));\n    result.setTagsFilter(detectedOptions.valuesOf(tagFilter));\n    result.setExcludeTags(detectedOptions.valuesOf(excludeTags));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(additionalClasspathEntries));\n    result.setArguments(detectedOptions.valuesOf(arguments));\n    return result;\n}",
      "path": "junit-console/src/main/java/org/junit/gen5/console/options/AvailableOptions.java",
      "functionStartLine": 66,
      "functionName": "toCommandLineOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,13 +1,14 @@\n CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n     result.setDisplayHelp(detectedOptions.has(help));\n     result.setExitCodeEnabled(detectedOptions.has(enableExitCode));\n     result.setAnsiColorOutputDisabled(detectedOptions.has(disableAnsiColors));\n     result.setRunAllTests(detectedOptions.has(runAllTests));\n     result.setHideDetails(detectedOptions.has(hideDetails));\n     result.setClassnameFilter(detectedOptions.valueOf(classnameFilter));\n     result.setTagsFilter(detectedOptions.valuesOf(tagFilter));\n+    result.setExcludeTags(detectedOptions.valuesOf(excludeTags));\n     result.setAdditionalClasspathEntries(detectedOptions.valuesOf(additionalClasspathEntries));\n     result.setArguments(detectedOptions.valuesOf(arguments));\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e9b1bd435dc182d13f610948024659a99bd727da": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "#49: Encapsulate fields\n",
      "commitDate": "2015/12/7 上午3:16",
      "commitName": "e9b1bd435dc182d13f610948024659a99bd727da",
      "commitAuthor": "Marc Philipp",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "#49: Encapsulate fields\n",
          "commitDate": "2015/12/7 上午3:16",
          "commitName": "e9b1bd435dc182d13f610948024659a99bd727da",
          "commitAuthor": "Marc Philipp",
          "commitDateOld": "2015/12/7 上午3:08",
          "commitNameOld": "dadf4482250f33170c0fe246a8f354c9c7615c68",
          "commitAuthorOld": "Marc Philipp",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(help));\n    result.setExitCodeEnabled(detectedOptions.has(enableExitCode));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(disableAnsiColors));\n    result.setRunAllTests(detectedOptions.has(runAllTests));\n    result.setHideDetails(detectedOptions.has(hideDetails));\n    result.setClassnameFilter(detectedOptions.valueOf(classnameFilter));\n    result.setTagsFilter(detectedOptions.valuesOf(tagFilter));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(additionalClasspathEntries));\n    result.setArguments(detectedOptions.valuesOf(arguments));\n    return result;\n}",
          "path": "junit-console/src/main/java/org/junit/gen5/console/options/AvailableOptions.java",
          "functionStartLine": 62,
          "functionName": "toCommandLineOptions",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,13 +1,13 @@\n-private CommandLineOptions toCommandLineOptions(AvailableOptions options, OptionSet detectedOptions) {\n+CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n-    result.setDisplayHelp(detectedOptions.has(options.help));\n-    result.setExitCodeEnabled(detectedOptions.has(options.enableExitCode));\n-    result.setAnsiColorOutputDisabled(detectedOptions.has(options.disableAnsiColors));\n-    result.setRunAllTests(detectedOptions.has(options.runAllTests));\n-    result.setHideDetails(detectedOptions.has(options.hideDetails));\n-    result.setClassnameFilter(detectedOptions.valueOf(options.classnameFilter));\n-    result.setTagsFilter(detectedOptions.valuesOf(options.tagFilter));\n-    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(options.additionalClasspathEntries));\n-    result.setArguments(detectedOptions.valuesOf(options.arguments));\n+    result.setDisplayHelp(detectedOptions.has(help));\n+    result.setExitCodeEnabled(detectedOptions.has(enableExitCode));\n+    result.setAnsiColorOutputDisabled(detectedOptions.has(disableAnsiColors));\n+    result.setRunAllTests(detectedOptions.has(runAllTests));\n+    result.setHideDetails(detectedOptions.has(hideDetails));\n+    result.setClassnameFilter(detectedOptions.valueOf(classnameFilter));\n+    result.setTagsFilter(detectedOptions.valuesOf(tagFilter));\n+    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(additionalClasspathEntries));\n+    result.setArguments(detectedOptions.valuesOf(arguments));\n     return result;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "junit-console/src/main/java/org/junit/gen5/console/options/JOptSimpleCommandLineOptionsParser.java",
            "newPath": "junit-console/src/main/java/org/junit/gen5/console/options/AvailableOptions.java",
            "oldMethodName": "toCommandLineOptions",
            "newMethodName": "toCommandLineOptions"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "#49: Encapsulate fields\n",
          "commitDate": "2015/12/7 上午3:16",
          "commitName": "e9b1bd435dc182d13f610948024659a99bd727da",
          "commitAuthor": "Marc Philipp",
          "commitDateOld": "2015/12/7 上午3:08",
          "commitNameOld": "dadf4482250f33170c0fe246a8f354c9c7615c68",
          "commitAuthorOld": "Marc Philipp",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(help));\n    result.setExitCodeEnabled(detectedOptions.has(enableExitCode));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(disableAnsiColors));\n    result.setRunAllTests(detectedOptions.has(runAllTests));\n    result.setHideDetails(detectedOptions.has(hideDetails));\n    result.setClassnameFilter(detectedOptions.valueOf(classnameFilter));\n    result.setTagsFilter(detectedOptions.valuesOf(tagFilter));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(additionalClasspathEntries));\n    result.setArguments(detectedOptions.valuesOf(arguments));\n    return result;\n}",
          "path": "junit-console/src/main/java/org/junit/gen5/console/options/AvailableOptions.java",
          "functionStartLine": 62,
          "functionName": "toCommandLineOptions",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,13 +1,13 @@\n-private CommandLineOptions toCommandLineOptions(AvailableOptions options, OptionSet detectedOptions) {\n+CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n-    result.setDisplayHelp(detectedOptions.has(options.help));\n-    result.setExitCodeEnabled(detectedOptions.has(options.enableExitCode));\n-    result.setAnsiColorOutputDisabled(detectedOptions.has(options.disableAnsiColors));\n-    result.setRunAllTests(detectedOptions.has(options.runAllTests));\n-    result.setHideDetails(detectedOptions.has(options.hideDetails));\n-    result.setClassnameFilter(detectedOptions.valueOf(options.classnameFilter));\n-    result.setTagsFilter(detectedOptions.valuesOf(options.tagFilter));\n-    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(options.additionalClasspathEntries));\n-    result.setArguments(detectedOptions.valuesOf(options.arguments));\n+    result.setDisplayHelp(detectedOptions.has(help));\n+    result.setExitCodeEnabled(detectedOptions.has(enableExitCode));\n+    result.setAnsiColorOutputDisabled(detectedOptions.has(disableAnsiColors));\n+    result.setRunAllTests(detectedOptions.has(runAllTests));\n+    result.setHideDetails(detectedOptions.has(hideDetails));\n+    result.setClassnameFilter(detectedOptions.valueOf(classnameFilter));\n+    result.setTagsFilter(detectedOptions.valuesOf(tagFilter));\n+    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(additionalClasspathEntries));\n+    result.setArguments(detectedOptions.valuesOf(arguments));\n     return result;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "#49: Encapsulate fields\n",
          "commitDate": "2015/12/7 上午3:16",
          "commitName": "e9b1bd435dc182d13f610948024659a99bd727da",
          "commitAuthor": "Marc Philipp",
          "commitDateOld": "2015/12/7 上午3:08",
          "commitNameOld": "dadf4482250f33170c0fe246a8f354c9c7615c68",
          "commitAuthorOld": "Marc Philipp",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(help));\n    result.setExitCodeEnabled(detectedOptions.has(enableExitCode));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(disableAnsiColors));\n    result.setRunAllTests(detectedOptions.has(runAllTests));\n    result.setHideDetails(detectedOptions.has(hideDetails));\n    result.setClassnameFilter(detectedOptions.valueOf(classnameFilter));\n    result.setTagsFilter(detectedOptions.valuesOf(tagFilter));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(additionalClasspathEntries));\n    result.setArguments(detectedOptions.valuesOf(arguments));\n    return result;\n}",
          "path": "junit-console/src/main/java/org/junit/gen5/console/options/AvailableOptions.java",
          "functionStartLine": 62,
          "functionName": "toCommandLineOptions",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,13 +1,13 @@\n-private CommandLineOptions toCommandLineOptions(AvailableOptions options, OptionSet detectedOptions) {\n+CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n-    result.setDisplayHelp(detectedOptions.has(options.help));\n-    result.setExitCodeEnabled(detectedOptions.has(options.enableExitCode));\n-    result.setAnsiColorOutputDisabled(detectedOptions.has(options.disableAnsiColors));\n-    result.setRunAllTests(detectedOptions.has(options.runAllTests));\n-    result.setHideDetails(detectedOptions.has(options.hideDetails));\n-    result.setClassnameFilter(detectedOptions.valueOf(options.classnameFilter));\n-    result.setTagsFilter(detectedOptions.valuesOf(options.tagFilter));\n-    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(options.additionalClasspathEntries));\n-    result.setArguments(detectedOptions.valuesOf(options.arguments));\n+    result.setDisplayHelp(detectedOptions.has(help));\n+    result.setExitCodeEnabled(detectedOptions.has(enableExitCode));\n+    result.setAnsiColorOutputDisabled(detectedOptions.has(disableAnsiColors));\n+    result.setRunAllTests(detectedOptions.has(runAllTests));\n+    result.setHideDetails(detectedOptions.has(hideDetails));\n+    result.setClassnameFilter(detectedOptions.valueOf(classnameFilter));\n+    result.setTagsFilter(detectedOptions.valuesOf(tagFilter));\n+    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(additionalClasspathEntries));\n+    result.setArguments(detectedOptions.valuesOf(arguments));\n     return result;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "#49: Encapsulate fields\n",
          "commitDate": "2015/12/7 上午3:16",
          "commitName": "e9b1bd435dc182d13f610948024659a99bd727da",
          "commitAuthor": "Marc Philipp",
          "commitDateOld": "2015/12/7 上午3:08",
          "commitNameOld": "dadf4482250f33170c0fe246a8f354c9c7615c68",
          "commitAuthorOld": "Marc Philipp",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(help));\n    result.setExitCodeEnabled(detectedOptions.has(enableExitCode));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(disableAnsiColors));\n    result.setRunAllTests(detectedOptions.has(runAllTests));\n    result.setHideDetails(detectedOptions.has(hideDetails));\n    result.setClassnameFilter(detectedOptions.valueOf(classnameFilter));\n    result.setTagsFilter(detectedOptions.valuesOf(tagFilter));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(additionalClasspathEntries));\n    result.setArguments(detectedOptions.valuesOf(arguments));\n    return result;\n}",
          "path": "junit-console/src/main/java/org/junit/gen5/console/options/AvailableOptions.java",
          "functionStartLine": 62,
          "functionName": "toCommandLineOptions",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,13 +1,13 @@\n-private CommandLineOptions toCommandLineOptions(AvailableOptions options, OptionSet detectedOptions) {\n+CommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n     CommandLineOptions result \u003d new CommandLineOptions();\n-    result.setDisplayHelp(detectedOptions.has(options.help));\n-    result.setExitCodeEnabled(detectedOptions.has(options.enableExitCode));\n-    result.setAnsiColorOutputDisabled(detectedOptions.has(options.disableAnsiColors));\n-    result.setRunAllTests(detectedOptions.has(options.runAllTests));\n-    result.setHideDetails(detectedOptions.has(options.hideDetails));\n-    result.setClassnameFilter(detectedOptions.valueOf(options.classnameFilter));\n-    result.setTagsFilter(detectedOptions.valuesOf(options.tagFilter));\n-    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(options.additionalClasspathEntries));\n-    result.setArguments(detectedOptions.valuesOf(options.arguments));\n+    result.setDisplayHelp(detectedOptions.has(help));\n+    result.setExitCodeEnabled(detectedOptions.has(enableExitCode));\n+    result.setAnsiColorOutputDisabled(detectedOptions.has(disableAnsiColors));\n+    result.setRunAllTests(detectedOptions.has(runAllTests));\n+    result.setHideDetails(detectedOptions.has(hideDetails));\n+    result.setClassnameFilter(detectedOptions.valueOf(classnameFilter));\n+    result.setTagsFilter(detectedOptions.valuesOf(tagFilter));\n+    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(additionalClasspathEntries));\n+    result.setArguments(detectedOptions.valuesOf(arguments));\n     return result;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[options-AvailableOptions, detectedOptions-OptionSet]",
            "newValue": "[detectedOptions-OptionSet]"
          }
        }
      ]
    },
    "550e5b1d774d538ecfa22d7efe8fe893dcd9fa06": {
      "type": "Yintroduced",
      "commitMessage": "#49: CommandLineOptions: POJO instead of interface\n\n- Requires less stubbing\n- Easier test code\n",
      "commitDate": "2015/12/6 下午8:48",
      "commitName": "550e5b1d774d538ecfa22d7efe8fe893dcd9fa06",
      "commitAuthor": "Marc Philipp",
      "diff": "@@ -0,0 +1,13 @@\n+private CommandLineOptions toCommandLineOptions(AvailableOptions options, OptionSet detectedOptions) {\n+    CommandLineOptions result \u003d new CommandLineOptions();\n+    result.setDisplayHelp(detectedOptions.has(options.help));\n+    result.setExitCodeEnabled(detectedOptions.has(options.enableExitCode));\n+    result.setAnsiColorOutputDisabled(detectedOptions.has(options.disableAnsiColors));\n+    result.setRunAllTests(detectedOptions.has(options.runAllTests));\n+    result.setHideDetails(detectedOptions.has(options.hideDetails));\n+    result.setClassnameFilter(detectedOptions.valueOf(options.classnameFilter));\n+    result.setTagsFilter(detectedOptions.valuesOf(options.tagFilter));\n+    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(options.additionalClasspathEntries));\n+    result.setArguments(detectedOptions.valuesOf(options.arguments));\n+    return result;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private CommandLineOptions toCommandLineOptions(AvailableOptions options, OptionSet detectedOptions) {\n    CommandLineOptions result \u003d new CommandLineOptions();\n    result.setDisplayHelp(detectedOptions.has(options.help));\n    result.setExitCodeEnabled(detectedOptions.has(options.enableExitCode));\n    result.setAnsiColorOutputDisabled(detectedOptions.has(options.disableAnsiColors));\n    result.setRunAllTests(detectedOptions.has(options.runAllTests));\n    result.setHideDetails(detectedOptions.has(options.hideDetails));\n    result.setClassnameFilter(detectedOptions.valueOf(options.classnameFilter));\n    result.setTagsFilter(detectedOptions.valuesOf(options.tagFilter));\n    result.setAdditionalClasspathEntries(detectedOptions.valuesOf(options.additionalClasspathEntries));\n    result.setArguments(detectedOptions.valuesOf(options.arguments));\n    return result;\n}",
      "path": "junit-console/src/main/java/org/junit/gen5/console/options/JOptSimpleCommandLineOptionsParser.java",
      "functionStartLine": 42,
      "functionName": "toCommandLineOptions",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}