{
  "origin": "codeshovel",
  "repositoryName": "jetty.project",
  "repositoryPath": "/Users/franky/Documents/Homework/毕业设计/testcase/jetty.project/.git",
  "startCommitName": "fc5dd874f3deda71e6cd42af994a5af5cb6be4af",
  "sourceFileName": "FragmentDescriptor.java",
  "functionName": "processAfters",
  "functionId": "processAfters___ordering-XmlParser.Node",
  "sourceFilePath": "jetty-webapp/src/main/java/org/eclipse/jetty/webapp/FragmentDescriptor.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 123,
  "functionEndLine": 148,
  "numCommitsSeen": 25,
  "timeTaken": 1295,
  "changeHistory": [
    "6d26b45afed18dd5fe1211ccfbac7eb2587aa9a9",
    "3919023be5d403b0e081430bb8f41d20ac1f29d1",
    "314f94decc0e814baf31f500502020e05fcb73a2",
    "688fbac7aa52a61bd864d6e5890507a95e71e287",
    "da627b843fe81fa0fe52a046c1be8595630e9ae7"
  ],
  "changeHistoryShort": {
    "6d26b45afed18dd5fe1211ccfbac7eb2587aa9a9": "Ybodychange",
    "3919023be5d403b0e081430bb8f41d20ac1f29d1": "Ybodychange",
    "314f94decc0e814baf31f500502020e05fcb73a2": "Ymultichange(Ymovefromfile,Yexceptionschange,Ybodychange,Yrename,Yparameterchange)",
    "688fbac7aa52a61bd864d6e5890507a95e71e287": "Ymultichange(Ymovefromfile,Yexceptionschange,Ybodychange,Yrename,Yparameterchange)",
    "da627b843fe81fa0fe52a046c1be8595630e9ae7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6d26b45afed18dd5fe1211ccfbac7eb2587aa9a9": {
      "type": "Ybodychange",
      "commitMessage": "391877 org.eclipse.jetty.webapp.FragmentDescriptor incorrectly reporting duplicate others for after ordering\n",
      "commitDate": "2012/10/15 上午9:12",
      "commitName": "6d26b45afed18dd5fe1211ccfbac7eb2587aa9a9",
      "commitAuthor": "Jan Bartel",
      "commitDateOld": "2012/8/17 上午8:11",
      "commitNameOld": "00ed5498988062d768ee306da708d338a96253dc",
      "commitAuthorOld": "Jesse McConnell",
      "daysBetweenCommits": 59.04,
      "commitsBetweenForRepo": 73,
      "commitsBetweenForFile": 1,
      "actualSource": "public void processAfters(XmlParser.Node ordering) {\n    XmlParser.Node after \u003d ordering.get(\"after\");\n    if (after \u003d\u003d null)\n        return;\n    Iterator\u003c?\u003e iter \u003d after.iterator();\n    XmlParser.Node node \u003d null;\n    while (iter.hasNext()) {\n        Object o \u003d iter.next();\n        if (!(o instanceof XmlParser.Node))\n            continue;\n        node \u003d (XmlParser.Node) o;\n        if (node.getTag().equalsIgnoreCase(\"others\")) {\n            if (_otherType !\u003d OtherType.None)\n                throw new IllegalStateException(\"Duplicate \u003cother\u003e clause detected in \" + _xml.getURI());\n            _otherType \u003d OtherType.After;\n        } else if (node.getTag().equalsIgnoreCase(\"name\"))\n            _afters.add(node.toString(false, true));\n    }\n}",
      "path": "jetty-webapp/src/main/java/org/eclipse/jetty/webapp/FragmentDescriptor.java",
      "functionStartLine": 123,
      "functionName": "processAfters",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,19 +1,19 @@\n public void processAfters(XmlParser.Node ordering) {\n     XmlParser.Node after \u003d ordering.get(\"after\");\n     if (after \u003d\u003d null)\n         return;\n     Iterator\u003c?\u003e iter \u003d after.iterator();\n     XmlParser.Node node \u003d null;\n     while (iter.hasNext()) {\n         Object o \u003d iter.next();\n         if (!(o instanceof XmlParser.Node))\n             continue;\n         node \u003d (XmlParser.Node) o;\n         if (node.getTag().equalsIgnoreCase(\"others\")) {\n-            if (_otherType !\u003d OtherType.After)\n+            if (_otherType !\u003d OtherType.None)\n                 throw new IllegalStateException(\"Duplicate \u003cother\u003e clause detected in \" + _xml.getURI());\n             _otherType \u003d OtherType.After;\n         } else if (node.getTag().equalsIgnoreCase(\"name\"))\n             _afters.add(node.toString(false, true));\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "3919023be5d403b0e081430bb8f41d20ac1f29d1": {
      "type": "Ybodychange",
      "commitMessage": "[Bug 352133] resolve some 1.5isms",
      "commitDate": "2011/7/19 上午1:54",
      "commitName": "3919023be5d403b0e081430bb8f41d20ac1f29d1",
      "commitAuthor": "Jesse McConnell",
      "commitDateOld": "2011/3/8 上午8:42",
      "commitNameOld": "5ae7e22bef2e2ea43881c9d7529a2cc15cabe897",
      "commitAuthorOld": "Jan Bartel",
      "daysBetweenCommits": 132.72,
      "commitsBetweenForRepo": 403,
      "commitsBetweenForFile": 1,
      "actualSource": "public void processAfters(XmlParser.Node ordering) {\n    XmlParser.Node after \u003d ordering.get(\"after\");\n    if (after \u003d\u003d null)\n        return;\n    Iterator\u003c?\u003e iter \u003d after.iterator();\n    XmlParser.Node node \u003d null;\n    while (iter.hasNext()) {\n        Object o \u003d iter.next();\n        if (!(o instanceof XmlParser.Node))\n            continue;\n        node \u003d (XmlParser.Node) o;\n        if (node.getTag().equalsIgnoreCase(\"others\")) {\n            if (_otherType !\u003d OtherType.After)\n                throw new IllegalStateException(\"Duplicate \u003cother\u003e clause detected in \" + _xml.getURI());\n            _otherType \u003d OtherType.After;\n        } else if (node.getTag().equalsIgnoreCase(\"name\"))\n            _afters.add(node.toString(false, true));\n    }\n}",
      "path": "jetty-webapp/src/main/java/org/eclipse/jetty/webapp/FragmentDescriptor.java",
      "functionStartLine": 118,
      "functionName": "processAfters",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,19 +1,19 @@\n public void processAfters(XmlParser.Node ordering) {\n     XmlParser.Node after \u003d ordering.get(\"after\");\n     if (after \u003d\u003d null)\n         return;\n-    Iterator iter \u003d after.iterator();\n+    Iterator\u003c?\u003e iter \u003d after.iterator();\n     XmlParser.Node node \u003d null;\n     while (iter.hasNext()) {\n         Object o \u003d iter.next();\n         if (!(o instanceof XmlParser.Node))\n             continue;\n         node \u003d (XmlParser.Node) o;\n         if (node.getTag().equalsIgnoreCase(\"others\")) {\n             if (_otherType !\u003d OtherType.After)\n                 throw new IllegalStateException(\"Duplicate \u003cother\u003e clause detected in \" + _xml.getURI());\n             _otherType \u003d OtherType.After;\n         } else if (node.getTag().equalsIgnoreCase(\"name\"))\n             _afters.add(node.toString(false, true));\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "314f94decc0e814baf31f500502020e05fcb73a2": {
      "type": "Ymultichange(Ymovefromfile,Yexceptionschange,Ybodychange,Yrename,Yparameterchange)",
      "commitMessage": "320073 Reconcile jetty-8 and jetty-7 webapp configuration mechanisms\n\ngit-svn-id: svn+ssh://dev.eclipse.org/svnroot/rt/org.eclipse.jetty/jetty/trunk@2145 7e9141cc-0065-0410-87d8-b60c137991c4\n",
      "commitDate": "2010/7/16 下午3:15",
      "commitName": "314f94decc0e814baf31f500502020e05fcb73a2",
      "commitAuthor": "Jan Bartel",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "320073 Reconcile jetty-8 and jetty-7 webapp configuration mechanisms\n\ngit-svn-id: svn+ssh://dev.eclipse.org/svnroot/rt/org.eclipse.jetty/jetty/trunk@2145 7e9141cc-0065-0410-87d8-b60c137991c4\n",
          "commitDate": "2010/7/16 下午3:15",
          "commitName": "314f94decc0e814baf31f500502020e05fcb73a2",
          "commitAuthor": "Jan Bartel",
          "commitDateOld": "2010/7/15 下午8:31",
          "commitNameOld": "8210d068c43058097970fae131643df6b9d9dbdf",
          "commitAuthorOld": "Greg Wilkins",
          "daysBetweenCommits": 0.78,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public void processAfters(XmlParser.Node ordering) {\n    XmlParser.Node after \u003d ordering.get(\"after\");\n    if (after \u003d\u003d null)\n        return;\n    Iterator iter \u003d after.iterator();\n    XmlParser.Node node \u003d null;\n    while (iter.hasNext()) {\n        Object o \u003d iter.next();\n        if (!(o instanceof XmlParser.Node))\n            continue;\n        node \u003d (XmlParser.Node) o;\n        if (node.getTag().equalsIgnoreCase(\"others\")) {\n            if (_otherType !\u003d OtherType.After)\n                throw new IllegalStateException(\"Duplicate \u003cother\u003e clause detected in \" + _xml.getURI());\n            _otherType \u003d OtherType.After;\n        } else if (node.getTag().equalsIgnoreCase(\"name\"))\n            _afters.add(node.toString(false, true));\n    }\n}",
          "path": "jetty-webapp/src/main/java/org/eclipse/jetty/webapp/FragmentDescriptor.java",
          "functionStartLine": 116,
          "functionName": "processAfters",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,21 +1,19 @@\n-public void process(XmlParser.Node root) throws Exception {\n-    if (root \u003d\u003d null)\n+public void processAfters(XmlParser.Node ordering) {\n+    XmlParser.Node after \u003d ordering.get(\"after\");\n+    if (after \u003d\u003d null)\n         return;\n-    Iterator iter \u003d root.iterator();\n+    Iterator iter \u003d after.iterator();\n     XmlParser.Node node \u003d null;\n     while (iter.hasNext()) {\n-        try {\n-            Object o \u003d iter.next();\n-            if (!(o instanceof XmlParser.Node))\n-                continue;\n-            node \u003d (XmlParser.Node) o;\n-            String name \u003d node.getTag();\n-            initWebXmlElement(name, node);\n-        } catch (ClassNotFoundException e) {\n-            throw e;\n-        } catch (Exception e) {\n-            Log.warn(\"Configuration problem at \" + node, e);\n-            throw new UnavailableException(\"Configuration problem\");\n-        }\n+        Object o \u003d iter.next();\n+        if (!(o instanceof XmlParser.Node))\n+            continue;\n+        node \u003d (XmlParser.Node) o;\n+        if (node.getTag().equalsIgnoreCase(\"others\")) {\n+            if (_otherType !\u003d OtherType.After)\n+                throw new IllegalStateException(\"Duplicate \u003cother\u003e clause detected in \" + _xml.getURI());\n+            _otherType \u003d OtherType.After;\n+        } else if (node.getTag().equalsIgnoreCase(\"name\"))\n+            _afters.add(node.toString(false, true));\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "jetty-plus/src/main/java/org/eclipse/jetty/plus/webapp/AbstractConfiguration.java",
            "newPath": "jetty-webapp/src/main/java/org/eclipse/jetty/webapp/FragmentDescriptor.java",
            "oldMethodName": "process",
            "newMethodName": "processAfters"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "320073 Reconcile jetty-8 and jetty-7 webapp configuration mechanisms\n\ngit-svn-id: svn+ssh://dev.eclipse.org/svnroot/rt/org.eclipse.jetty/jetty/trunk@2145 7e9141cc-0065-0410-87d8-b60c137991c4\n",
          "commitDate": "2010/7/16 下午3:15",
          "commitName": "314f94decc0e814baf31f500502020e05fcb73a2",
          "commitAuthor": "Jan Bartel",
          "commitDateOld": "2010/7/15 下午8:31",
          "commitNameOld": "8210d068c43058097970fae131643df6b9d9dbdf",
          "commitAuthorOld": "Greg Wilkins",
          "daysBetweenCommits": 0.78,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public void processAfters(XmlParser.Node ordering) {\n    XmlParser.Node after \u003d ordering.get(\"after\");\n    if (after \u003d\u003d null)\n        return;\n    Iterator iter \u003d after.iterator();\n    XmlParser.Node node \u003d null;\n    while (iter.hasNext()) {\n        Object o \u003d iter.next();\n        if (!(o instanceof XmlParser.Node))\n            continue;\n        node \u003d (XmlParser.Node) o;\n        if (node.getTag().equalsIgnoreCase(\"others\")) {\n            if (_otherType !\u003d OtherType.After)\n                throw new IllegalStateException(\"Duplicate \u003cother\u003e clause detected in \" + _xml.getURI());\n            _otherType \u003d OtherType.After;\n        } else if (node.getTag().equalsIgnoreCase(\"name\"))\n            _afters.add(node.toString(false, true));\n    }\n}",
          "path": "jetty-webapp/src/main/java/org/eclipse/jetty/webapp/FragmentDescriptor.java",
          "functionStartLine": 116,
          "functionName": "processAfters",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,21 +1,19 @@\n-public void process(XmlParser.Node root) throws Exception {\n-    if (root \u003d\u003d null)\n+public void processAfters(XmlParser.Node ordering) {\n+    XmlParser.Node after \u003d ordering.get(\"after\");\n+    if (after \u003d\u003d null)\n         return;\n-    Iterator iter \u003d root.iterator();\n+    Iterator iter \u003d after.iterator();\n     XmlParser.Node node \u003d null;\n     while (iter.hasNext()) {\n-        try {\n-            Object o \u003d iter.next();\n-            if (!(o instanceof XmlParser.Node))\n-                continue;\n-            node \u003d (XmlParser.Node) o;\n-            String name \u003d node.getTag();\n-            initWebXmlElement(name, node);\n-        } catch (ClassNotFoundException e) {\n-            throw e;\n-        } catch (Exception e) {\n-            Log.warn(\"Configuration problem at \" + node, e);\n-            throw new UnavailableException(\"Configuration problem\");\n-        }\n+        Object o \u003d iter.next();\n+        if (!(o instanceof XmlParser.Node))\n+            continue;\n+        node \u003d (XmlParser.Node) o;\n+        if (node.getTag().equalsIgnoreCase(\"others\")) {\n+            if (_otherType !\u003d OtherType.After)\n+                throw new IllegalStateException(\"Duplicate \u003cother\u003e clause detected in \" + _xml.getURI());\n+            _otherType \u003d OtherType.After;\n+        } else if (node.getTag().equalsIgnoreCase(\"name\"))\n+            _afters.add(node.toString(false, true));\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[Exception]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "320073 Reconcile jetty-8 and jetty-7 webapp configuration mechanisms\n\ngit-svn-id: svn+ssh://dev.eclipse.org/svnroot/rt/org.eclipse.jetty/jetty/trunk@2145 7e9141cc-0065-0410-87d8-b60c137991c4\n",
          "commitDate": "2010/7/16 下午3:15",
          "commitName": "314f94decc0e814baf31f500502020e05fcb73a2",
          "commitAuthor": "Jan Bartel",
          "commitDateOld": "2010/7/15 下午8:31",
          "commitNameOld": "8210d068c43058097970fae131643df6b9d9dbdf",
          "commitAuthorOld": "Greg Wilkins",
          "daysBetweenCommits": 0.78,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public void processAfters(XmlParser.Node ordering) {\n    XmlParser.Node after \u003d ordering.get(\"after\");\n    if (after \u003d\u003d null)\n        return;\n    Iterator iter \u003d after.iterator();\n    XmlParser.Node node \u003d null;\n    while (iter.hasNext()) {\n        Object o \u003d iter.next();\n        if (!(o instanceof XmlParser.Node))\n            continue;\n        node \u003d (XmlParser.Node) o;\n        if (node.getTag().equalsIgnoreCase(\"others\")) {\n            if (_otherType !\u003d OtherType.After)\n                throw new IllegalStateException(\"Duplicate \u003cother\u003e clause detected in \" + _xml.getURI());\n            _otherType \u003d OtherType.After;\n        } else if (node.getTag().equalsIgnoreCase(\"name\"))\n            _afters.add(node.toString(false, true));\n    }\n}",
          "path": "jetty-webapp/src/main/java/org/eclipse/jetty/webapp/FragmentDescriptor.java",
          "functionStartLine": 116,
          "functionName": "processAfters",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,21 +1,19 @@\n-public void process(XmlParser.Node root) throws Exception {\n-    if (root \u003d\u003d null)\n+public void processAfters(XmlParser.Node ordering) {\n+    XmlParser.Node after \u003d ordering.get(\"after\");\n+    if (after \u003d\u003d null)\n         return;\n-    Iterator iter \u003d root.iterator();\n+    Iterator iter \u003d after.iterator();\n     XmlParser.Node node \u003d null;\n     while (iter.hasNext()) {\n-        try {\n-            Object o \u003d iter.next();\n-            if (!(o instanceof XmlParser.Node))\n-                continue;\n-            node \u003d (XmlParser.Node) o;\n-            String name \u003d node.getTag();\n-            initWebXmlElement(name, node);\n-        } catch (ClassNotFoundException e) {\n-            throw e;\n-        } catch (Exception e) {\n-            Log.warn(\"Configuration problem at \" + node, e);\n-            throw new UnavailableException(\"Configuration problem\");\n-        }\n+        Object o \u003d iter.next();\n+        if (!(o instanceof XmlParser.Node))\n+            continue;\n+        node \u003d (XmlParser.Node) o;\n+        if (node.getTag().equalsIgnoreCase(\"others\")) {\n+            if (_otherType !\u003d OtherType.After)\n+                throw new IllegalStateException(\"Duplicate \u003cother\u003e clause detected in \" + _xml.getURI());\n+            _otherType \u003d OtherType.After;\n+        } else if (node.getTag().equalsIgnoreCase(\"name\"))\n+            _afters.add(node.toString(false, true));\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yrename",
          "commitMessage": "320073 Reconcile jetty-8 and jetty-7 webapp configuration mechanisms\n\ngit-svn-id: svn+ssh://dev.eclipse.org/svnroot/rt/org.eclipse.jetty/jetty/trunk@2145 7e9141cc-0065-0410-87d8-b60c137991c4\n",
          "commitDate": "2010/7/16 下午3:15",
          "commitName": "314f94decc0e814baf31f500502020e05fcb73a2",
          "commitAuthor": "Jan Bartel",
          "commitDateOld": "2010/7/15 下午8:31",
          "commitNameOld": "8210d068c43058097970fae131643df6b9d9dbdf",
          "commitAuthorOld": "Greg Wilkins",
          "daysBetweenCommits": 0.78,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public void processAfters(XmlParser.Node ordering) {\n    XmlParser.Node after \u003d ordering.get(\"after\");\n    if (after \u003d\u003d null)\n        return;\n    Iterator iter \u003d after.iterator();\n    XmlParser.Node node \u003d null;\n    while (iter.hasNext()) {\n        Object o \u003d iter.next();\n        if (!(o instanceof XmlParser.Node))\n            continue;\n        node \u003d (XmlParser.Node) o;\n        if (node.getTag().equalsIgnoreCase(\"others\")) {\n            if (_otherType !\u003d OtherType.After)\n                throw new IllegalStateException(\"Duplicate \u003cother\u003e clause detected in \" + _xml.getURI());\n            _otherType \u003d OtherType.After;\n        } else if (node.getTag().equalsIgnoreCase(\"name\"))\n            _afters.add(node.toString(false, true));\n    }\n}",
          "path": "jetty-webapp/src/main/java/org/eclipse/jetty/webapp/FragmentDescriptor.java",
          "functionStartLine": 116,
          "functionName": "processAfters",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,21 +1,19 @@\n-public void process(XmlParser.Node root) throws Exception {\n-    if (root \u003d\u003d null)\n+public void processAfters(XmlParser.Node ordering) {\n+    XmlParser.Node after \u003d ordering.get(\"after\");\n+    if (after \u003d\u003d null)\n         return;\n-    Iterator iter \u003d root.iterator();\n+    Iterator iter \u003d after.iterator();\n     XmlParser.Node node \u003d null;\n     while (iter.hasNext()) {\n-        try {\n-            Object o \u003d iter.next();\n-            if (!(o instanceof XmlParser.Node))\n-                continue;\n-            node \u003d (XmlParser.Node) o;\n-            String name \u003d node.getTag();\n-            initWebXmlElement(name, node);\n-        } catch (ClassNotFoundException e) {\n-            throw e;\n-        } catch (Exception e) {\n-            Log.warn(\"Configuration problem at \" + node, e);\n-            throw new UnavailableException(\"Configuration problem\");\n-        }\n+        Object o \u003d iter.next();\n+        if (!(o instanceof XmlParser.Node))\n+            continue;\n+        node \u003d (XmlParser.Node) o;\n+        if (node.getTag().equalsIgnoreCase(\"others\")) {\n+            if (_otherType !\u003d OtherType.After)\n+                throw new IllegalStateException(\"Duplicate \u003cother\u003e clause detected in \" + _xml.getURI());\n+            _otherType \u003d OtherType.After;\n+        } else if (node.getTag().equalsIgnoreCase(\"name\"))\n+            _afters.add(node.toString(false, true));\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "process",
            "newValue": "processAfters"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "320073 Reconcile jetty-8 and jetty-7 webapp configuration mechanisms\n\ngit-svn-id: svn+ssh://dev.eclipse.org/svnroot/rt/org.eclipse.jetty/jetty/trunk@2145 7e9141cc-0065-0410-87d8-b60c137991c4\n",
          "commitDate": "2010/7/16 下午3:15",
          "commitName": "314f94decc0e814baf31f500502020e05fcb73a2",
          "commitAuthor": "Jan Bartel",
          "commitDateOld": "2010/7/15 下午8:31",
          "commitNameOld": "8210d068c43058097970fae131643df6b9d9dbdf",
          "commitAuthorOld": "Greg Wilkins",
          "daysBetweenCommits": 0.78,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public void processAfters(XmlParser.Node ordering) {\n    XmlParser.Node after \u003d ordering.get(\"after\");\n    if (after \u003d\u003d null)\n        return;\n    Iterator iter \u003d after.iterator();\n    XmlParser.Node node \u003d null;\n    while (iter.hasNext()) {\n        Object o \u003d iter.next();\n        if (!(o instanceof XmlParser.Node))\n            continue;\n        node \u003d (XmlParser.Node) o;\n        if (node.getTag().equalsIgnoreCase(\"others\")) {\n            if (_otherType !\u003d OtherType.After)\n                throw new IllegalStateException(\"Duplicate \u003cother\u003e clause detected in \" + _xml.getURI());\n            _otherType \u003d OtherType.After;\n        } else if (node.getTag().equalsIgnoreCase(\"name\"))\n            _afters.add(node.toString(false, true));\n    }\n}",
          "path": "jetty-webapp/src/main/java/org/eclipse/jetty/webapp/FragmentDescriptor.java",
          "functionStartLine": 116,
          "functionName": "processAfters",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,21 +1,19 @@\n-public void process(XmlParser.Node root) throws Exception {\n-    if (root \u003d\u003d null)\n+public void processAfters(XmlParser.Node ordering) {\n+    XmlParser.Node after \u003d ordering.get(\"after\");\n+    if (after \u003d\u003d null)\n         return;\n-    Iterator iter \u003d root.iterator();\n+    Iterator iter \u003d after.iterator();\n     XmlParser.Node node \u003d null;\n     while (iter.hasNext()) {\n-        try {\n-            Object o \u003d iter.next();\n-            if (!(o instanceof XmlParser.Node))\n-                continue;\n-            node \u003d (XmlParser.Node) o;\n-            String name \u003d node.getTag();\n-            initWebXmlElement(name, node);\n-        } catch (ClassNotFoundException e) {\n-            throw e;\n-        } catch (Exception e) {\n-            Log.warn(\"Configuration problem at \" + node, e);\n-            throw new UnavailableException(\"Configuration problem\");\n-        }\n+        Object o \u003d iter.next();\n+        if (!(o instanceof XmlParser.Node))\n+            continue;\n+        node \u003d (XmlParser.Node) o;\n+        if (node.getTag().equalsIgnoreCase(\"others\")) {\n+            if (_otherType !\u003d OtherType.After)\n+                throw new IllegalStateException(\"Duplicate \u003cother\u003e clause detected in \" + _xml.getURI());\n+            _otherType \u003d OtherType.After;\n+        } else if (node.getTag().equalsIgnoreCase(\"name\"))\n+            _afters.add(node.toString(false, true));\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[root-XmlParser.Node]",
            "newValue": "[ordering-XmlParser.Node]"
          }
        }
      ]
    },
    "688fbac7aa52a61bd864d6e5890507a95e71e287": {
      "type": "Ymultichange(Ymovefromfile,Yexceptionschange,Ybodychange,Yrename,Yparameterchange)",
      "commitMessage": "New Configuration structure. This structure will be modified in jetty-8 to accommodate servlet spec3. This checkin moves jetty-7 closer to that final structure. Configuration now consists of 3 phases: preConfigure(), configure() and postConfigure(). All Configurations can now be chained together rather than having to override/replace existing Configurations.\n\ngit-svn-id: svn+ssh://dev.eclipse.org/svnroot/rt/org.eclipse.jetty/jetty/trunk@230 7e9141cc-0065-0410-87d8-b60c137991c4\n",
      "commitDate": "2009/5/19 下午3:40",
      "commitName": "688fbac7aa52a61bd864d6e5890507a95e71e287",
      "commitAuthor": "Jan Bartel",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "New Configuration structure. This structure will be modified in jetty-8 to accommodate servlet spec3. This checkin moves jetty-7 closer to that final structure. Configuration now consists of 3 phases: preConfigure(), configure() and postConfigure(). All Configurations can now be chained together rather than having to override/replace existing Configurations.\n\ngit-svn-id: svn+ssh://dev.eclipse.org/svnroot/rt/org.eclipse.jetty/jetty/trunk@230 7e9141cc-0065-0410-87d8-b60c137991c4\n",
          "commitDate": "2009/5/19 下午3:40",
          "commitName": "688fbac7aa52a61bd864d6e5890507a95e71e287",
          "commitAuthor": "Jan Bartel",
          "commitDateOld": "2009/5/19 下午3:40",
          "commitNameOld": "c236945c538fb091d4a6e8f2b2d6995d0e4cca46",
          "commitAuthorOld": "Greg Wilkins",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public void process(XmlParser.Node root) throws Exception {\n    if (root \u003d\u003d null)\n        return;\n    Iterator iter \u003d root.iterator();\n    XmlParser.Node node \u003d null;\n    while (iter.hasNext()) {\n        try {\n            Object o \u003d iter.next();\n            if (!(o instanceof XmlParser.Node))\n                continue;\n            node \u003d (XmlParser.Node) o;\n            String name \u003d node.getTag();\n            initWebXmlElement(name, node);\n        } catch (ClassNotFoundException e) {\n            throw e;\n        } catch (Exception e) {\n            Log.warn(\"Configuration problem at \" + node, e);\n            throw new UnavailableException(\"Configuration problem\");\n        }\n    }\n}",
          "path": "jetty-plus/src/main/java/org/eclipse/jetty/plus/webapp/AbstractConfiguration.java",
          "functionStartLine": 77,
          "functionName": "process",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,21 @@\n-public void processEntry(URL jarUrl, JarEntry entry) {\n-    try {\n-        String name \u003d entry.getName();\n-        if (name.toLowerCase().equals(\"meta-inf/web.xml\")) {\n-            Resource webXmlFrag \u003d _context.newResource(\"jar:\" + jarUrl + \"!/\" + name);\n-            Log.debug(\"web.xml fragment found {}\", webXmlFrag);\n-            XmlParser.Node config \u003d null;\n-            config \u003d _xmlParser.parse(webXmlFrag.toString());\n-            initialize(config);\n+public void process(XmlParser.Node root) throws Exception {\n+    if (root \u003d\u003d null)\n+        return;\n+    Iterator iter \u003d root.iterator();\n+    XmlParser.Node node \u003d null;\n+    while (iter.hasNext()) {\n+        try {\n+            Object o \u003d iter.next();\n+            if (!(o instanceof XmlParser.Node))\n+                continue;\n+            node \u003d (XmlParser.Node) o;\n+            String name \u003d node.getTag();\n+            initWebXmlElement(name, node);\n+        } catch (ClassNotFoundException e) {\n+            throw e;\n+        } catch (Exception e) {\n+            Log.warn(\"Configuration problem at \" + node, e);\n+            throw new UnavailableException(\"Configuration problem\");\n         }\n-    } catch (Exception e) {\n-        Log.warn(\"Problem processing jar entry \" + entry, e);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "jetty-webapp/src/main/java/org/eclipse/jetty/webapp/WebXmlConfiguration.java",
            "newPath": "jetty-plus/src/main/java/org/eclipse/jetty/plus/webapp/AbstractConfiguration.java",
            "oldMethodName": "processEntry",
            "newMethodName": "process"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "New Configuration structure. This structure will be modified in jetty-8 to accommodate servlet spec3. This checkin moves jetty-7 closer to that final structure. Configuration now consists of 3 phases: preConfigure(), configure() and postConfigure(). All Configurations can now be chained together rather than having to override/replace existing Configurations.\n\ngit-svn-id: svn+ssh://dev.eclipse.org/svnroot/rt/org.eclipse.jetty/jetty/trunk@230 7e9141cc-0065-0410-87d8-b60c137991c4\n",
          "commitDate": "2009/5/19 下午3:40",
          "commitName": "688fbac7aa52a61bd864d6e5890507a95e71e287",
          "commitAuthor": "Jan Bartel",
          "commitDateOld": "2009/5/19 下午3:40",
          "commitNameOld": "c236945c538fb091d4a6e8f2b2d6995d0e4cca46",
          "commitAuthorOld": "Greg Wilkins",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public void process(XmlParser.Node root) throws Exception {\n    if (root \u003d\u003d null)\n        return;\n    Iterator iter \u003d root.iterator();\n    XmlParser.Node node \u003d null;\n    while (iter.hasNext()) {\n        try {\n            Object o \u003d iter.next();\n            if (!(o instanceof XmlParser.Node))\n                continue;\n            node \u003d (XmlParser.Node) o;\n            String name \u003d node.getTag();\n            initWebXmlElement(name, node);\n        } catch (ClassNotFoundException e) {\n            throw e;\n        } catch (Exception e) {\n            Log.warn(\"Configuration problem at \" + node, e);\n            throw new UnavailableException(\"Configuration problem\");\n        }\n    }\n}",
          "path": "jetty-plus/src/main/java/org/eclipse/jetty/plus/webapp/AbstractConfiguration.java",
          "functionStartLine": 77,
          "functionName": "process",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,21 @@\n-public void processEntry(URL jarUrl, JarEntry entry) {\n-    try {\n-        String name \u003d entry.getName();\n-        if (name.toLowerCase().equals(\"meta-inf/web.xml\")) {\n-            Resource webXmlFrag \u003d _context.newResource(\"jar:\" + jarUrl + \"!/\" + name);\n-            Log.debug(\"web.xml fragment found {}\", webXmlFrag);\n-            XmlParser.Node config \u003d null;\n-            config \u003d _xmlParser.parse(webXmlFrag.toString());\n-            initialize(config);\n+public void process(XmlParser.Node root) throws Exception {\n+    if (root \u003d\u003d null)\n+        return;\n+    Iterator iter \u003d root.iterator();\n+    XmlParser.Node node \u003d null;\n+    while (iter.hasNext()) {\n+        try {\n+            Object o \u003d iter.next();\n+            if (!(o instanceof XmlParser.Node))\n+                continue;\n+            node \u003d (XmlParser.Node) o;\n+            String name \u003d node.getTag();\n+            initWebXmlElement(name, node);\n+        } catch (ClassNotFoundException e) {\n+            throw e;\n+        } catch (Exception e) {\n+            Log.warn(\"Configuration problem at \" + node, e);\n+            throw new UnavailableException(\"Configuration problem\");\n         }\n-    } catch (Exception e) {\n-        Log.warn(\"Problem processing jar entry \" + entry, e);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[Exception]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "New Configuration structure. This structure will be modified in jetty-8 to accommodate servlet spec3. This checkin moves jetty-7 closer to that final structure. Configuration now consists of 3 phases: preConfigure(), configure() and postConfigure(). All Configurations can now be chained together rather than having to override/replace existing Configurations.\n\ngit-svn-id: svn+ssh://dev.eclipse.org/svnroot/rt/org.eclipse.jetty/jetty/trunk@230 7e9141cc-0065-0410-87d8-b60c137991c4\n",
          "commitDate": "2009/5/19 下午3:40",
          "commitName": "688fbac7aa52a61bd864d6e5890507a95e71e287",
          "commitAuthor": "Jan Bartel",
          "commitDateOld": "2009/5/19 下午3:40",
          "commitNameOld": "c236945c538fb091d4a6e8f2b2d6995d0e4cca46",
          "commitAuthorOld": "Greg Wilkins",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public void process(XmlParser.Node root) throws Exception {\n    if (root \u003d\u003d null)\n        return;\n    Iterator iter \u003d root.iterator();\n    XmlParser.Node node \u003d null;\n    while (iter.hasNext()) {\n        try {\n            Object o \u003d iter.next();\n            if (!(o instanceof XmlParser.Node))\n                continue;\n            node \u003d (XmlParser.Node) o;\n            String name \u003d node.getTag();\n            initWebXmlElement(name, node);\n        } catch (ClassNotFoundException e) {\n            throw e;\n        } catch (Exception e) {\n            Log.warn(\"Configuration problem at \" + node, e);\n            throw new UnavailableException(\"Configuration problem\");\n        }\n    }\n}",
          "path": "jetty-plus/src/main/java/org/eclipse/jetty/plus/webapp/AbstractConfiguration.java",
          "functionStartLine": 77,
          "functionName": "process",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,21 @@\n-public void processEntry(URL jarUrl, JarEntry entry) {\n-    try {\n-        String name \u003d entry.getName();\n-        if (name.toLowerCase().equals(\"meta-inf/web.xml\")) {\n-            Resource webXmlFrag \u003d _context.newResource(\"jar:\" + jarUrl + \"!/\" + name);\n-            Log.debug(\"web.xml fragment found {}\", webXmlFrag);\n-            XmlParser.Node config \u003d null;\n-            config \u003d _xmlParser.parse(webXmlFrag.toString());\n-            initialize(config);\n+public void process(XmlParser.Node root) throws Exception {\n+    if (root \u003d\u003d null)\n+        return;\n+    Iterator iter \u003d root.iterator();\n+    XmlParser.Node node \u003d null;\n+    while (iter.hasNext()) {\n+        try {\n+            Object o \u003d iter.next();\n+            if (!(o instanceof XmlParser.Node))\n+                continue;\n+            node \u003d (XmlParser.Node) o;\n+            String name \u003d node.getTag();\n+            initWebXmlElement(name, node);\n+        } catch (ClassNotFoundException e) {\n+            throw e;\n+        } catch (Exception e) {\n+            Log.warn(\"Configuration problem at \" + node, e);\n+            throw new UnavailableException(\"Configuration problem\");\n         }\n-    } catch (Exception e) {\n-        Log.warn(\"Problem processing jar entry \" + entry, e);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yrename",
          "commitMessage": "New Configuration structure. This structure will be modified in jetty-8 to accommodate servlet spec3. This checkin moves jetty-7 closer to that final structure. Configuration now consists of 3 phases: preConfigure(), configure() and postConfigure(). All Configurations can now be chained together rather than having to override/replace existing Configurations.\n\ngit-svn-id: svn+ssh://dev.eclipse.org/svnroot/rt/org.eclipse.jetty/jetty/trunk@230 7e9141cc-0065-0410-87d8-b60c137991c4\n",
          "commitDate": "2009/5/19 下午3:40",
          "commitName": "688fbac7aa52a61bd864d6e5890507a95e71e287",
          "commitAuthor": "Jan Bartel",
          "commitDateOld": "2009/5/19 下午3:40",
          "commitNameOld": "c236945c538fb091d4a6e8f2b2d6995d0e4cca46",
          "commitAuthorOld": "Greg Wilkins",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public void process(XmlParser.Node root) throws Exception {\n    if (root \u003d\u003d null)\n        return;\n    Iterator iter \u003d root.iterator();\n    XmlParser.Node node \u003d null;\n    while (iter.hasNext()) {\n        try {\n            Object o \u003d iter.next();\n            if (!(o instanceof XmlParser.Node))\n                continue;\n            node \u003d (XmlParser.Node) o;\n            String name \u003d node.getTag();\n            initWebXmlElement(name, node);\n        } catch (ClassNotFoundException e) {\n            throw e;\n        } catch (Exception e) {\n            Log.warn(\"Configuration problem at \" + node, e);\n            throw new UnavailableException(\"Configuration problem\");\n        }\n    }\n}",
          "path": "jetty-plus/src/main/java/org/eclipse/jetty/plus/webapp/AbstractConfiguration.java",
          "functionStartLine": 77,
          "functionName": "process",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,21 @@\n-public void processEntry(URL jarUrl, JarEntry entry) {\n-    try {\n-        String name \u003d entry.getName();\n-        if (name.toLowerCase().equals(\"meta-inf/web.xml\")) {\n-            Resource webXmlFrag \u003d _context.newResource(\"jar:\" + jarUrl + \"!/\" + name);\n-            Log.debug(\"web.xml fragment found {}\", webXmlFrag);\n-            XmlParser.Node config \u003d null;\n-            config \u003d _xmlParser.parse(webXmlFrag.toString());\n-            initialize(config);\n+public void process(XmlParser.Node root) throws Exception {\n+    if (root \u003d\u003d null)\n+        return;\n+    Iterator iter \u003d root.iterator();\n+    XmlParser.Node node \u003d null;\n+    while (iter.hasNext()) {\n+        try {\n+            Object o \u003d iter.next();\n+            if (!(o instanceof XmlParser.Node))\n+                continue;\n+            node \u003d (XmlParser.Node) o;\n+            String name \u003d node.getTag();\n+            initWebXmlElement(name, node);\n+        } catch (ClassNotFoundException e) {\n+            throw e;\n+        } catch (Exception e) {\n+            Log.warn(\"Configuration problem at \" + node, e);\n+            throw new UnavailableException(\"Configuration problem\");\n         }\n-    } catch (Exception e) {\n-        Log.warn(\"Problem processing jar entry \" + entry, e);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "processEntry",
            "newValue": "process"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "New Configuration structure. This structure will be modified in jetty-8 to accommodate servlet spec3. This checkin moves jetty-7 closer to that final structure. Configuration now consists of 3 phases: preConfigure(), configure() and postConfigure(). All Configurations can now be chained together rather than having to override/replace existing Configurations.\n\ngit-svn-id: svn+ssh://dev.eclipse.org/svnroot/rt/org.eclipse.jetty/jetty/trunk@230 7e9141cc-0065-0410-87d8-b60c137991c4\n",
          "commitDate": "2009/5/19 下午3:40",
          "commitName": "688fbac7aa52a61bd864d6e5890507a95e71e287",
          "commitAuthor": "Jan Bartel",
          "commitDateOld": "2009/5/19 下午3:40",
          "commitNameOld": "c236945c538fb091d4a6e8f2b2d6995d0e4cca46",
          "commitAuthorOld": "Greg Wilkins",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public void process(XmlParser.Node root) throws Exception {\n    if (root \u003d\u003d null)\n        return;\n    Iterator iter \u003d root.iterator();\n    XmlParser.Node node \u003d null;\n    while (iter.hasNext()) {\n        try {\n            Object o \u003d iter.next();\n            if (!(o instanceof XmlParser.Node))\n                continue;\n            node \u003d (XmlParser.Node) o;\n            String name \u003d node.getTag();\n            initWebXmlElement(name, node);\n        } catch (ClassNotFoundException e) {\n            throw e;\n        } catch (Exception e) {\n            Log.warn(\"Configuration problem at \" + node, e);\n            throw new UnavailableException(\"Configuration problem\");\n        }\n    }\n}",
          "path": "jetty-plus/src/main/java/org/eclipse/jetty/plus/webapp/AbstractConfiguration.java",
          "functionStartLine": 77,
          "functionName": "process",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,21 @@\n-public void processEntry(URL jarUrl, JarEntry entry) {\n-    try {\n-        String name \u003d entry.getName();\n-        if (name.toLowerCase().equals(\"meta-inf/web.xml\")) {\n-            Resource webXmlFrag \u003d _context.newResource(\"jar:\" + jarUrl + \"!/\" + name);\n-            Log.debug(\"web.xml fragment found {}\", webXmlFrag);\n-            XmlParser.Node config \u003d null;\n-            config \u003d _xmlParser.parse(webXmlFrag.toString());\n-            initialize(config);\n+public void process(XmlParser.Node root) throws Exception {\n+    if (root \u003d\u003d null)\n+        return;\n+    Iterator iter \u003d root.iterator();\n+    XmlParser.Node node \u003d null;\n+    while (iter.hasNext()) {\n+        try {\n+            Object o \u003d iter.next();\n+            if (!(o instanceof XmlParser.Node))\n+                continue;\n+            node \u003d (XmlParser.Node) o;\n+            String name \u003d node.getTag();\n+            initWebXmlElement(name, node);\n+        } catch (ClassNotFoundException e) {\n+            throw e;\n+        } catch (Exception e) {\n+            Log.warn(\"Configuration problem at \" + node, e);\n+            throw new UnavailableException(\"Configuration problem\");\n         }\n-    } catch (Exception e) {\n-        Log.warn(\"Problem processing jar entry \" + entry, e);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[jarUrl-URL, entry-JarEntry]",
            "newValue": "[root-XmlParser.Node]"
          }
        }
      ]
    },
    "da627b843fe81fa0fe52a046c1be8595630e9ae7": {
      "type": "Yintroduced",
      "commitMessage": "jetty @ eclipse initial commit\n\ngit-svn-id: svn+ssh://dev.eclipse.org/svnroot/rt/org.eclipse.jetty/jetty/trunk@8 7e9141cc-0065-0410-87d8-b60c137991c4\n",
      "commitDate": "2009/3/25 上午5:07",
      "commitName": "da627b843fe81fa0fe52a046c1be8595630e9ae7",
      "commitAuthor": "Greg Wilkins",
      "diff": "@@ -0,0 +1,14 @@\n+public void processEntry(URL jarUrl, JarEntry entry) {\n+    try {\n+        String name \u003d entry.getName();\n+        if (name.toLowerCase().equals(\"meta-inf/web.xml\")) {\n+            Resource webXmlFrag \u003d _context.newResource(\"jar:\" + jarUrl + \"!/\" + name);\n+            Log.debug(\"web.xml fragment found {}\", webXmlFrag);\n+            XmlParser.Node config \u003d null;\n+            config \u003d _xmlParser.parse(webXmlFrag.toString());\n+            initialize(config);\n+        }\n+    } catch (Exception e) {\n+        Log.warn(\"Problem processing jar entry \" + entry, e);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void processEntry(URL jarUrl, JarEntry entry) {\n    try {\n        String name \u003d entry.getName();\n        if (name.toLowerCase().equals(\"meta-inf/web.xml\")) {\n            Resource webXmlFrag \u003d _context.newResource(\"jar:\" + jarUrl + \"!/\" + name);\n            Log.debug(\"web.xml fragment found {}\", webXmlFrag);\n            XmlParser.Node config \u003d null;\n            config \u003d _xmlParser.parse(webXmlFrag.toString());\n            initialize(config);\n        }\n    } catch (Exception e) {\n        Log.warn(\"Problem processing jar entry \" + entry, e);\n    }\n}",
      "path": "jetty-webapp/src/main/java/org/eclipse/jetty/webapp/WebXmlConfiguration.java",
      "functionStartLine": 269,
      "functionName": "processEntry",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}