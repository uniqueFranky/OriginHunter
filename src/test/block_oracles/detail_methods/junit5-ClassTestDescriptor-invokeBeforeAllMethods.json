{
  "origin": "codeshovel",
  "repositoryName": "junit5",
  "repositoryPath": "/Users/franky/Documents/Homework/毕业设计/testcase/junit5/.git",
  "startCommitName": "77cfe71e7f787c59626198e25350545f41e968bd",
  "sourceFileName": "ClassTestDescriptor.java",
  "functionName": "invokeBeforeAllMethods",
  "functionId": "invokeBeforeAllMethods___context-JupiterEngineExecutionContext",
  "sourceFilePath": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 365,
  "functionEndLine": 378,
  "numCommitsSeen": 174,
  "timeTaken": 1434,
  "changeHistory": [
    "83b3eb665aa35a87cfd8484e0d06cc3b3d0478c7",
    "bf1e000a7f68076e2921ac4f020e5f8c24330e84",
    "7205f05c4a314a808b1a558d1e3044ec9bccc21a",
    "3e3b402131a99f01480c57dd82c2e81ad6d9a4ea",
    "62c433c14ce9d70fa5b82ef385a6e15c22cc0003",
    "4972eb58d680a30e8fbd1ffb6cdc6477bef83374",
    "507e50872c6df8a66c32f45cb2153555f510c4b1",
    "e0e131335d2117a2a1630db22260a258e47d8c4d",
    "9eacc9c2d51557bffa003ca24fa125b8cbe69bbb",
    "6b575f2ee5f02288a774ff0a85ce3a3e3cb6946f",
    "b691e6a02b9436939bf1867156aa8d8cea4e3fbf",
    "b2ba6b95138382f25ca757a5ca2a7295bee4c3b8"
  ],
  "changeHistoryShort": {
    "83b3eb665aa35a87cfd8484e0d06cc3b3d0478c7": "Ybodychange",
    "bf1e000a7f68076e2921ac4f020e5f8c24330e84": "Ybodychange",
    "7205f05c4a314a808b1a558d1e3044ec9bccc21a": "Ybodychange",
    "3e3b402131a99f01480c57dd82c2e81ad6d9a4ea": "Ymultichange(Yparameterchange,Ybodychange)",
    "62c433c14ce9d70fa5b82ef385a6e15c22cc0003": "Ymultichange(Yparameterchange,Ybodychange)",
    "4972eb58d680a30e8fbd1ffb6cdc6477bef83374": "Yfilerename",
    "507e50872c6df8a66c32f45cb2153555f510c4b1": "Yfilerename",
    "e0e131335d2117a2a1630db22260a258e47d8c4d": "Ybodychange",
    "9eacc9c2d51557bffa003ca24fa125b8cbe69bbb": "Ybodychange",
    "6b575f2ee5f02288a774ff0a85ce3a3e3cb6946f": "Ybodychange",
    "b691e6a02b9436939bf1867156aa8d8cea4e3fbf": "Ybodychange",
    "b2ba6b95138382f25ca757a5ca2a7295bee4c3b8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "83b3eb665aa35a87cfd8484e0d06cc3b3d0478c7": {
      "type": "Ybodychange",
      "commitMessage": "Remove TestExtensionContext and ContainerExtensionContext\n\nIssue: #901\n",
      "commitDate": "2017/7/1 下午7:45",
      "commitName": "83b3eb665aa35a87cfd8484e0d06cc3b3d0478c7",
      "commitAuthor": "Marc Philipp",
      "commitDateOld": "2017/7/1 上午12:16",
      "commitNameOld": "323dac88536a9768ea92183598e695b39da62a1a",
      "commitAuthorOld": "Sam Brannen",
      "daysBetweenCommits": 0.81,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "private void invokeBeforeAllMethods(JupiterEngineExecutionContext context) {\n    ExtensionRegistry registry \u003d context.getExtensionRegistry();\n    ExtensionContext extensionContext \u003d context.getExtensionContext();\n    ThrowableCollector throwableCollector \u003d context.getThrowableCollector();\n    Object testInstance \u003d extensionContext.getTestInstance().orElse(null);\n    for (Method method : this.beforeAllMethods) {\n        throwableCollector.execute(() -\u003e executableInvoker.invoke(method, testInstance, extensionContext, registry));\n        if (throwableCollector.isNotEmpty()) {\n            break;\n        }\n    }\n}",
      "path": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java",
      "functionStartLine": 231,
      "functionName": "invokeBeforeAllMethods",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,12 @@\n private void invokeBeforeAllMethods(JupiterEngineExecutionContext context) {\n     ExtensionRegistry registry \u003d context.getExtensionRegistry();\n-    ContainerExtensionContext extensionContext \u003d (ContainerExtensionContext) context.getExtensionContext();\n+    ExtensionContext extensionContext \u003d context.getExtensionContext();\n     ThrowableCollector throwableCollector \u003d context.getThrowableCollector();\n     Object testInstance \u003d extensionContext.getTestInstance().orElse(null);\n     for (Method method : this.beforeAllMethods) {\n         throwableCollector.execute(() -\u003e executableInvoker.invoke(method, testInstance, extensionContext, registry));\n         if (throwableCollector.isNotEmpty()) {\n             break;\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bf1e000a7f68076e2921ac4f020e5f8c24330e84": {
      "type": "Ybodychange",
      "commitMessage": "Provide test instance to container level extensions\n\nIssue: #419\n",
      "commitDate": "2017/7/1 上午12:16",
      "commitName": "bf1e000a7f68076e2921ac4f020e5f8c24330e84",
      "commitAuthor": "Sam Brannen",
      "commitDateOld": "2017/7/1 上午12:16",
      "commitNameOld": "fdadf905479b4cd63f1987d08940eddfbf89d088",
      "commitAuthorOld": "Sam Brannen",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void invokeBeforeAllMethods(JupiterEngineExecutionContext context) {\n    ExtensionRegistry registry \u003d context.getExtensionRegistry();\n    ContainerExtensionContext extensionContext \u003d (ContainerExtensionContext) context.getExtensionContext();\n    ThrowableCollector throwableCollector \u003d context.getThrowableCollector();\n    Object testInstance \u003d extensionContext.getTestInstance().orElse(null);\n    for (Method method : this.beforeAllMethods) {\n        throwableCollector.execute(() -\u003e executableInvoker.invoke(method, testInstance, extensionContext, registry));\n        if (throwableCollector.isNotEmpty()) {\n            break;\n        }\n    }\n}",
      "path": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java",
      "functionStartLine": 222,
      "functionName": "invokeBeforeAllMethods",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,12 @@\n private void invokeBeforeAllMethods(JupiterEngineExecutionContext context) {\n     ExtensionRegistry registry \u003d context.getExtensionRegistry();\n     ContainerExtensionContext extensionContext \u003d (ContainerExtensionContext) context.getExtensionContext();\n     ThrowableCollector throwableCollector \u003d context.getThrowableCollector();\n-    Object testInstance \u003d getTestInstanceForClassLevelCallbacks(context);\n+    Object testInstance \u003d extensionContext.getTestInstance().orElse(null);\n     for (Method method : this.beforeAllMethods) {\n         throwableCollector.execute(() -\u003e executableInvoker.invoke(method, testInstance, extensionContext, registry));\n         if (throwableCollector.isNotEmpty()) {\n             break;\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7205f05c4a314a808b1a558d1e3044ec9bccc21a": {
      "type": "Ybodychange",
      "commitMessage": "Allow @BeforeAll and @AfterAll methods to be non-static\n\nIssue: #419\n",
      "commitDate": "2017/7/1 上午12:16",
      "commitName": "7205f05c4a314a808b1a558d1e3044ec9bccc21a",
      "commitAuthor": "Sam Brannen",
      "commitDateOld": "2017/7/1 上午12:16",
      "commitNameOld": "551cf902507171237211431742bbb57f527565c5",
      "commitAuthorOld": "Sam Brannen",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void invokeBeforeAllMethods(JupiterEngineExecutionContext context) {\n    ExtensionRegistry registry \u003d context.getExtensionRegistry();\n    ContainerExtensionContext extensionContext \u003d (ContainerExtensionContext) context.getExtensionContext();\n    ThrowableCollector throwableCollector \u003d context.getThrowableCollector();\n    Object testInstance \u003d getTestInstanceForClassLevelCallbacks(context);\n    for (Method method : this.beforeAllMethods) {\n        throwableCollector.execute(() -\u003e executableInvoker.invoke(method, testInstance, extensionContext, registry));\n        if (throwableCollector.isNotEmpty()) {\n            break;\n        }\n    }\n}",
      "path": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java",
      "functionStartLine": 205,
      "functionName": "invokeBeforeAllMethods",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,11 +1,12 @@\n private void invokeBeforeAllMethods(JupiterEngineExecutionContext context) {\n     ExtensionRegistry registry \u003d context.getExtensionRegistry();\n     ContainerExtensionContext extensionContext \u003d (ContainerExtensionContext) context.getExtensionContext();\n     ThrowableCollector throwableCollector \u003d context.getThrowableCollector();\n+    Object testInstance \u003d getTestInstanceForClassLevelCallbacks(context);\n     for (Method method : this.beforeAllMethods) {\n-        throwableCollector.execute(() -\u003e executableInvoker.invoke(method, extensionContext, registry));\n+        throwableCollector.execute(() -\u003e executableInvoker.invoke(method, testInstance, extensionContext, registry));\n         if (throwableCollector.isNotEmpty()) {\n             break;\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "3e3b402131a99f01480c57dd82c2e81ad6d9a4ea": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Polish Jupiter TestDescriptor implementations\n",
      "commitDate": "2016/6/26 上午4:02",
      "commitName": "3e3b402131a99f01480c57dd82c2e81ad6d9a4ea",
      "commitAuthor": "Sam Brannen",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Polish Jupiter TestDescriptor implementations\n",
          "commitDate": "2016/6/26 上午4:02",
          "commitName": "3e3b402131a99f01480c57dd82c2e81ad6d9a4ea",
          "commitAuthor": "Sam Brannen",
          "commitDateOld": "2016/6/26 上午3:29",
          "commitNameOld": "62c433c14ce9d70fa5b82ef385a6e15c22cc0003",
          "commitAuthorOld": "Sam Brannen",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private void invokeBeforeAllMethods(JupiterEngineExecutionContext context) {\n    ExtensionRegistry registry \u003d context.getExtensionRegistry();\n    ContainerExtensionContext extensionContext \u003d (ContainerExtensionContext) context.getExtensionContext();\n    ThrowableCollector throwableCollector \u003d context.getThrowableCollector();\n    for (Method method : this.beforeAllMethods) {\n        throwableCollector.execute(() -\u003e executableInvoker.invoke(method, extensionContext, registry));\n        if (throwableCollector.isNotEmpty()) {\n            break;\n        }\n    }\n}",
          "path": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java",
          "functionStartLine": 210,
          "functionName": "invokeBeforeAllMethods",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,8 +1,11 @@\n-private void invokeBeforeAllMethods(ExtensionRegistry registry, ContainerExtensionContext context, ThrowableCollector throwableCollector) {\n+private void invokeBeforeAllMethods(JupiterEngineExecutionContext context) {\n+    ExtensionRegistry registry \u003d context.getExtensionRegistry();\n+    ContainerExtensionContext extensionContext \u003d (ContainerExtensionContext) context.getExtensionContext();\n+    ThrowableCollector throwableCollector \u003d context.getThrowableCollector();\n     for (Method method : this.beforeAllMethods) {\n-        throwableCollector.execute(() -\u003e executableInvoker.invoke(method, context, registry));\n+        throwableCollector.execute(() -\u003e executableInvoker.invoke(method, extensionContext, registry));\n         if (throwableCollector.isNotEmpty()) {\n             break;\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[registry-ExtensionRegistry, context-ContainerExtensionContext, throwableCollector-ThrowableCollector]",
            "newValue": "[context-JupiterEngineExecutionContext]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Polish Jupiter TestDescriptor implementations\n",
          "commitDate": "2016/6/26 上午4:02",
          "commitName": "3e3b402131a99f01480c57dd82c2e81ad6d9a4ea",
          "commitAuthor": "Sam Brannen",
          "commitDateOld": "2016/6/26 上午3:29",
          "commitNameOld": "62c433c14ce9d70fa5b82ef385a6e15c22cc0003",
          "commitAuthorOld": "Sam Brannen",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private void invokeBeforeAllMethods(JupiterEngineExecutionContext context) {\n    ExtensionRegistry registry \u003d context.getExtensionRegistry();\n    ContainerExtensionContext extensionContext \u003d (ContainerExtensionContext) context.getExtensionContext();\n    ThrowableCollector throwableCollector \u003d context.getThrowableCollector();\n    for (Method method : this.beforeAllMethods) {\n        throwableCollector.execute(() -\u003e executableInvoker.invoke(method, extensionContext, registry));\n        if (throwableCollector.isNotEmpty()) {\n            break;\n        }\n    }\n}",
          "path": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java",
          "functionStartLine": 210,
          "functionName": "invokeBeforeAllMethods",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,8 +1,11 @@\n-private void invokeBeforeAllMethods(ExtensionRegistry registry, ContainerExtensionContext context, ThrowableCollector throwableCollector) {\n+private void invokeBeforeAllMethods(JupiterEngineExecutionContext context) {\n+    ExtensionRegistry registry \u003d context.getExtensionRegistry();\n+    ContainerExtensionContext extensionContext \u003d (ContainerExtensionContext) context.getExtensionContext();\n+    ThrowableCollector throwableCollector \u003d context.getThrowableCollector();\n     for (Method method : this.beforeAllMethods) {\n-        throwableCollector.execute(() -\u003e executableInvoker.invoke(method, context, registry));\n+        throwableCollector.execute(() -\u003e executableInvoker.invoke(method, extensionContext, registry));\n         if (throwableCollector.isNotEmpty()) {\n             break;\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "62c433c14ce9d70fa5b82ef385a6e15c22cc0003": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Ensure AfterAlls are invoked if exception is thrown by a BeforeAll\n\n- BeforeAll: @BeforeAll method or BeforeAllCallback\n- AfterAll:  @AfterAll method or AfterAllCallback\n\nPrior to this commit, if an exception was thrown by a BeforeAll, then\nAfterAlls were never invoked, which is in strict contrast to the\nsemantics of JUnit 4 and other frameworks.\n\nThis commit fixes this problem by ensuring that AfterAlls (for the\nappropriate nesting level) are invoked even if a BeforeAll throws an\nexception.\n\nFixes: #359\n",
      "commitDate": "2016/6/26 上午3:29",
      "commitName": "62c433c14ce9d70fa5b82ef385a6e15c22cc0003",
      "commitAuthor": "Sam Brannen",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Ensure AfterAlls are invoked if exception is thrown by a BeforeAll\n\n- BeforeAll: @BeforeAll method or BeforeAllCallback\n- AfterAll:  @AfterAll method or AfterAllCallback\n\nPrior to this commit, if an exception was thrown by a BeforeAll, then\nAfterAlls were never invoked, which is in strict contrast to the\nsemantics of JUnit 4 and other frameworks.\n\nThis commit fixes this problem by ensuring that AfterAlls (for the\nappropriate nesting level) are invoked even if a BeforeAll throws an\nexception.\n\nFixes: #359\n",
          "commitDate": "2016/6/26 上午3:29",
          "commitName": "62c433c14ce9d70fa5b82ef385a6e15c22cc0003",
          "commitAuthor": "Sam Brannen",
          "commitDateOld": "2016/6/20 下午9:08",
          "commitNameOld": "babcc661bd906b38a272f287ac8779669268fc58",
          "commitAuthorOld": "JUnit Team",
          "daysBetweenCommits": 5.26,
          "commitsBetweenForRepo": 45,
          "commitsBetweenForFile": 1,
          "actualSource": "private void invokeBeforeAllMethods(ExtensionRegistry registry, ContainerExtensionContext context, ThrowableCollector throwableCollector) {\n    for (Method method : this.beforeAllMethods) {\n        throwableCollector.execute(() -\u003e executableInvoker.invoke(method, context, registry));\n        if (throwableCollector.isNotEmpty()) {\n            break;\n        }\n    }\n}",
          "path": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java",
          "functionStartLine": 214,
          "functionName": "invokeBeforeAllMethods",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,3 +1,8 @@\n-private void invokeBeforeAllMethods(ExtensionRegistry registry, ContainerExtensionContext context) {\n-    this.beforeAllMethods.forEach(method -\u003e executeAndMaskThrowable(() -\u003e executableInvoker.invoke(method, context, registry)));\n+private void invokeBeforeAllMethods(ExtensionRegistry registry, ContainerExtensionContext context, ThrowableCollector throwableCollector) {\n+    for (Method method : this.beforeAllMethods) {\n+        throwableCollector.execute(() -\u003e executableInvoker.invoke(method, context, registry));\n+        if (throwableCollector.isNotEmpty()) {\n+            break;\n+        }\n+    }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[registry-ExtensionRegistry, context-ContainerExtensionContext]",
            "newValue": "[registry-ExtensionRegistry, context-ContainerExtensionContext, throwableCollector-ThrowableCollector]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Ensure AfterAlls are invoked if exception is thrown by a BeforeAll\n\n- BeforeAll: @BeforeAll method or BeforeAllCallback\n- AfterAll:  @AfterAll method or AfterAllCallback\n\nPrior to this commit, if an exception was thrown by a BeforeAll, then\nAfterAlls were never invoked, which is in strict contrast to the\nsemantics of JUnit 4 and other frameworks.\n\nThis commit fixes this problem by ensuring that AfterAlls (for the\nappropriate nesting level) are invoked even if a BeforeAll throws an\nexception.\n\nFixes: #359\n",
          "commitDate": "2016/6/26 上午3:29",
          "commitName": "62c433c14ce9d70fa5b82ef385a6e15c22cc0003",
          "commitAuthor": "Sam Brannen",
          "commitDateOld": "2016/6/20 下午9:08",
          "commitNameOld": "babcc661bd906b38a272f287ac8779669268fc58",
          "commitAuthorOld": "JUnit Team",
          "daysBetweenCommits": 5.26,
          "commitsBetweenForRepo": 45,
          "commitsBetweenForFile": 1,
          "actualSource": "private void invokeBeforeAllMethods(ExtensionRegistry registry, ContainerExtensionContext context, ThrowableCollector throwableCollector) {\n    for (Method method : this.beforeAllMethods) {\n        throwableCollector.execute(() -\u003e executableInvoker.invoke(method, context, registry));\n        if (throwableCollector.isNotEmpty()) {\n            break;\n        }\n    }\n}",
          "path": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java",
          "functionStartLine": 214,
          "functionName": "invokeBeforeAllMethods",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,3 +1,8 @@\n-private void invokeBeforeAllMethods(ExtensionRegistry registry, ContainerExtensionContext context) {\n-    this.beforeAllMethods.forEach(method -\u003e executeAndMaskThrowable(() -\u003e executableInvoker.invoke(method, context, registry)));\n+private void invokeBeforeAllMethods(ExtensionRegistry registry, ContainerExtensionContext context, ThrowableCollector throwableCollector) {\n+    for (Method method : this.beforeAllMethods) {\n+        throwableCollector.execute(() -\u003e executableInvoker.invoke(method, context, registry));\n+        if (throwableCollector.isNotEmpty()) {\n+            break;\n+        }\n+    }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "4972eb58d680a30e8fbd1ffb6cdc6477bef83374": {
      "type": "Yfilerename",
      "commitMessage": "Rename all JUnit 5 artifacts to platform, jupiter, \u0026 vintage\n\nIssue: #286\n",
      "commitDate": "2016/6/20 下午4:59",
      "commitName": "4972eb58d680a30e8fbd1ffb6cdc6477bef83374",
      "commitAuthor": "JUnit Team",
      "commitDateOld": "2016/6/20 上午2:04",
      "commitNameOld": "e5b7300ba40a0420e310d463a63ea4c10cc8d9b9",
      "commitAuthorOld": "Sam Brannen",
      "daysBetweenCommits": 0.62,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void invokeBeforeAllMethods(ExtensionRegistry registry, ContainerExtensionContext context) {\n    this.beforeAllMethods.forEach(method -\u003e executeAndMaskThrowable(() -\u003e executableInvoker.invoke(method, context, registry)));\n}",
      "path": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java",
      "functionStartLine": 201,
      "functionName": "invokeBeforeAllMethods",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "junit5-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java",
        "newPath": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java"
      }
    },
    "507e50872c6df8a66c32f45cb2153555f510c4b1": {
      "type": "Yfilerename",
      "commitMessage": "Rename base package of junit5-api and junit5-engine to org.junit.jupiter\n",
      "commitDate": "2016/6/19 上午4:50",
      "commitName": "507e50872c6df8a66c32f45cb2153555f510c4b1",
      "commitAuthor": "JUnit Team",
      "commitDateOld": "2016/6/19 上午3:31",
      "commitNameOld": "f7741ec30a0578d2ffaf76bca83d4fa31eb666a5",
      "commitAuthorOld": "JUnit Team",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void invokeBeforeAllMethods(ExtensionRegistry registry, ContainerExtensionContext context) {\n    this.beforeAllMethods.forEach(method -\u003e executeAndMaskThrowable(() -\u003e executableInvoker.invoke(method, context, registry)));\n}",
      "path": "junit5-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java",
      "functionStartLine": 201,
      "functionName": "invokeBeforeAllMethods",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/ClassTestDescriptor.java",
        "newPath": "junit5-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java"
      }
    },
    "e0e131335d2117a2a1630db22260a258e47d8c4d": {
      "type": "Ybodychange",
      "commitMessage": "Make ExecutableInvoker stateless\n",
      "commitDate": "2016/5/29 上午1:02",
      "commitName": "e0e131335d2117a2a1630db22260a258e47d8c4d",
      "commitAuthor": "Sam Brannen",
      "commitDateOld": "2016/5/27 上午4:23",
      "commitNameOld": "d8731f3e07cf4a6eaf6717c7cfe3f5dd05d792e8",
      "commitAuthorOld": "Sam Brannen",
      "daysBetweenCommits": 1.86,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "actualSource": "private void invokeBeforeAllMethods(ExtensionRegistry registry, ContainerExtensionContext context) {\n    this.beforeAllMethods.forEach(method -\u003e executeAndMaskThrowable(() -\u003e executableInvoker.invoke(method, context, registry)));\n}",
      "path": "junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/ClassTestDescriptor.java",
      "functionStartLine": 197,
      "functionName": "invokeBeforeAllMethods",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,3 +1,3 @@\n private void invokeBeforeAllMethods(ExtensionRegistry registry, ContainerExtensionContext context) {\n-    this.beforeAllMethods.forEach(method -\u003e executeAndMaskThrowable(() -\u003e new ExecutableInvoker(context, registry).invoke(method)));\n+    this.beforeAllMethods.forEach(method -\u003e executeAndMaskThrowable(() -\u003e executableInvoker.invoke(method, context, registry)));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9eacc9c2d51557bffa003ca24fa125b8cbe69bbb": {
      "type": "Ybodychange",
      "commitMessage": "Convert MethodInvoker to generic ExecutableInvoker\n\nPrior to this commit, MethodInvoker was limited to method invocations.\nWith the recent generalization of the ParameterResolver API, it is now\npossible to convert MethodInvoker to a generic ExecutableInvoker that\ncan be applied to constructors or methods, serving as a building block\nfor possible constructor injection support.\n\nThis commit converts MethodInvoker to a generic ExecutableInvoker that\ncan be used to invoke both methods and constructors with dynamic\nparameter resolution via registered ParameterResolvers.\n\nSpecifically, this commit includes the following changes.\n\n - Renamed MethodInvoker to ExecutableInvoker\n - Refactored ExecutableInvoker to support parameter resolution for any\n   java.lang.reflect.Executable\n - Introduced newInstance(Constructor\u003cT\u003e, Object...) in ReflectionUtils\n - Introduced invoke(Constructor), invoke(Method), and\n   invoke(Method, Object) in ExecutableInvoker\n - Removed MethodInvocationContext and MethodInvocationContextFactory\n - Removed ConstructorInvoker proof of concept\n\nIssue: #267\n",
      "commitDate": "2016/5/26 下午8:42",
      "commitName": "9eacc9c2d51557bffa003ca24fa125b8cbe69bbb",
      "commitAuthor": "Sam Brannen",
      "commitDateOld": "2016/5/25 下午8:18",
      "commitNameOld": "078b5a202cbf0f3925174b8598af1c55e2de4cf4",
      "commitAuthorOld": "Sam Brannen",
      "daysBetweenCommits": 1.02,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "actualSource": "private void invokeBeforeAllMethods(ExtensionRegistry registry, ContainerExtensionContext context) {\n    this.beforeAllMethods.forEach(method -\u003e executeAndMaskThrowable(() -\u003e new ExecutableInvoker(context, registry).invoke(method)));\n}",
      "path": "junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/ClassTestDescriptor.java",
      "functionStartLine": 194,
      "functionName": "invokeBeforeAllMethods",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,3 +1,3 @@\n private void invokeBeforeAllMethods(ExtensionRegistry registry, ContainerExtensionContext context) {\n-    this.beforeAllMethods.forEach(method -\u003e executeAndMaskThrowable(() -\u003e new MethodInvoker(context, registry).invoke(methodInvocationContext(null, method))));\n+    this.beforeAllMethods.forEach(method -\u003e executeAndMaskThrowable(() -\u003e new ExecutableInvoker(context, registry).invoke(method)));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b575f2ee5f02288a774ff0a85ce3a3e3cb6946f": {
      "type": "Ybodychange",
      "commitMessage": "Eagerly load and validate @BeforeEach \u0026 @AfterEach methods\n\nWith this commit @BeforeEach and @AfterEach methods are looked up and\nvalidated eagerly during the discovery phase instead of late in the game\nduring the execution phase.\n\nThis commit also extracts a new LifecycleMethodUtils class from the\nClassTestDescriptor.\n\nIssue: #232\n",
      "commitDate": "2016/5/3 上午6:18",
      "commitName": "6b575f2ee5f02288a774ff0a85ce3a3e3cb6946f",
      "commitAuthor": "Sam Brannen",
      "commitDateOld": "2016/5/3 上午12:58",
      "commitNameOld": "b691e6a02b9436939bf1867156aa8d8cea4e3fbf",
      "commitAuthorOld": "Sam Brannen",
      "daysBetweenCommits": 0.22,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void invokeBeforeAllMethods(ExtensionRegistry registry, ContainerExtensionContext context) {\n    this.beforeAllMethods.forEach(method -\u003e executeAndMaskThrowable(() -\u003e new MethodInvoker(context, registry).invoke(methodInvocationContext(null, method))));\n}",
      "path": "junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/ClassTestDescriptor.java",
      "functionStartLine": 178,
      "functionName": "invokeBeforeAllMethods",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,3 @@\n private void invokeBeforeAllMethods(ExtensionRegistry registry, ContainerExtensionContext context) {\n-    for (Method method : this.beforeAllMethods) {\n-        try {\n-            new MethodInvoker(context, registry).invoke(methodInvocationContext(null, method));\n-        } catch (Throwable throwable) {\n-            ExceptionUtils.throwAsUncheckedException(throwable);\n-        }\n-    }\n+    this.beforeAllMethods.forEach(method -\u003e executeAndMaskThrowable(() -\u003e new MethodInvoker(context, registry).invoke(methodInvocationContext(null, method))));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b691e6a02b9436939bf1867156aa8d8cea4e3fbf": {
      "type": "Ybodychange",
      "commitMessage": "Do not synthesize @BeforeAll \u0026 @AfterAll methods as extensions\n\nThis commit avoids unnecessary streaming and synthesizing of extensions\nas lambda expressions for @BeforeAll and @AfterAll methods. Instead,\n@BeforeAll and @AfterAll methods are now invoked directly using\nstandard for-loops.\n\nIssue: #232\n",
      "commitDate": "2016/5/3 上午12:58",
      "commitName": "b691e6a02b9436939bf1867156aa8d8cea4e3fbf",
      "commitAuthor": "Sam Brannen",
      "commitDateOld": "2016/5/2 下午11:30",
      "commitNameOld": "b2ba6b95138382f25ca757a5ca2a7295bee4c3b8",
      "commitAuthorOld": "Sam Brannen",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void invokeBeforeAllMethods(ExtensionRegistry registry, ContainerExtensionContext context) {\n    for (Method method : this.beforeAllMethods) {\n        try {\n            new MethodInvoker(context, registry).invoke(methodInvocationContext(null, method));\n        } catch (Throwable throwable) {\n            ExceptionUtils.throwAsUncheckedException(throwable);\n        }\n    }\n}",
      "path": "junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/ClassTestDescriptor.java",
      "functionStartLine": 178,
      "functionName": "invokeBeforeAllMethods",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,3 +1,9 @@\n private void invokeBeforeAllMethods(ExtensionRegistry registry, ContainerExtensionContext context) {\n-    registry.stream(BeforeAllMethodAdapter.class).forEach(adapter -\u003e executeAndMaskThrowable(() -\u003e adapter.invoke(context)));\n+    for (Method method : this.beforeAllMethods) {\n+        try {\n+            new MethodInvoker(context, registry).invoke(methodInvocationContext(null, method));\n+        } catch (Throwable throwable) {\n+            ExceptionUtils.throwAsUncheckedException(throwable);\n+        }\n+    }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b2ba6b95138382f25ca757a5ca2a7295bee4c3b8": {
      "type": "Yintroduced",
      "commitMessage": "Do not mix execution of extensions and user code\n\nThis commit separates the execution of extensions and user code with\nregard to test lifecycle callbacks.\n\nIssue: #232\n",
      "commitDate": "2016/5/2 下午11:30",
      "commitName": "b2ba6b95138382f25ca757a5ca2a7295bee4c3b8",
      "commitAuthor": "Sam Brannen",
      "diff": "@@ -0,0 +1,3 @@\n+private void invokeBeforeAllMethods(ExtensionRegistry registry, ContainerExtensionContext context) {\n+    registry.stream(BeforeAllMethodAdapter.class).forEach(adapter -\u003e executeAndMaskThrowable(() -\u003e adapter.invoke(context)));\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void invokeBeforeAllMethods(ExtensionRegistry registry, ContainerExtensionContext context) {\n    registry.stream(BeforeAllMethodAdapter.class).forEach(adapter -\u003e executeAndMaskThrowable(() -\u003e adapter.invoke(context)));\n}",
      "path": "junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/ClassTestDescriptor.java",
      "functionStartLine": 173,
      "functionName": "invokeBeforeAllMethods",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}