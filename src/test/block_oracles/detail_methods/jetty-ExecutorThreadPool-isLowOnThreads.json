{
  "origin": "codeshovel",
  "repositoryName": "jetty.project",
  "repositoryPath": "/Users/franky/Documents/Homework/毕业设计/testcase/jetty.project/.git",
  "startCommitName": "fc5dd874f3deda71e6cd42af994a5af5cb6be4af",
  "sourceFileName": "ExecutorThreadPool.java",
  "functionName": "isLowOnThreads",
  "functionId": "isLowOnThreads",
  "sourceFilePath": "jetty-util/src/main/java/org/eclipse/jetty/util/thread/ExecutorThreadPool.java",
  "functionAnnotation": "@Override,@ManagedAttribute(value \u003d \"thread pool is low on threads\", readonly \u003d true)",
  "functionDoc": "",
  "functionStartLine": 264,
  "functionEndLine": 267,
  "numCommitsSeen": 28,
  "timeTaken": 1758,
  "changeHistory": [
    "a272fb6e391e126bbdd851bccfc6bde25870570e",
    "a639ee9275e672ca21320f56f62f1648d24aa140",
    "810223e2591471d4cba024e30349fe9c9db961e2",
    "309e347d18f1fc2eaee10e83e996c947b3a66ff7",
    "748eadeda349ab2fb1b2f45950c061425b126983",
    "da627b843fe81fa0fe52a046c1be8595630e9ae7"
  ],
  "changeHistoryShort": {
    "a272fb6e391e126bbdd851bccfc6bde25870570e": "Ymultichange(Ybodychange,Yannotationchange)",
    "a639ee9275e672ca21320f56f62f1648d24aa140": "Yannotationchange",
    "810223e2591471d4cba024e30349fe9c9db961e2": "Ybodychange",
    "309e347d18f1fc2eaee10e83e996c947b3a66ff7": "Ybodychange",
    "748eadeda349ab2fb1b2f45950c061425b126983": "Ybodychange",
    "da627b843fe81fa0fe52a046c1be8595630e9ae7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a272fb6e391e126bbdd851bccfc6bde25870570e": {
      "type": "Ymultichange(Ybodychange,Yannotationchange)",
      "commitMessage": "Improve executorSizedThreadPool (#2253)\n\nImprove executorSizedThreadPool (#2253)\r\n\r\n* Improve executorSizedThreadPool\r\n\r\nSigned-off-by: Greg Wilkins \u003cgregw@webtide.com\u003e\r\n\r\n* Improved implementation.\r\n\r\nImplemented name, thread priorities, thread group and daemon properties.\r\nImplemented toString(), dump() and using a thread factory.\r\n\r\nSigned-off-by: Simone Bordet \u003csimone.bordet@gmail.com\u003e\r\n\r\n* added threadpool benchmark;\r\n\r\nSigned-off-by: Greg Wilkins \u003cgregw@webtide.com\u003e\r\n\r\n* Renamed ExecutorSizedThreadPool to ExecutorThreadPool\r\n\r\nSigned-off-by: Greg Wilkins \u003cgregw@webtide.com\u003e\r\n",
      "commitDate": "2018/3/6 下午4:07",
      "commitName": "a272fb6e391e126bbdd851bccfc6bde25870570e",
      "commitAuthor": "Greg Wilkins",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Improve executorSizedThreadPool (#2253)\n\nImprove executorSizedThreadPool (#2253)\r\n\r\n* Improve executorSizedThreadPool\r\n\r\nSigned-off-by: Greg Wilkins \u003cgregw@webtide.com\u003e\r\n\r\n* Improved implementation.\r\n\r\nImplemented name, thread priorities, thread group and daemon properties.\r\nImplemented toString(), dump() and using a thread factory.\r\n\r\nSigned-off-by: Simone Bordet \u003csimone.bordet@gmail.com\u003e\r\n\r\n* added threadpool benchmark;\r\n\r\nSigned-off-by: Greg Wilkins \u003cgregw@webtide.com\u003e\r\n\r\n* Renamed ExecutorSizedThreadPool to ExecutorThreadPool\r\n\r\nSigned-off-by: Greg Wilkins \u003cgregw@webtide.com\u003e\r\n",
          "commitDate": "2018/3/6 下午4:07",
          "commitName": "a272fb6e391e126bbdd851bccfc6bde25870570e",
          "commitAuthor": "Greg Wilkins",
          "commitDateOld": "2018/3/1 上午10:59",
          "commitNameOld": "a639ee9275e672ca21320f56f62f1648d24aa140",
          "commitAuthorOld": "Lachlan Roberts",
          "daysBetweenCommits": 5.21,
          "commitsBetweenForRepo": 18,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\n@ManagedAttribute(value \u003d \"thread pool is low on threads\", readonly \u003d true)\npublic boolean isLowOnThreads() {\n    return getThreads() \u003d\u003d getMaxThreads() \u0026\u0026 _executor.getQueue().size() \u003e\u003d getIdleThreads();\n}",
          "path": "jetty-util/src/main/java/org/eclipse/jetty/util/thread/ExecutorThreadPool.java",
          "functionStartLine": 263,
          "functionName": "isLowOnThreads",
          "functionAnnotation": "@Override,@ManagedAttribute(value \u003d \"thread pool is low on threads\", readonly \u003d true)",
          "functionDoc": "",
          "diff": "@@ -1,8 +1,5 @@\n @Override\n+@ManagedAttribute(value \u003d \"thread pool is low on threads\", readonly \u003d true)\n public boolean isLowOnThreads() {\n-    if (_executor instanceof ThreadPoolExecutor) {\n-        final ThreadPoolExecutor tpe \u003d (ThreadPoolExecutor) _executor;\n-        return tpe.getPoolSize() \u003d\u003d tpe.getMaximumPoolSize() \u0026\u0026 tpe.getQueue().size() \u003e\u003d tpe.getPoolSize() - tpe.getActiveCount();\n-    }\n-    return false;\n+    return getThreads() \u003d\u003d getMaxThreads() \u0026\u0026 _executor.getQueue().size() \u003e\u003d getIdleThreads();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yannotationchange",
          "commitMessage": "Improve executorSizedThreadPool (#2253)\n\nImprove executorSizedThreadPool (#2253)\r\n\r\n* Improve executorSizedThreadPool\r\n\r\nSigned-off-by: Greg Wilkins \u003cgregw@webtide.com\u003e\r\n\r\n* Improved implementation.\r\n\r\nImplemented name, thread priorities, thread group and daemon properties.\r\nImplemented toString(), dump() and using a thread factory.\r\n\r\nSigned-off-by: Simone Bordet \u003csimone.bordet@gmail.com\u003e\r\n\r\n* added threadpool benchmark;\r\n\r\nSigned-off-by: Greg Wilkins \u003cgregw@webtide.com\u003e\r\n\r\n* Renamed ExecutorSizedThreadPool to ExecutorThreadPool\r\n\r\nSigned-off-by: Greg Wilkins \u003cgregw@webtide.com\u003e\r\n",
          "commitDate": "2018/3/6 下午4:07",
          "commitName": "a272fb6e391e126bbdd851bccfc6bde25870570e",
          "commitAuthor": "Greg Wilkins",
          "commitDateOld": "2018/3/1 上午10:59",
          "commitNameOld": "a639ee9275e672ca21320f56f62f1648d24aa140",
          "commitAuthorOld": "Lachlan Roberts",
          "daysBetweenCommits": 5.21,
          "commitsBetweenForRepo": 18,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\n@ManagedAttribute(value \u003d \"thread pool is low on threads\", readonly \u003d true)\npublic boolean isLowOnThreads() {\n    return getThreads() \u003d\u003d getMaxThreads() \u0026\u0026 _executor.getQueue().size() \u003e\u003d getIdleThreads();\n}",
          "path": "jetty-util/src/main/java/org/eclipse/jetty/util/thread/ExecutorThreadPool.java",
          "functionStartLine": 263,
          "functionName": "isLowOnThreads",
          "functionAnnotation": "@Override,@ManagedAttribute(value \u003d \"thread pool is low on threads\", readonly \u003d true)",
          "functionDoc": "",
          "diff": "@@ -1,8 +1,5 @@\n @Override\n+@ManagedAttribute(value \u003d \"thread pool is low on threads\", readonly \u003d true)\n public boolean isLowOnThreads() {\n-    if (_executor instanceof ThreadPoolExecutor) {\n-        final ThreadPoolExecutor tpe \u003d (ThreadPoolExecutor) _executor;\n-        return tpe.getPoolSize() \u003d\u003d tpe.getMaximumPoolSize() \u0026\u0026 tpe.getQueue().size() \u003e\u003d tpe.getPoolSize() - tpe.getActiveCount();\n-    }\n-    return false;\n+    return getThreads() \u003d\u003d getMaxThreads() \u0026\u0026 _executor.getQueue().size() \u003e\u003d getIdleThreads();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "@Override",
            "newValue": "@Override,@ManagedAttribute(value \u003d \"thread pool is low on threads\", readonly \u003d true)"
          }
        }
      ]
    },
    "a639ee9275e672ca21320f56f62f1648d24aa140": {
      "type": "Yannotationchange",
      "commitMessage": "Resolved errorprone MissingOverride warnings #2206\n\n`@Override` was added to methods which were missing the annotation #2206\n\nSigned-off-by: Lachlan Roberts \u003clachlan@webtide.com\u003e\n",
      "commitDate": "2018/3/1 上午10:59",
      "commitName": "a639ee9275e672ca21320f56f62f1648d24aa140",
      "commitAuthor": "Lachlan Roberts",
      "commitDateOld": "2018/1/9 下午11:37",
      "commitNameOld": "41ed9f29f41263c9facede20bddfaafa669b43c5",
      "commitAuthorOld": "",
      "daysBetweenCommits": 50.47,
      "commitsBetweenForRepo": 148,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic boolean isLowOnThreads() {\n    if (_executor instanceof ThreadPoolExecutor) {\n        final ThreadPoolExecutor tpe \u003d (ThreadPoolExecutor) _executor;\n        return tpe.getPoolSize() \u003d\u003d tpe.getMaximumPoolSize() \u0026\u0026 tpe.getQueue().size() \u003e\u003d tpe.getPoolSize() - tpe.getActiveCount();\n    }\n    return false;\n}",
      "path": "jetty-util/src/main/java/org/eclipse/jetty/util/thread/ExecutorThreadPool.java",
      "functionStartLine": 163,
      "functionName": "isLowOnThreads",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,7 +1,8 @@\n+@Override\n public boolean isLowOnThreads() {\n     if (_executor instanceof ThreadPoolExecutor) {\n         final ThreadPoolExecutor tpe \u003d (ThreadPoolExecutor) _executor;\n         return tpe.getPoolSize() \u003d\u003d tpe.getMaximumPoolSize() \u0026\u0026 tpe.getQueue().size() \u003e\u003d tpe.getPoolSize() - tpe.getActiveCount();\n     }\n     return false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "@Override"
      }
    },
    "810223e2591471d4cba024e30349fe9c9db961e2": {
      "type": "Ybodychange",
      "commitMessage": "361655 ExecutorThreadPool.isLowOnThreads() returns wrong value.\n\nOptimized by calling getActiveCount() last, since it locks the thread pool.\n",
      "commitDate": "2011/10/22 上午4:53",
      "commitName": "810223e2591471d4cba024e30349fe9c9db961e2",
      "commitAuthor": "Simone Bordet",
      "commitDateOld": "2011/10/21 下午10:25",
      "commitNameOld": "309e347d18f1fc2eaee10e83e996c947b3a66ff7",
      "commitAuthorOld": "Simone Bordet",
      "daysBetweenCommits": 0.27,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public boolean isLowOnThreads() {\n    if (_executor instanceof ThreadPoolExecutor) {\n        final ThreadPoolExecutor tpe \u003d (ThreadPoolExecutor) _executor;\n        return tpe.getPoolSize() \u003d\u003d tpe.getMaximumPoolSize() \u0026\u0026 tpe.getQueue().size() \u003e\u003d tpe.getPoolSize() - tpe.getActiveCount();\n    }\n    return false;\n}",
      "path": "jetty-util/src/main/java/org/eclipse/jetty/util/thread/ExecutorThreadPool.java",
      "functionStartLine": 154,
      "functionName": "isLowOnThreads",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,8 +1,7 @@\n public boolean isLowOnThreads() {\n     if (_executor instanceof ThreadPoolExecutor) {\n         final ThreadPoolExecutor tpe \u003d (ThreadPoolExecutor) _executor;\n-        int idleThreads \u003d tpe.getPoolSize() - tpe.getActiveCount();\n-        return tpe.getPoolSize() \u003d\u003d tpe.getMaximumPoolSize() \u0026\u0026 tpe.getQueue().size() \u003e\u003d idleThreads;\n+        return tpe.getPoolSize() \u003d\u003d tpe.getMaximumPoolSize() \u0026\u0026 tpe.getQueue().size() \u003e\u003d tpe.getPoolSize() - tpe.getActiveCount();\n     }\n     return false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "309e347d18f1fc2eaee10e83e996c947b3a66ff7": {
      "type": "Ybodychange",
      "commitMessage": "361655 ExecutorThreadPool.isLowOnThreads() returns wrong value.\n\nMethod isLowOnThreads() now return a value similar to what QueuedThreadPool does.\nAlso taken the chance to refactor constructors, and clarify that if an unbounded queue\nlike LinkedBlockingQueue is used, then the corePoolSize must be equal to the maxPoolSize.\n",
      "commitDate": "2011/10/21 下午10:25",
      "commitName": "309e347d18f1fc2eaee10e83e996c947b3a66ff7",
      "commitAuthor": "Simone Bordet",
      "commitDateOld": "2011/8/25 上午1:22",
      "commitNameOld": "396bb04b863b9cd74ef3fc13cfa8128f5cfd6690",
      "commitAuthorOld": "Joakim Erdfelt",
      "daysBetweenCommits": 57.88,
      "commitsBetweenForRepo": 284,
      "commitsBetweenForFile": 1,
      "actualSource": "public boolean isLowOnThreads() {\n    if (_executor instanceof ThreadPoolExecutor) {\n        final ThreadPoolExecutor tpe \u003d (ThreadPoolExecutor) _executor;\n        int idleThreads \u003d tpe.getPoolSize() - tpe.getActiveCount();\n        return tpe.getPoolSize() \u003d\u003d tpe.getMaximumPoolSize() \u0026\u0026 tpe.getQueue().size() \u003e\u003d idleThreads;\n    }\n    return false;\n}",
      "path": "jetty-util/src/main/java/org/eclipse/jetty/util/thread/ExecutorThreadPool.java",
      "functionStartLine": 154,
      "functionName": "isLowOnThreads",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,7 +1,8 @@\n public boolean isLowOnThreads() {\n     if (_executor instanceof ThreadPoolExecutor) {\n         final ThreadPoolExecutor tpe \u003d (ThreadPoolExecutor) _executor;\n-        return tpe.getTaskCount() \u003e\u003d (tpe.getMaximumPoolSize());\n+        int idleThreads \u003d tpe.getPoolSize() - tpe.getActiveCount();\n+        return tpe.getPoolSize() \u003d\u003d tpe.getMaximumPoolSize() \u0026\u0026 tpe.getQueue().size() \u003e\u003d idleThreads;\n     }\n     return false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "748eadeda349ab2fb1b2f45950c061425b126983": {
      "type": "Ybodychange",
      "commitMessage": "331230 Fixed low thread warnings when acceptors\u003ethreadpool\n\ngit-svn-id: svn+ssh://dev.eclipse.org/svnroot/rt/org.eclipse.jetty/jetty/trunk@2564 7e9141cc-0065-0410-87d8-b60c137991c4\n",
      "commitDate": "2010/12/1 下午9:08",
      "commitName": "748eadeda349ab2fb1b2f45950c061425b126983",
      "commitAuthor": "Greg Wilkins",
      "commitDateOld": "2010/4/30 上午7:03",
      "commitNameOld": "b7b067e7f3cc5c054560ff782d6e49bb81947137",
      "commitAuthorOld": "Joakim Erdfelt",
      "daysBetweenCommits": 215.59,
      "commitsBetweenForRepo": 565,
      "commitsBetweenForFile": 1,
      "actualSource": "public boolean isLowOnThreads() {\n    if (_executor instanceof ThreadPoolExecutor) {\n        final ThreadPoolExecutor tpe \u003d (ThreadPoolExecutor) _executor;\n        return tpe.getTaskCount() \u003e\u003d (tpe.getMaximumPoolSize());\n    }\n    return false;\n}",
      "path": "jetty-util/src/main/java/org/eclipse/jetty/util/thread/ExecutorThreadPool.java",
      "functionStartLine": 136,
      "functionName": "isLowOnThreads",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,7 +1,7 @@\n public boolean isLowOnThreads() {\n     if (_executor instanceof ThreadPoolExecutor) {\n         final ThreadPoolExecutor tpe \u003d (ThreadPoolExecutor) _executor;\n-        return tpe.getActiveCount() \u003e\u003d tpe.getMaximumPoolSize();\n+        return tpe.getTaskCount() \u003e\u003d (tpe.getMaximumPoolSize());\n     }\n     return false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "da627b843fe81fa0fe52a046c1be8595630e9ae7": {
      "type": "Yintroduced",
      "commitMessage": "jetty @ eclipse initial commit\n\ngit-svn-id: svn+ssh://dev.eclipse.org/svnroot/rt/org.eclipse.jetty/jetty/trunk@8 7e9141cc-0065-0410-87d8-b60c137991c4\n",
      "commitDate": "2009/3/25 上午5:07",
      "commitName": "da627b843fe81fa0fe52a046c1be8595630e9ae7",
      "commitAuthor": "Greg Wilkins",
      "diff": "@@ -0,0 +1,7 @@\n+public boolean isLowOnThreads() {\n+    if (_executor instanceof ThreadPoolExecutor) {\n+        final ThreadPoolExecutor tpe \u003d (ThreadPoolExecutor) _executor;\n+        return tpe.getActiveCount() \u003e\u003d tpe.getMaximumPoolSize();\n+    }\n+    return false;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public boolean isLowOnThreads() {\n    if (_executor instanceof ThreadPoolExecutor) {\n        final ThreadPoolExecutor tpe \u003d (ThreadPoolExecutor) _executor;\n        return tpe.getActiveCount() \u003e\u003d tpe.getMaximumPoolSize();\n    }\n    return false;\n}",
      "path": "jetty-util/src/main/java/org/eclipse/jetty/util/thread/ExecutorThreadPool.java",
      "functionStartLine": 128,
      "functionName": "isLowOnThreads",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}