{
  "origin": "codeshovel",
  "repositoryName": "mockito",
  "repositoryPath": "/Users/franky/Documents/Homework/毕业设计/testcase/mockito/.git",
  "startCommitName": "077562ea54f1fa87ff8dd233c3060ddbf0f1ce26",
  "sourceFileName": "AdditionalMatchers.java",
  "functionName": "geq",
  "functionId": "geq___value-double",
  "sourceFilePath": "src/main/java/org/mockito/AdditionalMatchers.java",
  "functionAnnotation": "",
  "functionDoc": "double argument greater than or equal to the given value.\n\u003cp\u003e\nSee examples in javadoc for {@link AdditionalMatchers} class\n\n@param value the given value.\n@return \u003ccode\u003e0\u003c/code\u003e.\n",
  "functionStartLine": 81,
  "functionEndLine": 84,
  "numCommitsSeen": 41,
  "timeTaken": 771,
  "changeHistory": [
    "f7c1b82139cf23a37f9775ee07c6d8ce0952650e",
    "fe7bbabb82ce3d1000c13d39d6355c134e94ac27",
    "feb23b07d32749c814e2cf2057c1908ec12b5ec7",
    "331f9b99d11b8d1895202757dffce3b0ee366792",
    "8ddb75ecbf0e1596339a91111324e53821a99101",
    "45b98cb06698ea2ce1b25d6e5bf9ca5e0b1dc1a5",
    "5f41dde62faa4c3c381d29cb550243fa2378e8d0",
    "da791d66c21b0cb8037d888e63cc99f74025b905",
    "55db3c7811a05ecae85144e9651160d745af4ea8",
    "ce623bdadaa7f12e4d29b19d0fee876e42279e00"
  ],
  "changeHistoryShort": {
    "f7c1b82139cf23a37f9775ee07c6d8ce0952650e": "Ybodychange",
    "fe7bbabb82ce3d1000c13d39d6355c134e94ac27": "Yfilerename",
    "feb23b07d32749c814e2cf2057c1908ec12b5ec7": "Ydocchange",
    "331f9b99d11b8d1895202757dffce3b0ee366792": "Ydocchange",
    "8ddb75ecbf0e1596339a91111324e53821a99101": "Ybodychange",
    "45b98cb06698ea2ce1b25d6e5bf9ca5e0b1dc1a5": "Ymultichange(Yfilerename,Ydocchange)",
    "5f41dde62faa4c3c381d29cb550243fa2378e8d0": "Ybodychange",
    "da791d66c21b0cb8037d888e63cc99f74025b905": "Ymovefromfile",
    "55db3c7811a05ecae85144e9651160d745af4ea8": "Ydocchange",
    "ce623bdadaa7f12e4d29b19d0fee876e42279e00": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f7c1b82139cf23a37f9775ee07c6d8ce0952650e": {
      "type": "Ybodychange",
      "commitMessage": "removed HandyReturnValues",
      "commitDate": "2016/6/17 下午4:53",
      "commitName": "f7c1b82139cf23a37f9775ee07c6d8ce0952650e",
      "commitAuthor": "Christian Schwarz",
      "commitDateOld": "2015/7/9 下午12:42",
      "commitNameOld": "fe7bbabb82ce3d1000c13d39d6355c134e94ac27",
      "commitAuthorOld": "Szczepan Faber",
      "daysBetweenCommits": 344.17,
      "commitsBetweenForRepo": 184,
      "commitsBetweenForFile": 1,
      "actualSource": "public static double geq(double value) {\n    reportMatcher(new GreaterOrEqual\u003cDouble\u003e(value));\n    return 0;\n}",
      "path": "src/main/java/org/mockito/AdditionalMatchers.java",
      "functionStartLine": 82,
      "functionName": "geq",
      "functionAnnotation": "",
      "functionDoc": "double argument greater than or equal to the given value.\n\u003cp\u003e\nSee examples in javadoc for {@link AdditionalMatchers} class\n\n@param value the given value.\n@return \u003ccode\u003e0\u003c/code\u003e.\n",
      "diff": "@@ -1,3 +1,4 @@\n public static double geq(double value) {\n-    return reportMatcher(new GreaterOrEqual\u003cDouble\u003e(value)).returnZero();\n+    reportMatcher(new GreaterOrEqual\u003cDouble\u003e(value));\n+    return 0;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "fe7bbabb82ce3d1000c13d39d6355c134e94ac27": {
      "type": "Yfilerename",
      "commitMessage": "Moved sources to standard location\n\nLet\u0027s make the project be as close as possible to standard, conventional project for better clarity\n",
      "commitDate": "2015/7/9 下午12:42",
      "commitName": "fe7bbabb82ce3d1000c13d39d6355c134e94ac27",
      "commitAuthor": "Szczepan Faber",
      "commitDateOld": "2015/7/9 上午12:16",
      "commitNameOld": "9d3124ae8768ec9fb60ff5b8a176b060491f9770",
      "commitAuthorOld": "Szczepan Faber",
      "daysBetweenCommits": 0.52,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static double geq(double value) {\n    return reportMatcher(new GreaterOrEqual\u003cDouble\u003e(value)).returnZero();\n}",
      "path": "src/main/java/org/mockito/AdditionalMatchers.java",
      "functionStartLine": 81,
      "functionName": "geq",
      "functionAnnotation": "",
      "functionDoc": "double argument greater than or equal to the given value.\n\u003cp\u003e\nSee examples in javadoc for {@link AdditionalMatchers} class\n\n@param value the given value.\n@return \u003ccode\u003e0\u003c/code\u003e.\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/org/mockito/AdditionalMatchers.java",
        "newPath": "src/main/java/org/mockito/AdditionalMatchers.java"
      }
    },
    "feb23b07d32749c814e2cf2057c1908ec12b5ec7": {
      "type": "Ydocchange",
      "commitMessage": "tuned javadoc\n\n--HG--\nextra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40389\n",
      "commitDate": "2008/2/19 上午7:54",
      "commitName": "feb23b07d32749c814e2cf2057c1908ec12b5ec7",
      "commitAuthor": "Szczepan Faber",
      "commitDateOld": "2008/2/11 上午12:07",
      "commitNameOld": "bf4eec3e73c82a3eff75acce0921f766a33f535f",
      "commitAuthorOld": "Szczepan Faber",
      "daysBetweenCommits": 8.32,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "actualSource": "public static double geq(double value) {\n    return reportMatcher(new GreaterOrEqual\u003cDouble\u003e(value)).returnZero();\n}",
      "path": "src/org/mockito/AdditionalMatchers.java",
      "functionStartLine": 75,
      "functionName": "geq",
      "functionAnnotation": "",
      "functionDoc": "double argument greater than or equal to the given value.\n\u003cp\u003e\nSee examples in javadoc for {@link AdditionalMatchers} class\n\n@param value the given value.\n@return \u003ccode\u003e0\u003c/code\u003e.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "double argument greater than or equal to the given value.\n\u003cp\u003e\nSee examples in javadoc for {@link AdditionalMatchers}\n\n@param value the given value.\n@return \u003ccode\u003e0\u003c/code\u003e.\n",
        "newValue": "double argument greater than or equal to the given value.\n\u003cp\u003e\nSee examples in javadoc for {@link AdditionalMatchers} class\n\n@param value the given value.\n@return \u003ccode\u003e0\u003c/code\u003e.\n"
      }
    },
    "331f9b99d11b8d1895202757dffce3b0ee366792": {
      "type": "Ydocchange",
      "commitMessage": "added link at every matcher in Matchers and AdditionalMatchers\n\n--HG--\nextra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40276\n",
      "commitDate": "2008/1/10 上午5:29",
      "commitName": "331f9b99d11b8d1895202757dffce3b0ee366792",
      "commitAuthor": "Szczepan Faber",
      "commitDateOld": "2008/1/9 下午10:37",
      "commitNameOld": "e62d927c00352be465a582a3f429c83eff6d8fcf",
      "commitAuthorOld": "Szczepan Faber",
      "daysBetweenCommits": 0.29,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static double geq(double value) {\n    return reportMatcher(new GreaterOrEqual\u003cDouble\u003e(value)).returnZero();\n}",
      "path": "src/org/mockito/AdditionalMatchers.java",
      "functionStartLine": 76,
      "functionName": "geq",
      "functionAnnotation": "",
      "functionDoc": "double argument greater than or equal to the given value.\n\u003cp\u003e\nSee examples in javadoc for {@link AdditionalMatchers}\n\n@param value the given value.\n@return \u003ccode\u003e0\u003c/code\u003e.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "double argument greater than or equal to the given value.\n\n@param value the given value.\n@return \u003ccode\u003e0\u003c/code\u003e.\n",
        "newValue": "double argument greater than or equal to the given value.\n\u003cp\u003e\nSee examples in javadoc for {@link AdditionalMatchers}\n\n@param value the given value.\n@return \u003ccode\u003e0\u003c/code\u003e.\n"
      }
    },
    "8ddb75ecbf0e1596339a91111324e53821a99101": {
      "type": "Ybodychange",
      "commitMessage": "reporting matchers is a one-liner also in Matchers.java\nrefactored reporting matchers\n\n--HG--\nextra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40274\n",
      "commitDate": "2008/1/9 下午10:33",
      "commitName": "8ddb75ecbf0e1596339a91111324e53821a99101",
      "commitAuthor": "Szczepan Faber",
      "commitDateOld": "2007/12/30 上午6:04",
      "commitNameOld": "389a09b79caf0e2b98553c5efd0fca9c9c25bbca",
      "commitAuthorOld": "Szczepan Faber",
      "daysBetweenCommits": 10.69,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "actualSource": "public static double geq(double value) {\n    return reportMatcher(new GreaterOrEqual\u003cDouble\u003e(value)).returnZero();\n}",
      "path": "src/org/mockito/AdditionalMatchers.java",
      "functionStartLine": 70,
      "functionName": "geq",
      "functionAnnotation": "",
      "functionDoc": "double argument greater than or equal to the given value.\n\n@param value the given value.\n@return \u003ccode\u003e0\u003c/code\u003e.\n",
      "diff": "@@ -1,4 +1,3 @@\n public static double geq(double value) {\n-    LastArguments.instance().reportMatcher(new GreaterOrEqual\u003cDouble\u003e(value));\n-    return 0;\n+    return reportMatcher(new GreaterOrEqual\u003cDouble\u003e(value)).returnZero();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "45b98cb06698ea2ce1b25d6e5bf9ca5e0b1dc1a5": {
      "type": "Ymultichange(Yfilerename,Ydocchange)",
      "commitMessage": "sorted out argument matchers javadoc and order\n\n--HG--\nrename : src/org/mockito/CrazyMatchers.java \u003d\u003e src/org/mockito/AdditionalMatchers.java\nextra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40217\n",
      "commitDate": "2007/12/16 上午3:46",
      "commitName": "45b98cb06698ea2ce1b25d6e5bf9ca5e0b1dc1a5",
      "commitAuthor": "Szczepan Faber",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "sorted out argument matchers javadoc and order\n\n--HG--\nrename : src/org/mockito/CrazyMatchers.java \u003d\u003e src/org/mockito/AdditionalMatchers.java\nextra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40217\n",
          "commitDate": "2007/12/16 上午3:46",
          "commitName": "45b98cb06698ea2ce1b25d6e5bf9ca5e0b1dc1a5",
          "commitAuthor": "Szczepan Faber",
          "commitDateOld": "2007/12/16 上午2:40",
          "commitNameOld": "cf10abcfb88e365591600c0283c196abc33a7931",
          "commitAuthorOld": "Szczepan Faber",
          "daysBetweenCommits": 0.05,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static double geq(double value) {\n    LastArguments.instance().reportMatcher(new GreaterOrEqual\u003cDouble\u003e(value));\n    return 0;\n}",
          "path": "src/org/mockito/AdditionalMatchers.java",
          "functionStartLine": 53,
          "functionName": "geq",
          "functionAnnotation": "",
          "functionDoc": "double argument greater than or equal to the given value.\n\n@param value the given value.\n@return \u003ccode\u003e0\u003c/code\u003e.\n",
          "diff": "",
          "extendedDetails": {
            "oldPath": "src/org/mockito/CrazyMatchers.java",
            "newPath": "src/org/mockito/AdditionalMatchers.java"
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "sorted out argument matchers javadoc and order\n\n--HG--\nrename : src/org/mockito/CrazyMatchers.java \u003d\u003e src/org/mockito/AdditionalMatchers.java\nextra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40217\n",
          "commitDate": "2007/12/16 上午3:46",
          "commitName": "45b98cb06698ea2ce1b25d6e5bf9ca5e0b1dc1a5",
          "commitAuthor": "Szczepan Faber",
          "commitDateOld": "2007/12/16 上午2:40",
          "commitNameOld": "cf10abcfb88e365591600c0283c196abc33a7931",
          "commitAuthorOld": "Szczepan Faber",
          "daysBetweenCommits": 0.05,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static double geq(double value) {\n    LastArguments.instance().reportMatcher(new GreaterOrEqual\u003cDouble\u003e(value));\n    return 0;\n}",
          "path": "src/org/mockito/AdditionalMatchers.java",
          "functionStartLine": 53,
          "functionName": "geq",
          "functionAnnotation": "",
          "functionDoc": "double argument greater than or equal to the given value.\n\n@param value the given value.\n@return \u003ccode\u003e0\u003c/code\u003e.\n",
          "diff": "",
          "extendedDetails": {
            "oldValue": "Expects a double argument greater than or equal to the given value. For\ndetails, see the documentation.\n\n@param value the given value.\n@return \u003ccode\u003e0\u003c/code\u003e.\n",
            "newValue": "double argument greater than or equal to the given value.\n\n@param value the given value.\n@return \u003ccode\u003e0\u003c/code\u003e.\n"
          }
        }
      ]
    },
    "5f41dde62faa4c3c381d29cb550243fa2378e8d0": {
      "type": "Ybodychange",
      "commitMessage": "some refactorings, enabled some ingnored tests\n\n--HG--\nrename : src/org/mockito/exceptions/NotAMockMethodException.java \u003d\u003e src/org/mockito/exceptions/MissingMethodInvocationException.java\nrename : src/org/mockito/internal/ExpectedInvocation.java \u003d\u003e src/org/mockito/internal/InvocationWithMatchers.java\nrename : src/org/mockito/internal/MockitoOperations.java \u003d\u003e src/org/mockito/internal/MockitoState.java\nextra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%4030\n",
      "commitDate": "2007/11/18 上午7:28",
      "commitName": "5f41dde62faa4c3c381d29cb550243fa2378e8d0",
      "commitAuthor": "Szczepan Faber",
      "commitDateOld": "2007/11/18 上午1:45",
      "commitNameOld": "768674d3daefa0bf1f9f0c7e57a590fac556bba8",
      "commitAuthorOld": "Szczepan Faber",
      "daysBetweenCommits": 0.24,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static double geq(double value) {\n    LastArguments.instance().reportMatcher(new GreaterOrEqual\u003cDouble\u003e(value));\n    return 0;\n}",
      "path": "src/org/mockito/CrazyMatchers.java",
      "functionStartLine": 42,
      "functionName": "geq",
      "functionAnnotation": "",
      "functionDoc": "Expects a double argument greater than or equal to the given value. For\ndetails, see the documentation.\n\n@param value the given value.\n@return \u003ccode\u003e0\u003c/code\u003e.\n",
      "diff": "@@ -1,4 +1,4 @@\n public static double geq(double value) {\n-    LastArguments.reportMatcher(new GreaterOrEqual\u003cDouble\u003e(value));\n+    LastArguments.instance().reportMatcher(new GreaterOrEqual\u003cDouble\u003e(value));\n     return 0;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "da791d66c21b0cb8037d888e63cc99f74025b905": {
      "type": "Ymovefromfile",
      "commitMessage": "-ant doesn\u0027t work yet :(\n-refactored some names\n\n--HG--\nrename : src/org/mockito/Matchers.java \u003d\u003e src/org/mockito/CrazyMatchers.java\nrename : src/org/mockito/CoolMatchers.java \u003d\u003e src/org/mockito/Matchers.java\nextra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%4028\n",
      "commitDate": "2007/11/18 上午1:34",
      "commitName": "da791d66c21b0cb8037d888e63cc99f74025b905",
      "commitAuthor": "Szczepan Faber",
      "commitDateOld": "2007/11/18 上午1:31",
      "commitNameOld": "b4577d37adefb2f50f5d50759e9ce6e4134edaee",
      "commitAuthorOld": "Szczepan Faber",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static double geq(double value) {\n    LastArguments.reportMatcher(new GreaterOrEqual\u003cDouble\u003e(value));\n    return 0;\n}",
      "path": "src/org/mockito/CrazyMatchers.java",
      "functionStartLine": 43,
      "functionName": "geq",
      "functionAnnotation": "",
      "functionDoc": "Expects a double argument greater than or equal to the given value. For\ndetails, see the documentation.\n\n@param value the given value.\n@return \u003ccode\u003e0\u003c/code\u003e.\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/org/mockito/Matchers.java",
        "newPath": "src/org/mockito/CrazyMatchers.java",
        "oldMethodName": "geq",
        "newMethodName": "geq"
      }
    },
    "55db3c7811a05ecae85144e9651160d745af4ea8": {
      "type": "Ydocchange",
      "commitMessage": "umbilical cord between mockito package and easymock package is cut!\n\n--HG--\nrename : src/org/mockito/matchers/HasNoIvocationsMatcher.java \u003d\u003e src/org/mockito/hamcrest/HasNoIvocationsMatcher.java\nrename : src/org/mockito/matchers/HasNoMoreIvocationsMatcher.java \u003d\u003e src/org/mockito/hamcrest/HasNoMoreIvocationsMatcher.java\nrename : src/org/mockito/matchers/MockitoMatcher.java \u003d\u003e src/org/mockito/hamcrest/MockitoMatcher.java\nrename : src/org/mockito/matchers/WasInvokedMatcher.java \u003d\u003e src/org/mockito/hamcrest/WasInvokedMatcher.java\nrename : src/org/easymock/internal/ClassProxyFactory.java \u003d\u003e src/org/mockito/internal/ClassProxyFactory.java\nrename : src/org/easymock/internal/ExpectedInvocation.java \u003d\u003e src/org/mockito/internal/ExpectedInvocation.java\nrename : src/org/easymock/IAnswer.java \u003d\u003e src/org/mockito/internal/IAnswer.java\nrename : src/org/easymock/internal/Invocation.java \u003d\u003e src/org/mockito/internal/Invocation.java\nrename : src/org/mockito/InvocationWithMatchers.java \u003d\u003e src/org/mockito/internal/InvocationWithMatchers.java\nrename : src/org/easymock/internal/LastArguments.java \u003d\u003e src/org/mockito/internal/LastArguments.java\nrename : src/org/mockito/MethodSelector.java \u003d\u003e src/org/mockito/internal/MethodSelector.java\nrename : src/org/mockito/MockAwareInvocationHandler.java \u003d\u003e src/org/mockito/internal/MockAwareInvocationHandler.java\nrename : src/org/mockito/MockUtil.java \u003d\u003e src/org/mockito/internal/MockUtil.java\nrename : src/org/mockito/MockitoBehavior.java \u003d\u003e src/org/mockito/internal/MockitoBehavior.java\nrename : src/org/mockito/MockitoControl.java \u003d\u003e src/org/mockito/internal/MockitoControl.java\nrename : src/org/mockito/MockitoExpectation.java \u003d\u003e src/org/mockito/internal/MockitoExpectation.java\nrename : src/org/mockito/MockitoInvocation.java \u003d\u003e src/org/mockito/internal/MockitoInvocation.java\nrename : src/org/easymock/internal/MockitoObjectMethodsFilter.java \u003d\u003e src/org/mockito/internal/MockitoObjectMethodsFilter.java\nrename : src/org/mockito/MockitoOperations.java \u003d\u003e src/org/mockito/internal/MockitoOperations.java\nrename : src/org/easymock/internal/Result.java \u003d\u003e src/org/mockito/internal/Result.java\nrename : src/org/easymock/internal/RuntimeExceptionWrapper.java \u003d\u003e src/org/mockito/internal/RuntimeExceptionWrapper.java\nrename : src/org/easymock/internal/ToTypeMappings.java \u003d\u003e src/org/mockito/internal/ToTypeMappings.java\nrename : src/org/mockito/VerifyingMode.java \u003d\u003e src/org/mockito/internal/VerifyingMode.java\nrename : src/org/mockito/VoidMethodExpectation.java \u003d\u003e src/org/mockito/internal/VoidMethodExpectation.java\nextra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%4024\n",
      "commitDate": "2007/11/18 上午1:01",
      "commitName": "55db3c7811a05ecae85144e9651160d745af4ea8",
      "commitAuthor": "Szczepan Faber",
      "commitDateOld": "2007/11/17 上午6:57",
      "commitNameOld": "ce623bdadaa7f12e4d29b19d0fee876e42279e00",
      "commitAuthorOld": "Szczepan Faber",
      "daysBetweenCommits": 0.75,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "public static double geq(double value) {\n    LastArguments.reportMatcher(new GreaterOrEqual\u003cDouble\u003e(value));\n    return 0;\n}",
      "path": "src/org/mockito/Matchers.java",
      "functionStartLine": 43,
      "functionName": "geq",
      "functionAnnotation": "",
      "functionDoc": "Expects a double argument greater than or equal to the given value. For\ndetails, see the documentation.\n\n@param value the given value.\n@return \u003ccode\u003e0\u003c/code\u003e.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Expects a double argument greater than or equal to the given value. For\ndetails, see the EasyMock documentation.\n\n@param value the given value.\n@return \u003ccode\u003e0\u003c/code\u003e.\n",
        "newValue": "Expects a double argument greater than or equal to the given value. For\ndetails, see the documentation.\n\n@param value the given value.\n@return \u003ccode\u003e0\u003c/code\u003e.\n"
      }
    },
    "ce623bdadaa7f12e4d29b19d0fee876e42279e00": {
      "type": "Yintroduced",
      "commitMessage": "-killed/refactored some tests\n-started purging EasyMock\n\n--HG--\nextra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%4019\n",
      "commitDate": "2007/11/17 上午6:57",
      "commitName": "ce623bdadaa7f12e4d29b19d0fee876e42279e00",
      "commitAuthor": "Szczepan Faber",
      "diff": "@@ -0,0 +1,4 @@\n+public static double geq(double value) {\n+    LastArguments.reportMatcher(new GreaterOrEqual\u003cDouble\u003e(value));\n+    return 0;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static double geq(double value) {\n    LastArguments.reportMatcher(new GreaterOrEqual\u003cDouble\u003e(value));\n    return 0;\n}",
      "path": "src/org/mockito/Matchers.java",
      "functionStartLine": 42,
      "functionName": "geq",
      "functionAnnotation": "",
      "functionDoc": "Expects a double argument greater than or equal to the given value. For\ndetails, see the EasyMock documentation.\n\n@param value the given value.\n@return \u003ccode\u003e0\u003c/code\u003e.\n"
    }
  }
}