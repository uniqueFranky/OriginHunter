{
  "origin": "codeshovel",
  "repositoryName": "elasticsearch",
  "repositoryPath": "/Users/franky/Documents/Homework/毕业设计/testcase/elasticsearch/.git",
  "startCommitName": "767c69593c67befb843686de8ea51b7bc87728c9",
  "sourceFileName": "TransportClusterInfoAction.java",
  "functionName": "masterOperation",
  "functionId": "masterOperation___request-Request(modifiers-final)__state-ClusterState(modifiers-final)__listener-ActionListener__Response__(modifiers-final)",
  "sourceFilePath": "server/src/main/java/org/elasticsearch/action/support/master/info/TransportClusterInfoAction.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 50,
  "functionEndLine": 53,
  "numCommitsSeen": 27,
  "timeTaken": 4461,
  "changeHistory": [
    "99f88f15c5febbca2d13b5b5fda27b844153bf1a",
    "31740e279f812f27d7f064e14a361a1213b3cb0f",
    "52859e3a523983275cea0bbb0bd2d4f0203f69cf",
    "15a62448343fd24f8e63f43b1e4b16f50005e4a5",
    "b4efb6c472715756f9920a653be70d3ce16767cc",
    "8dedbd01df14c76fc8f1ac9060facc053fa2be9b",
    "7548b2edb782a2732aca5e9bae9016c6a01cb6e6",
    "fa16969360ea43667ad11f827bbf86718c18fcc6",
    "f4bf0d5112b5c6f29b651586d72c3972db5a2834",
    "4930b93c26506e8f063a3b817f0434bd17fca14c",
    "dc0d81b8aac03af962e895381406f312565fd358"
  ],
  "changeHistoryShort": {
    "99f88f15c5febbca2d13b5b5fda27b844153bf1a": "Yfilerename",
    "31740e279f812f27d7f064e14a361a1213b3cb0f": "Ybodychange",
    "52859e3a523983275cea0bbb0bd2d4f0203f69cf": "Ybodychange",
    "15a62448343fd24f8e63f43b1e4b16f50005e4a5": "Yfilerename",
    "b4efb6c472715756f9920a653be70d3ce16767cc": "Yexceptionschange",
    "8dedbd01df14c76fc8f1ac9060facc053fa2be9b": "Ybodychange",
    "7548b2edb782a2732aca5e9bae9016c6a01cb6e6": "Ybodychange",
    "fa16969360ea43667ad11f827bbf86718c18fcc6": "Yexceptionschange",
    "f4bf0d5112b5c6f29b651586d72c3972db5a2834": "Ybodychange",
    "4930b93c26506e8f063a3b817f0434bd17fca14c": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange,Yparametermetachange)",
    "dc0d81b8aac03af962e895381406f312565fd358": "Yintroduced"
  },
  "changeHistoryDetails": {
    "99f88f15c5febbca2d13b5b5fda27b844153bf1a": {
      "type": "Yfilerename",
      "commitMessage": "Rename core module to server (#28180)\n\nThis is related to #27933. It renames the core module to server. This is\r\nthe first step towards introducing an elasticsearch-core jar.",
      "commitDate": "2018/1/12 上午2:30",
      "commitName": "99f88f15c5febbca2d13b5b5fda27b844153bf1a",
      "commitAuthor": "Tim Brooks",
      "commitDateOld": "2018/1/12 上午12:31",
      "commitNameOld": "7d0eb3292b8f8ba27ef50dbbf38783dc68c70728",
      "commitAuthorOld": "Martijn van Groningen",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nprotected final void masterOperation(final Request request, final ClusterState state, final ActionListener\u003cResponse\u003e listener) {\n    String[] concreteIndices \u003d indexNameExpressionResolver.concreteIndexNames(state, request);\n    doMasterOperation(request, concreteIndices, state, listener);\n}",
      "path": "server/src/main/java/org/elasticsearch/action/support/master/info/TransportClusterInfoAction.java",
      "functionStartLine": 51,
      "functionName": "masterOperation",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "core/src/main/java/org/elasticsearch/action/support/master/info/TransportClusterInfoAction.java",
        "newPath": "server/src/main/java/org/elasticsearch/action/support/master/info/TransportClusterInfoAction.java"
      }
    },
    "31740e279f812f27d7f064e14a361a1213b3cb0f": {
      "type": "Ybodychange",
      "commitMessage": "Resolve index names to Index instances early\n\nToday index names are often resolved lazily, only when they are really\nneeded. This can be problematic especially when it gets to mapping updates\netc. when a node sends a mapping update to the master but while the request\nis in-flight the index changes for whatever reason we would still apply the update\nsince we use the name of the index to identify the index in the clusterstate.\nThe problem is that index names can be reused which happens in practice and sometimes\neven in a automated way rendering this problem as realistic.\nIn this change we resolve the index including it\u0027s UUID as early as possible in places\nwhere changes to the clusterstate are possible. For instance mapping updates on a node use a\nconcrete index rather than it\u0027s name and the master will fail the mapping update iff\nthe index can\u0027t be found by it\u0027s \u003cname, uuid\u003e tuple.\n\nCloses #17048\n",
      "commitDate": "2016/3/14 下午6:08",
      "commitName": "31740e279f812f27d7f064e14a361a1213b3cb0f",
      "commitAuthor": "Simon Willnauer",
      "commitDateOld": "2016/1/18 上午6:07",
      "commitNameOld": "742e1da85732ce2aac9f5e941504c9bb05dc503a",
      "commitAuthorOld": "Nik Everett",
      "daysBetweenCommits": 56.5,
      "commitsBetweenForRepo": 979,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nprotected final void masterOperation(final Request request, final ClusterState state, final ActionListener\u003cResponse\u003e listener) {\n    String[] concreteIndices \u003d indexNameExpressionResolver.concreteIndexNames(state, request);\n    doMasterOperation(request, concreteIndices, state, listener);\n}",
      "path": "core/src/main/java/org/elasticsearch/action/support/master/info/TransportClusterInfoAction.java",
      "functionStartLine": 52,
      "functionName": "masterOperation",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,5 +1,5 @@\n @Override\n protected final void masterOperation(final Request request, final ClusterState state, final ActionListener\u003cResponse\u003e listener) {\n-    String[] concreteIndices \u003d indexNameExpressionResolver.concreteIndices(state, request);\n+    String[] concreteIndices \u003d indexNameExpressionResolver.concreteIndexNames(state, request);\n     doMasterOperation(request, concreteIndices, state, listener);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "52859e3a523983275cea0bbb0bd2d4f0203f69cf": {
      "type": "Ybodychange",
      "commitMessage": "Internal: refactored MetaData to split the concrete index name resolution to IndexNameExpressionResolver.\n\nChanges in a nutshell:\n* All expression logic is now encapsulated by ExpressionResolver interface.\n* MetaData#convertFromWildcards() gets replaced by WildcardExpressionResolver.\n* All of the indices expansion methods are being moved from MetaData class to the new IndexNameExpressionResolver class.\n* All single index expansion optimisations are removed.\n\nThe logic for resolving a concrete index name from an expression has been moved from MetaData to IndexExpressionResolver. The logic has been cleaned up and simplified were was possible without breaking bwc.\n\nAlso the notion of aliasOrIndex has been changed to index expression.\n\nThe IndexNameExpressionResolver translates index name expressions into concrete indices. The list of index name expressions are first delegated to the known ExpressionResolverS. An ExpressionResolver is responsible for translating if possible an expression into another expression (possibly but not required this can be concrete indices or aliases) otherwise the expressions are left untouched. Concretely this means converting wildcard expressions into concrete indices or aliases, but in the future other implementations could convert expressions based on different rules.\n\nTo prevent many overloading of methods, DocumentRequest extends now from IndicesRequest. All implementation of DocumentRequest already did implement IndicesRequest indirectly.\n",
      "commitDate": "2015/7/10 下午9:18",
      "commitName": "52859e3a523983275cea0bbb0bd2d4f0203f69cf",
      "commitAuthor": "Martijn van Groningen",
      "commitDateOld": "2015/6/5 下午7:12",
      "commitNameOld": "15a62448343fd24f8e63f43b1e4b16f50005e4a5",
      "commitAuthorOld": "Simon Willnauer",
      "daysBetweenCommits": 35.09,
      "commitsBetweenForRepo": 494,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nprotected final void masterOperation(final Request request, final ClusterState state, final ActionListener\u003cResponse\u003e listener) {\n    String[] concreteIndices \u003d indexNameExpressionResolver.concreteIndices(state, request);\n    doMasterOperation(request, concreteIndices, state, listener);\n}",
      "path": "core/src/main/java/org/elasticsearch/action/support/master/info/TransportClusterInfoAction.java",
      "functionStartLine": 49,
      "functionName": "masterOperation",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,5 +1,5 @@\n @Override\n protected final void masterOperation(final Request request, final ClusterState state, final ActionListener\u003cResponse\u003e listener) {\n-    String[] concreteIndices \u003d state.metaData().concreteIndices(request.indicesOptions(), request.indices());\n+    String[] concreteIndices \u003d indexNameExpressionResolver.concreteIndices(state, request);\n     doMasterOperation(request, concreteIndices, state, listener);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "15a62448343fd24f8e63f43b1e4b16f50005e4a5": {
      "type": "Yfilerename",
      "commitMessage": "create core module\n",
      "commitDate": "2015/6/5 下午7:12",
      "commitName": "15a62448343fd24f8e63f43b1e4b16f50005e4a5",
      "commitAuthor": "Simon Willnauer",
      "commitDateOld": "2015/6/5 下午7:11",
      "commitNameOld": "7ccc193a666e2ae888e7ac93d677a2143e5e07c3",
      "commitAuthorOld": "Simon Willnauer",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nprotected final void masterOperation(final Request request, final ClusterState state, final ActionListener\u003cResponse\u003e listener) {\n    String[] concreteIndices \u003d state.metaData().concreteIndices(request.indicesOptions(), request.indices());\n    doMasterOperation(request, concreteIndices, state, listener);\n}",
      "path": "core/src/main/java/org/elasticsearch/action/support/master/info/TransportClusterInfoAction.java",
      "functionStartLine": 46,
      "functionName": "masterOperation",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/org/elasticsearch/action/support/master/info/TransportClusterInfoAction.java",
        "newPath": "core/src/main/java/org/elasticsearch/action/support/master/info/TransportClusterInfoAction.java"
      }
    },
    "b4efb6c472715756f9920a653be70d3ce16767cc": {
      "type": "Yexceptionschange",
      "commitMessage": "Remove unused / obsolete import and throws statements\n\nThis commit removes unused thorws statements when RuntimeExceptions are\nmentioned in the throws statement. It also removes obsolete import statements\nfor java.lang.IllegalArgumentException and java.lang.IllegalStateException\n",
      "commitDate": "2015/4/29 下午4:42",
      "commitName": "b4efb6c472715756f9920a653be70d3ce16767cc",
      "commitAuthor": "Simon Willnauer",
      "commitDateOld": "2015/4/24 下午8:11",
      "commitNameOld": "8dbb79c96af8b2d7efc10c8dc3552cf0e2042407",
      "commitAuthorOld": "Shay Banon",
      "daysBetweenCommits": 4.85,
      "commitsBetweenForRepo": 76,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nprotected final void masterOperation(final Request request, final ClusterState state, final ActionListener\u003cResponse\u003e listener) {\n    String[] concreteIndices \u003d state.metaData().concreteIndices(request.indicesOptions(), request.indices());\n    doMasterOperation(request, concreteIndices, state, listener);\n}",
      "path": "src/main/java/org/elasticsearch/action/support/master/info/TransportClusterInfoAction.java",
      "functionStartLine": 47,
      "functionName": "masterOperation",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,5 +1,5 @@\n @Override\n-protected final void masterOperation(final Request request, final ClusterState state, final ActionListener\u003cResponse\u003e listener) throws ElasticsearchException {\n+protected final void masterOperation(final Request request, final ClusterState state, final ActionListener\u003cResponse\u003e listener) {\n     String[] concreteIndices \u003d state.metaData().concreteIndices(request.indicesOptions(), request.indices());\n     doMasterOperation(request, concreteIndices, state, listener);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[ElasticsearchException]",
        "newValue": "[]"
      }
    },
    "8dedbd01df14c76fc8f1ac9060facc053fa2be9b": {
      "type": "Ybodychange",
      "commitMessage": "Core: don\u0027t replace indices within the ActionRequest with the concrete ones, and make sure check blocks is executed on concrete indices\n\nConcrete indices is now called multiple times when needed instead of changing what\u0027s inside the incoming request with the concrete indices. Ideally we want to keep the original aliases or indices or wildcard expressions in the request.\n\nAlso made sure that the check blocks is done against the concrete indices, which wasn\u0027t the case for delete index, delete mapping, open index, close index, types exists and indices exists.\n\nCloses #6694\nCloses #6777\n",
      "commitDate": "2014/7/8 下午8:18",
      "commitName": "8dedbd01df14c76fc8f1ac9060facc053fa2be9b",
      "commitAuthor": "javanna",
      "commitDateOld": "2014/5/16 上午2:53",
      "commitNameOld": "7548b2edb782a2732aca5e9bae9016c6a01cb6e6",
      "commitAuthorOld": "javanna",
      "daysBetweenCommits": 53.73,
      "commitsBetweenForRepo": 437,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nprotected final void masterOperation(final Request request, final ClusterState state, final ActionListener\u003cResponse\u003e listener) throws ElasticsearchException {\n    String[] concreteIndices \u003d state.metaData().concreteIndices(request.indicesOptions(), request.indices());\n    doMasterOperation(request, concreteIndices, state, listener);\n}",
      "path": "src/main/java/org/elasticsearch/action/support/master/info/TransportClusterInfoAction.java",
      "functionStartLine": 46,
      "functionName": "masterOperation",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,6 +1,5 @@\n @Override\n protected final void masterOperation(final Request request, final ClusterState state, final ActionListener\u003cResponse\u003e listener) throws ElasticsearchException {\n     String[] concreteIndices \u003d state.metaData().concreteIndices(request.indicesOptions(), request.indices());\n-    request.indices(concreteIndices);\n-    doMasterOperation(request, state, listener);\n+    doMasterOperation(request, concreteIndices, state, listener);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7548b2edb782a2732aca5e9bae9016c6a01cb6e6": {
      "type": "Ybodychange",
      "commitMessage": "Unified MetaData#concreteIndices methods into a single method that accepts indices (or aliases) and indices options\n\nAdded new internal flag to IndicesOptions that tells whether aliases can be resolved to multiple indices or not.\n\nCut over to new metaData#concreteIndices(IndicesOptions, String...) for all the api previously using MetaData#concreteIndices(String[], IndicesOptions) and removed old method, deprecation is not needed as it doesn\u0027t break client code.\n\nIntroduced constants for flags in IndicesOptions for more readability\n\nRenamed MetaData#concreteIndex to concreteSingleIndex, left method as a shortcut although it calls the common concreteIndices that accepts IndicesOptions and multipleIndices\n",
      "commitDate": "2014/5/16 上午2:53",
      "commitName": "7548b2edb782a2732aca5e9bae9016c6a01cb6e6",
      "commitAuthor": "javanna",
      "commitDateOld": "2014/1/20 下午7:35",
      "commitNameOld": "3a558972b211efc8f672a6323663a288930e9b2c",
      "commitAuthorOld": "Luca Cavanna",
      "daysBetweenCommits": 115.3,
      "commitsBetweenForRepo": 1131,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nprotected final void masterOperation(final Request request, final ClusterState state, final ActionListener\u003cResponse\u003e listener) throws ElasticsearchException {\n    String[] concreteIndices \u003d state.metaData().concreteIndices(request.indicesOptions(), request.indices());\n    request.indices(concreteIndices);\n    doMasterOperation(request, state, listener);\n}",
      "path": "src/main/java/org/elasticsearch/action/support/master/info/TransportClusterInfoAction.java",
      "functionStartLine": 46,
      "functionName": "masterOperation",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,6 +1,6 @@\n @Override\n protected final void masterOperation(final Request request, final ClusterState state, final ActionListener\u003cResponse\u003e listener) throws ElasticsearchException {\n-    String[] concreteIndices \u003d state.metaData().concreteIndices(request.indices(), request.indicesOptions());\n+    String[] concreteIndices \u003d state.metaData().concreteIndices(request.indicesOptions(), request.indices());\n     request.indices(concreteIndices);\n     doMasterOperation(request, state, listener);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "fa16969360ea43667ad11f827bbf86718c18fcc6": {
      "type": "Yexceptionschange",
      "commitMessage": "Cleanup comments and class names s/ElasticSearch/Elasticsearch\n\n * Clean up s/ElasticSearch/Elasticsearch on docs/*\n * Clean up s/ElasticSearch/Elasticsearch on src/* bin/* \u0026 pom.xml\n * Clean up s/ElasticSearch/Elasticsearch on NOTICE.txt and README.textile\n\nCloses #4634\n",
      "commitDate": "2014/1/7 下午6:21",
      "commitName": "fa16969360ea43667ad11f827bbf86718c18fcc6",
      "commitAuthor": "Simon Willnauer",
      "commitDateOld": "2014/1/2 下午7:19",
      "commitNameOld": "f4bf0d5112b5c6f29b651586d72c3972db5a2834",
      "commitAuthorOld": "Martijn van Groningen",
      "daysBetweenCommits": 4.96,
      "commitsBetweenForRepo": 64,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nprotected final void masterOperation(final Request request, final ClusterState state, final ActionListener\u003cResponse\u003e listener) throws ElasticsearchException {\n    String[] concreteIndices \u003d state.metaData().concreteIndices(request.indices(), request.indicesOptions());\n    request.indices(concreteIndices);\n    doMasterOperation(request, state, listener);\n}",
      "path": "src/main/java/org/elasticsearch/action/support/master/info/TransportClusterInfoAction.java",
      "functionStartLine": 51,
      "functionName": "masterOperation",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,6 +1,6 @@\n @Override\n-protected final void masterOperation(final Request request, final ClusterState state, final ActionListener\u003cResponse\u003e listener) throws ElasticSearchException {\n+protected final void masterOperation(final Request request, final ClusterState state, final ActionListener\u003cResponse\u003e listener) throws ElasticsearchException {\n     String[] concreteIndices \u003d state.metaData().concreteIndices(request.indices(), request.indicesOptions());\n     request.indices(concreteIndices);\n     doMasterOperation(request, state, listener);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[ElasticSearchException]",
        "newValue": "[ElasticsearchException]"
      }
    },
    "f4bf0d5112b5c6f29b651586d72c3972db5a2834": {
      "type": "Ybodychange",
      "commitMessage": "Replaced `ignore_indices` with `ignore_unavailable`, `expand_wildcards` and `allow_no_indices`.\n\n* `ignore_unavailable` - Controls whether to ignore if any specified indices are unavailable, this includes indices that don\u0027t exist or closed indices. Either `true` or `false` can be specified.\n* `allow_no_indices` - Controls whether to fail if a wildcard indices expressions results into no concrete indices. Either `true` or `false` can be specified. For example if the wildcard expression `foo*` is specified and no indices are available that start with `foo` then depending on this setting the request will fail. This setting is also applicable when `_all`, `*` or no index has been specified.\n* `expand_wildcards` - Controls to what kind of concrete indices wildcard indices expression expand to. If `open` is specified then the wildcard expression if expanded to only open indices and if `closed` is specified then the wildcard expression if expanded only to closed indices. Also both values (`open,closed`) can be specified to expand to all indices.\n\nCloses to #4436\n",
      "commitDate": "2014/1/2 下午7:19",
      "commitName": "f4bf0d5112b5c6f29b651586d72c3972db5a2834",
      "commitAuthor": "Martijn van Groningen",
      "commitDateOld": "2013/7/23 上午6:08",
      "commitNameOld": "4930b93c26506e8f063a3b817f0434bd17fca14c",
      "commitAuthorOld": "Shay Banon",
      "daysBetweenCommits": 163.55,
      "commitsBetweenForRepo": 1492,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nprotected final void masterOperation(final Request request, final ClusterState state, final ActionListener\u003cResponse\u003e listener) throws ElasticSearchException {\n    String[] concreteIndices \u003d state.metaData().concreteIndices(request.indices(), request.indicesOptions());\n    request.indices(concreteIndices);\n    doMasterOperation(request, state, listener);\n}",
      "path": "src/main/java/org/elasticsearch/action/support/master/info/TransportClusterInfoAction.java",
      "functionStartLine": 51,
      "functionName": "masterOperation",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,6 +1,6 @@\n @Override\n protected final void masterOperation(final Request request, final ClusterState state, final ActionListener\u003cResponse\u003e listener) throws ElasticSearchException {\n-    String[] concreteIndices \u003d state.metaData().concreteIndices(request.indices(), request.ignoreIndices(), true);\n+    String[] concreteIndices \u003d state.metaData().concreteIndices(request.indices(), request.indicesOptions());\n     request.indices(concreteIndices);\n     doMasterOperation(request, state, listener);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "4930b93c26506e8f063a3b817f0434bd17fca14c": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange,Yparametermetachange)",
      "commitMessage": "move master actions to accept a lister, improve cluster service state execution\n- master actions many times end up being executed on the cluster service, so there is no need to block them on the management thread pool to wait for a response, this remove the load on the management thread pool, and also simplifies the code implementing it\n- cluster service state update exception handling was improved to include a callback when a failure happens during state update execution, this makes sure that we catch all relevant exceptions and invoke the callback, as well as simplify the code of cluster state update tasks, as they can throw failures from within the execute method and then handle them properly\n",
      "commitDate": "2013/7/23 上午6:08",
      "commitName": "4930b93c26506e8f063a3b817f0434bd17fca14c",
      "commitAuthor": "Shay Banon",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "move master actions to accept a lister, improve cluster service state execution\n- master actions many times end up being executed on the cluster service, so there is no need to block them on the management thread pool to wait for a response, this remove the load on the management thread pool, and also simplifies the code implementing it\n- cluster service state update exception handling was improved to include a callback when a failure happens during state update execution, this makes sure that we catch all relevant exceptions and invoke the callback, as well as simplify the code of cluster state update tasks, as they can throw failures from within the execute method and then handle them properly\n",
          "commitDate": "2013/7/23 上午6:08",
          "commitName": "4930b93c26506e8f063a3b817f0434bd17fca14c",
          "commitAuthor": "Shay Banon",
          "commitDateOld": "2013/6/13 上午3:03",
          "commitNameOld": "dc0d81b8aac03af962e895381406f312565fd358",
          "commitAuthorOld": "Martijn van Groningen",
          "daysBetweenCommits": 40.13,
          "commitsBetweenForRepo": 165,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\nprotected final void masterOperation(final Request request, final ClusterState state, final ActionListener\u003cResponse\u003e listener) throws ElasticSearchException {\n    String[] concreteIndices \u003d state.metaData().concreteIndices(request.indices(), request.ignoreIndices(), true);\n    request.indices(concreteIndices);\n    doMasterOperation(request, state, listener);\n}",
          "path": "src/main/java/org/elasticsearch/action/support/master/info/TransportClusterInfoAction.java",
          "functionStartLine": 51,
          "functionName": "masterOperation",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,6 +1,6 @@\n @Override\n-protected final Response masterOperation(Request request, ClusterState state) throws ElasticSearchException {\n+protected final void masterOperation(final Request request, final ClusterState state, final ActionListener\u003cResponse\u003e listener) throws ElasticSearchException {\n     String[] concreteIndices \u003d state.metaData().concreteIndices(request.indices(), request.ignoreIndices(), true);\n     request.indices(concreteIndices);\n-    return doMasterOperation(request, state);\n+    doMasterOperation(request, state, listener);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[request-Request, state-ClusterState]",
            "newValue": "[request-Request(modifiers-final), state-ClusterState(modifiers-final), listener-ActionListener\u003cResponse\u003e(modifiers-final)]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "move master actions to accept a lister, improve cluster service state execution\n- master actions many times end up being executed on the cluster service, so there is no need to block them on the management thread pool to wait for a response, this remove the load on the management thread pool, and also simplifies the code implementing it\n- cluster service state update exception handling was improved to include a callback when a failure happens during state update execution, this makes sure that we catch all relevant exceptions and invoke the callback, as well as simplify the code of cluster state update tasks, as they can throw failures from within the execute method and then handle them properly\n",
          "commitDate": "2013/7/23 上午6:08",
          "commitName": "4930b93c26506e8f063a3b817f0434bd17fca14c",
          "commitAuthor": "Shay Banon",
          "commitDateOld": "2013/6/13 上午3:03",
          "commitNameOld": "dc0d81b8aac03af962e895381406f312565fd358",
          "commitAuthorOld": "Martijn van Groningen",
          "daysBetweenCommits": 40.13,
          "commitsBetweenForRepo": 165,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\nprotected final void masterOperation(final Request request, final ClusterState state, final ActionListener\u003cResponse\u003e listener) throws ElasticSearchException {\n    String[] concreteIndices \u003d state.metaData().concreteIndices(request.indices(), request.ignoreIndices(), true);\n    request.indices(concreteIndices);\n    doMasterOperation(request, state, listener);\n}",
          "path": "src/main/java/org/elasticsearch/action/support/master/info/TransportClusterInfoAction.java",
          "functionStartLine": 51,
          "functionName": "masterOperation",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,6 +1,6 @@\n @Override\n-protected final Response masterOperation(Request request, ClusterState state) throws ElasticSearchException {\n+protected final void masterOperation(final Request request, final ClusterState state, final ActionListener\u003cResponse\u003e listener) throws ElasticSearchException {\n     String[] concreteIndices \u003d state.metaData().concreteIndices(request.indices(), request.ignoreIndices(), true);\n     request.indices(concreteIndices);\n-    return doMasterOperation(request, state);\n+    doMasterOperation(request, state, listener);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Response",
            "newValue": "void"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "move master actions to accept a lister, improve cluster service state execution\n- master actions many times end up being executed on the cluster service, so there is no need to block them on the management thread pool to wait for a response, this remove the load on the management thread pool, and also simplifies the code implementing it\n- cluster service state update exception handling was improved to include a callback when a failure happens during state update execution, this makes sure that we catch all relevant exceptions and invoke the callback, as well as simplify the code of cluster state update tasks, as they can throw failures from within the execute method and then handle them properly\n",
          "commitDate": "2013/7/23 上午6:08",
          "commitName": "4930b93c26506e8f063a3b817f0434bd17fca14c",
          "commitAuthor": "Shay Banon",
          "commitDateOld": "2013/6/13 上午3:03",
          "commitNameOld": "dc0d81b8aac03af962e895381406f312565fd358",
          "commitAuthorOld": "Martijn van Groningen",
          "daysBetweenCommits": 40.13,
          "commitsBetweenForRepo": 165,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\nprotected final void masterOperation(final Request request, final ClusterState state, final ActionListener\u003cResponse\u003e listener) throws ElasticSearchException {\n    String[] concreteIndices \u003d state.metaData().concreteIndices(request.indices(), request.ignoreIndices(), true);\n    request.indices(concreteIndices);\n    doMasterOperation(request, state, listener);\n}",
          "path": "src/main/java/org/elasticsearch/action/support/master/info/TransportClusterInfoAction.java",
          "functionStartLine": 51,
          "functionName": "masterOperation",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,6 +1,6 @@\n @Override\n-protected final Response masterOperation(Request request, ClusterState state) throws ElasticSearchException {\n+protected final void masterOperation(final Request request, final ClusterState state, final ActionListener\u003cResponse\u003e listener) throws ElasticSearchException {\n     String[] concreteIndices \u003d state.metaData().concreteIndices(request.indices(), request.ignoreIndices(), true);\n     request.indices(concreteIndices);\n-    return doMasterOperation(request, state);\n+    doMasterOperation(request, state, listener);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "move master actions to accept a lister, improve cluster service state execution\n- master actions many times end up being executed on the cluster service, so there is no need to block them on the management thread pool to wait for a response, this remove the load on the management thread pool, and also simplifies the code implementing it\n- cluster service state update exception handling was improved to include a callback when a failure happens during state update execution, this makes sure that we catch all relevant exceptions and invoke the callback, as well as simplify the code of cluster state update tasks, as they can throw failures from within the execute method and then handle them properly\n",
          "commitDate": "2013/7/23 上午6:08",
          "commitName": "4930b93c26506e8f063a3b817f0434bd17fca14c",
          "commitAuthor": "Shay Banon",
          "commitDateOld": "2013/6/13 上午3:03",
          "commitNameOld": "dc0d81b8aac03af962e895381406f312565fd358",
          "commitAuthorOld": "Martijn van Groningen",
          "daysBetweenCommits": 40.13,
          "commitsBetweenForRepo": 165,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\nprotected final void masterOperation(final Request request, final ClusterState state, final ActionListener\u003cResponse\u003e listener) throws ElasticSearchException {\n    String[] concreteIndices \u003d state.metaData().concreteIndices(request.indices(), request.ignoreIndices(), true);\n    request.indices(concreteIndices);\n    doMasterOperation(request, state, listener);\n}",
          "path": "src/main/java/org/elasticsearch/action/support/master/info/TransportClusterInfoAction.java",
          "functionStartLine": 51,
          "functionName": "masterOperation",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,6 +1,6 @@\n @Override\n-protected final Response masterOperation(Request request, ClusterState state) throws ElasticSearchException {\n+protected final void masterOperation(final Request request, final ClusterState state, final ActionListener\u003cResponse\u003e listener) throws ElasticSearchException {\n     String[] concreteIndices \u003d state.metaData().concreteIndices(request.indices(), request.ignoreIndices(), true);\n     request.indices(concreteIndices);\n-    return doMasterOperation(request, state);\n+    doMasterOperation(request, state, listener);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[request-Request, state-ClusterState]",
            "newValue": "[request-Request(modifiers-final), state-ClusterState(modifiers-final), listener-ActionListener\u003cResponse\u003e(modifiers-final)]"
          }
        }
      ]
    },
    "dc0d81b8aac03af962e895381406f312565fd358": {
      "type": "Yintroduced",
      "commitMessage": "Improves the way the get mapping and get warmer get their data from the master\u0027s cluster state copy.\n\nBoth apis now also support a `local` parameter, that fetches the mapping / warmer from the cluster state of the node that received the request. The `type` option in the get mapping api now also support wildcards. The warmer api now also support the `type` option.\n\nCloses #3171\n",
      "commitDate": "2013/6/13 上午3:03",
      "commitName": "dc0d81b8aac03af962e895381406f312565fd358",
      "commitAuthor": "Martijn van Groningen",
      "diff": "@@ -0,0 +1,6 @@\n+@Override\n+protected final Response masterOperation(Request request, ClusterState state) throws ElasticSearchException {\n+    String[] concreteIndices \u003d state.metaData().concreteIndices(request.indices(), request.ignoreIndices(), true);\n+    request.indices(concreteIndices);\n+    return doMasterOperation(request, state);\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\nprotected final Response masterOperation(Request request, ClusterState state) throws ElasticSearchException {\n    String[] concreteIndices \u003d state.metaData().concreteIndices(request.indices(), request.ignoreIndices(), true);\n    request.indices(concreteIndices);\n    return doMasterOperation(request, state);\n}",
      "path": "src/main/java/org/elasticsearch/action/support/master/info/TransportClusterInfoAction.java",
      "functionStartLine": 49,
      "functionName": "masterOperation",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}