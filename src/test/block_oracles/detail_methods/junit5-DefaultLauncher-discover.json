{
  "origin": "codeshovel",
  "repositoryName": "junit5",
  "repositoryPath": "/Users/franky/Documents/Homework/毕业设计/testcase/junit5/.git",
  "startCommitName": "77cfe71e7f787c59626198e25350545f41e968bd",
  "sourceFileName": "DefaultLauncher.java",
  "functionName": "discover",
  "functionId": "discover___discoveryRequest-LauncherDiscoveryRequest",
  "sourceFilePath": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/DefaultLauncher.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 82,
  "functionEndLine": 85,
  "numCommitsSeen": 273,
  "timeTaken": 1621,
  "changeHistory": [
    "402c756a056e13f5f49634616d87b1333e3c211e",
    "4972eb58d680a30e8fbd1ffb6cdc6477bef83374",
    "4537bec58804c392a8bce296dced0337c8ec1a8d",
    "e273d6681b96509b0bd35916a82fcfada21f18c6",
    "35d4733fea906c6853ef0f12ba4bb86c838d6046",
    "0d96e17fb66ba6e7dc174c5c87a1c4cfc3fade33",
    "a2e588e96c3a763553d764d5c35a44b9eea41d75",
    "57b07e0594875902399805d6e41514f03a4b2f31",
    "961fd47344c55d21907607ec9672df6d4f3d2362",
    "9da25e126d174ba6e6ae02596afa538a7cafe17b",
    "9162134ee3dfc3e80a45d08e32fdbf8ed06e87be",
    "ad553b10b4b2b1a78c9a0c91a6d50ebb1421ff3f",
    "cfed3cac24530762a6a8b99627b17f5b00ac9260",
    "d6b17576a2b7e2d1ba28dbef2430c042ad1b887a",
    "1c6a2598fb0bed05dc746a207ab1057550819bf0",
    "830b6d5976b6db01dad3866cfb3d54c6216b1252",
    "7dc017fd9255ba302736d9ad1ce778f93e77b573",
    "40ea4f270254c3faf95fea9e2a48ecb7a6c47bb8",
    "849e9afba14e3ea2639dfc985b0fd515a991639a",
    "a6a549c084132d2d1c2d7d46a26b47e48cb4f608",
    "49ae3709bdf93aa8c83f5d11476b9c301eb4fc7f",
    "4a34c1bc27a7ad936639a83ad7e34f89add92c4c",
    "1105bef6877be1c036331d5b6d607d5e16c7463b",
    "e1184f5a171d084f33ddca961836b17dabc63165",
    "cecc46dfd9b0dd931bc8625560cdcd9bced45753",
    "a150c7c86dcb16500114a601f76f476c06b0a782",
    "0e097640972835e71a625cdee7a9359089cbec78",
    "623ccd4a73d487ec55e24f8415597910626fd90d",
    "9d0819e13f70c9385836259aabb8077b5240fb2c",
    "2faf053a85fd24cb6f65e7b1258d7c507587866c",
    "8edbcf80166518746080a12cecfddc04f2577351",
    "cdaf66815c7308c9d5a430f08c7bc0d790a80534",
    "2e1ad2e7fc7fbc71b12027f9777bbbd2a7a8667a",
    "cbf97077bae0db71dc3a7cade28c3b00587a8699"
  ],
  "changeHistoryShort": {
    "402c756a056e13f5f49634616d87b1333e3c211e": "Ymultichange(Yparameterchange,Ybodychange)",
    "4972eb58d680a30e8fbd1ffb6cdc6477bef83374": "Yfilerename",
    "4537bec58804c392a8bce296dced0337c8ec1a8d": "Yfilerename",
    "e273d6681b96509b0bd35916a82fcfada21f18c6": "Yfilerename",
    "35d4733fea906c6853ef0f12ba4bb86c838d6046": "Ybodychange",
    "0d96e17fb66ba6e7dc174c5c87a1c4cfc3fade33": "Ymultichange(Yfilerename,Yannotationchange,Ydocchange)",
    "a2e588e96c3a763553d764d5c35a44b9eea41d75": "Yfilerename",
    "57b07e0594875902399805d6e41514f03a4b2f31": "Yparameterchange",
    "961fd47344c55d21907607ec9672df6d4f3d2362": "Ymultichange(Yfilerename,Ybodychange)",
    "9da25e126d174ba6e6ae02596afa538a7cafe17b": "Ybodychange",
    "9162134ee3dfc3e80a45d08e32fdbf8ed06e87be": "Ymultichange(Yparameterchange,Ybodychange,Ydocchange)",
    "ad553b10b4b2b1a78c9a0c91a6d50ebb1421ff3f": "Ymultichange(Yparameterchange,Ydocchange)",
    "cfed3cac24530762a6a8b99627b17f5b00ac9260": "Ydocchange",
    "d6b17576a2b7e2d1ba28dbef2430c042ad1b887a": "Ybodychange",
    "1c6a2598fb0bed05dc746a207ab1057550819bf0": "Ydocchange",
    "830b6d5976b6db01dad3866cfb3d54c6216b1252": "Ybodychange",
    "7dc017fd9255ba302736d9ad1ce778f93e77b573": "Ybodychange",
    "40ea4f270254c3faf95fea9e2a48ecb7a6c47bb8": "Ybodychange",
    "849e9afba14e3ea2639dfc985b0fd515a991639a": "Ybodychange",
    "a6a549c084132d2d1c2d7d46a26b47e48cb4f608": "Ybodychange",
    "49ae3709bdf93aa8c83f5d11476b9c301eb4fc7f": "Ybodychange",
    "4a34c1bc27a7ad936639a83ad7e34f89add92c4c": "Ybodychange",
    "1105bef6877be1c036331d5b6d607d5e16c7463b": "Ybodychange",
    "e1184f5a171d084f33ddca961836b17dabc63165": "Ybodychange",
    "cecc46dfd9b0dd931bc8625560cdcd9bced45753": "Ybodychange",
    "a150c7c86dcb16500114a601f76f476c06b0a782": "Ybodychange",
    "0e097640972835e71a625cdee7a9359089cbec78": "Ybodychange",
    "623ccd4a73d487ec55e24f8415597910626fd90d": "Ybodychange",
    "9d0819e13f70c9385836259aabb8077b5240fb2c": "Ybodychange",
    "2faf053a85fd24cb6f65e7b1258d7c507587866c": "Ybodychange",
    "8edbcf80166518746080a12cecfddc04f2577351": "Ybodychange",
    "cdaf66815c7308c9d5a430f08c7bc0d790a80534": "Yrename",
    "2e1ad2e7fc7fbc71b12027f9777bbbd2a7a8667a": "Ymultichange(Yparameterchange,Ybodychange)",
    "cbf97077bae0db71dc3a7cade28c3b00587a8699": "Yintroduced"
  },
  "changeHistoryDetails": {
    "402c756a056e13f5f49634616d87b1333e3c211e": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Rename TestDiscoveryRequest to LauncherDiscoveryRequest\n",
      "commitDate": "2016/7/1 上午3:53",
      "commitName": "402c756a056e13f5f49634616d87b1333e3c211e",
      "commitAuthor": "Sam Brannen",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Rename TestDiscoveryRequest to LauncherDiscoveryRequest\n",
          "commitDate": "2016/7/1 上午3:53",
          "commitName": "402c756a056e13f5f49634616d87b1333e3c211e",
          "commitAuthor": "Sam Brannen",
          "commitDateOld": "2016/6/20 下午7:43",
          "commitNameOld": "f05183091a62cbbd58df338fc58f599f7994ec74",
          "commitAuthorOld": "JUnit Team",
          "daysBetweenCommits": 10.34,
          "commitsBetweenForRepo": 87,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic TestPlan discover(LauncherDiscoveryRequest discoveryRequest) {\n    Preconditions.notNull(discoveryRequest, \"LauncherDiscoveryRequest must not be null\");\n    return TestPlan.from(discoverRoot(discoveryRequest, \"discovery\").getEngineDescriptors());\n}",
          "path": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/DefaultLauncher.java",
          "functionStartLine": 76,
          "functionName": "discover",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,5 +1,5 @@\n @Override\n-public TestPlan discover(TestDiscoveryRequest discoveryRequest) {\n-    Preconditions.notNull(discoveryRequest, \"TestDiscoveryRequest must not be null\");\n+public TestPlan discover(LauncherDiscoveryRequest discoveryRequest) {\n+    Preconditions.notNull(discoveryRequest, \"LauncherDiscoveryRequest must not be null\");\n     return TestPlan.from(discoverRoot(discoveryRequest, \"discovery\").getEngineDescriptors());\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[discoveryRequest-TestDiscoveryRequest]",
            "newValue": "[discoveryRequest-LauncherDiscoveryRequest]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Rename TestDiscoveryRequest to LauncherDiscoveryRequest\n",
          "commitDate": "2016/7/1 上午3:53",
          "commitName": "402c756a056e13f5f49634616d87b1333e3c211e",
          "commitAuthor": "Sam Brannen",
          "commitDateOld": "2016/6/20 下午7:43",
          "commitNameOld": "f05183091a62cbbd58df338fc58f599f7994ec74",
          "commitAuthorOld": "JUnit Team",
          "daysBetweenCommits": 10.34,
          "commitsBetweenForRepo": 87,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic TestPlan discover(LauncherDiscoveryRequest discoveryRequest) {\n    Preconditions.notNull(discoveryRequest, \"LauncherDiscoveryRequest must not be null\");\n    return TestPlan.from(discoverRoot(discoveryRequest, \"discovery\").getEngineDescriptors());\n}",
          "path": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/DefaultLauncher.java",
          "functionStartLine": 76,
          "functionName": "discover",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,5 +1,5 @@\n @Override\n-public TestPlan discover(TestDiscoveryRequest discoveryRequest) {\n-    Preconditions.notNull(discoveryRequest, \"TestDiscoveryRequest must not be null\");\n+public TestPlan discover(LauncherDiscoveryRequest discoveryRequest) {\n+    Preconditions.notNull(discoveryRequest, \"LauncherDiscoveryRequest must not be null\");\n     return TestPlan.from(discoverRoot(discoveryRequest, \"discovery\").getEngineDescriptors());\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "4972eb58d680a30e8fbd1ffb6cdc6477bef83374": {
      "type": "Yfilerename",
      "commitMessage": "Rename all JUnit 5 artifacts to platform, jupiter, \u0026 vintage\n\nIssue: #286\n",
      "commitDate": "2016/6/20 下午4:59",
      "commitName": "4972eb58d680a30e8fbd1ffb6cdc6477bef83374",
      "commitAuthor": "JUnit Team",
      "commitDateOld": "2016/6/20 上午2:04",
      "commitNameOld": "e5b7300ba40a0420e310d463a63ea4c10cc8d9b9",
      "commitAuthorOld": "Sam Brannen",
      "daysBetweenCommits": 0.62,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic TestPlan discover(TestDiscoveryRequest discoveryRequest) {\n    Preconditions.notNull(discoveryRequest, \"TestDiscoveryRequest must not be null\");\n    return TestPlan.from(discoverRoot(discoveryRequest, \"discovery\").getEngineDescriptors());\n}",
      "path": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/DefaultLauncher.java",
      "functionStartLine": 76,
      "functionName": "discover",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "junit-launcher/src/main/java/org/junit/platform/launcher/core/DefaultLauncher.java",
        "newPath": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/DefaultLauncher.java"
      }
    },
    "4537bec58804c392a8bce296dced0337c8ec1a8d": {
      "type": "Yfilerename",
      "commitMessage": "Rename remaining org.junit.gen5 base packages to org.junit.platform\n\nIssue: #286\n",
      "commitDate": "2016/6/20 上午1:22",
      "commitName": "4537bec58804c392a8bce296dced0337c8ec1a8d",
      "commitAuthor": "JUnit Team",
      "commitDateOld": "2016/6/20 上午12:25",
      "commitNameOld": "4dd821ac0cf681f17f14e1dcd383b10c99104e70",
      "commitAuthorOld": "Sam Brannen",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic TestPlan discover(TestDiscoveryRequest discoveryRequest) {\n    Preconditions.notNull(discoveryRequest, \"TestDiscoveryRequest must not be null\");\n    return TestPlan.from(discoverRoot(discoveryRequest, \"discovery\").getEngineDescriptors());\n}",
      "path": "junit-launcher/src/main/java/org/junit/platform/launcher/core/DefaultLauncher.java",
      "functionStartLine": 76,
      "functionName": "discover",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "junit-launcher/src/main/java/org/junit/gen5/launcher/core/DefaultLauncher.java",
        "newPath": "junit-launcher/src/main/java/org/junit/platform/launcher/core/DefaultLauncher.java"
      }
    },
    "e273d6681b96509b0bd35916a82fcfada21f18c6": {
      "type": "Yfilerename",
      "commitMessage": "Rename launcher.main package to launcher.core\n",
      "commitDate": "2016/6/19 上午5:26",
      "commitName": "e273d6681b96509b0bd35916a82fcfada21f18c6",
      "commitAuthor": "JUnit Team",
      "commitDateOld": "2016/6/19 上午5:19",
      "commitNameOld": "d4fca2b705b1f05312a59e71d37853e15632c437",
      "commitAuthorOld": "Sam Brannen",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic TestPlan discover(TestDiscoveryRequest discoveryRequest) {\n    Preconditions.notNull(discoveryRequest, \"TestDiscoveryRequest must not be null\");\n    return TestPlan.from(discoverRoot(discoveryRequest, \"discovery\").getEngineDescriptors());\n}",
      "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/core/DefaultLauncher.java",
      "functionStartLine": 76,
      "functionName": "discover",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "junit-launcher/src/main/java/org/junit/gen5/launcher/main/DefaultLauncher.java",
        "newPath": "junit-launcher/src/main/java/org/junit/gen5/launcher/core/DefaultLauncher.java"
      }
    },
    "35d4733fea906c6853ef0f12ba4bb86c838d6046": {
      "type": "Ybodychange",
      "commitMessage": "Add missing preconditions in Launcher module\n",
      "commitDate": "2016/6/5 下午9:51",
      "commitName": "35d4733fea906c6853ef0f12ba4bb86c838d6046",
      "commitAuthor": "Sam Brannen",
      "commitDateOld": "2016/6/5 上午2:41",
      "commitNameOld": "c1f6fc7c8a7dbdf120b7447c96c9b81751b8a96b",
      "commitAuthorOld": "Sam Brannen",
      "daysBetweenCommits": 0.8,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic TestPlan discover(TestDiscoveryRequest discoveryRequest) {\n    Preconditions.notNull(discoveryRequest, \"TestDiscoveryRequest must not be null\");\n    return TestPlan.from(discoverRoot(discoveryRequest, \"discovery\").getEngineDescriptors());\n}",
      "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/main/DefaultLauncher.java",
      "functionStartLine": 76,
      "functionName": "discover",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,4 +1,5 @@\n @Override\n public TestPlan discover(TestDiscoveryRequest discoveryRequest) {\n+    Preconditions.notNull(discoveryRequest, \"TestDiscoveryRequest must not be null\");\n     return TestPlan.from(discoverRoot(discoveryRequest, \"discovery\").getEngineDescriptors());\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "0d96e17fb66ba6e7dc174c5c87a1c4cfc3fade33": {
      "type": "Ymultichange(Yfilerename,Yannotationchange,Ydocchange)",
      "commitMessage": "Rename JUnit5Launcher to DefaultLauncher\n\nIssue: #129\n",
      "commitDate": "2016/1/21 上午1:52",
      "commitName": "0d96e17fb66ba6e7dc174c5c87a1c4cfc3fade33",
      "commitAuthor": "Sam Brannen",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "Rename JUnit5Launcher to DefaultLauncher\n\nIssue: #129\n",
          "commitDate": "2016/1/21 上午1:52",
          "commitName": "0d96e17fb66ba6e7dc174c5c87a1c4cfc3fade33",
          "commitAuthor": "Sam Brannen",
          "commitDateOld": "2016/1/21 上午1:47",
          "commitNameOld": "a2e588e96c3a763553d764d5c35a44b9eea41d75",
          "commitAuthorOld": "Johannes Link",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic TestPlan discover(TestDiscoveryRequest discoveryRequest) {\n    return TestPlan.from(discoverRoot(discoveryRequest, \"discovery\").getEngineDescriptors());\n}",
          "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/main/DefaultLauncher.java",
          "functionStartLine": 65,
          "functionName": "discover",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,3 +1,4 @@\n+@Override\n public TestPlan discover(TestDiscoveryRequest discoveryRequest) {\n     return TestPlan.from(discoverRoot(discoveryRequest, \"discovery\").getEngineDescriptors());\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "junit-launcher/src/main/java/org/junit/gen5/launcher/main/JUnit5Launcher.java",
            "newPath": "junit-launcher/src/main/java/org/junit/gen5/launcher/main/DefaultLauncher.java"
          }
        },
        {
          "type": "Yannotationchange",
          "commitMessage": "Rename JUnit5Launcher to DefaultLauncher\n\nIssue: #129\n",
          "commitDate": "2016/1/21 上午1:52",
          "commitName": "0d96e17fb66ba6e7dc174c5c87a1c4cfc3fade33",
          "commitAuthor": "Sam Brannen",
          "commitDateOld": "2016/1/21 上午1:47",
          "commitNameOld": "a2e588e96c3a763553d764d5c35a44b9eea41d75",
          "commitAuthorOld": "Johannes Link",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic TestPlan discover(TestDiscoveryRequest discoveryRequest) {\n    return TestPlan.from(discoverRoot(discoveryRequest, \"discovery\").getEngineDescriptors());\n}",
          "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/main/DefaultLauncher.java",
          "functionStartLine": 65,
          "functionName": "discover",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,3 +1,4 @@\n+@Override\n public TestPlan discover(TestDiscoveryRequest discoveryRequest) {\n     return TestPlan.from(discoverRoot(discoveryRequest, \"discovery\").getEngineDescriptors());\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "",
            "newValue": "@Override"
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Rename JUnit5Launcher to DefaultLauncher\n\nIssue: #129\n",
          "commitDate": "2016/1/21 上午1:52",
          "commitName": "0d96e17fb66ba6e7dc174c5c87a1c4cfc3fade33",
          "commitAuthor": "Sam Brannen",
          "commitDateOld": "2016/1/21 上午1:47",
          "commitNameOld": "a2e588e96c3a763553d764d5c35a44b9eea41d75",
          "commitAuthorOld": "Johannes Link",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic TestPlan discover(TestDiscoveryRequest discoveryRequest) {\n    return TestPlan.from(discoverRoot(discoveryRequest, \"discovery\").getEngineDescriptors());\n}",
          "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/main/DefaultLauncher.java",
          "functionStartLine": 65,
          "functionName": "discover",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,3 +1,4 @@\n+@Override\n public TestPlan discover(TestDiscoveryRequest discoveryRequest) {\n     return TestPlan.from(discoverRoot(discoveryRequest, \"discovery\").getEngineDescriptors());\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Discover tests and build a {@link TestPlan} according to the supplied\n{@link DiscoveryRequest} by querying all registered engines and\ncollecting their results.\n\n@param discoveryRequest the discovery request\n@return a {@code TestPlan} that contains all resolved\n        {@linkplain TestIdentifier identifiers} from all registered engines\n",
            "newValue": ""
          }
        }
      ]
    },
    "a2e588e96c3a763553d764d5c35a44b9eea41d75": {
      "type": "Yfilerename",
      "commitMessage": "Convert Launcher class into an interface\n\nThis commit coverts the existing Launcher class into an interface and\nrenames the existing implementation to JUnit5Launcher.\n\nIn addition, this commit renames DiscoveryRequestBuilder to\nTestDiscoveryRequestBuilder.\n\nIssue: #129\n",
      "commitDate": "2016/1/21 上午1:47",
      "commitName": "a2e588e96c3a763553d764d5c35a44b9eea41d75",
      "commitAuthor": "Johannes Link",
      "commitDateOld": "2016/1/21 上午1:27",
      "commitNameOld": "027bc980ad0a17a6130013aeec068296606bbfef",
      "commitAuthorOld": "Sam Brannen",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public TestPlan discover(TestDiscoveryRequest discoveryRequest) {\n    return TestPlan.from(discoverRoot(discoveryRequest, \"discovery\").getEngineDescriptors());\n}",
      "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/main/JUnit5Launcher.java",
      "functionStartLine": 76,
      "functionName": "discover",
      "functionAnnotation": "",
      "functionDoc": "Discover tests and build a {@link TestPlan} according to the supplied\n{@link DiscoveryRequest} by querying all registered engines and\ncollecting their results.\n\n@param discoveryRequest the discovery request\n@return a {@code TestPlan} that contains all resolved\n        {@linkplain TestIdentifier identifiers} from all registered engines\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "junit-launcher/src/main/java/org/junit/gen5/launcher/main/Launcher.java",
        "newPath": "junit-launcher/src/main/java/org/junit/gen5/launcher/main/JUnit5Launcher.java"
      }
    },
    "57b07e0594875902399805d6e41514f03a4b2f31": {
      "type": "Yparameterchange",
      "commitMessage": "#54: Extracted new interface TestDiscoveryRequest from DiscoveryRequest and adapted usages\n",
      "commitDate": "2016/1/19 下午5:32",
      "commitName": "57b07e0594875902399805d6e41514f03a4b2f31",
      "commitAuthor": "Matthias Merdes",
      "commitDateOld": "2016/1/19 上午12:34",
      "commitNameOld": "961fd47344c55d21907607ec9672df6d4f3d2362",
      "commitAuthorOld": "Stefan Bechtold",
      "daysBetweenCommits": 0.71,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "public TestPlan discover(TestDiscoveryRequest discoveryRequest) {\n    return TestPlan.from(discoverRoot(discoveryRequest, \"discovery\").getEngineDescriptors());\n}",
      "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/main/Launcher.java",
      "functionStartLine": 89,
      "functionName": "discover",
      "functionAnnotation": "",
      "functionDoc": "Discover tests and build a {@link TestPlan} according to the supplied\n{@link DiscoveryRequest} by querying all registered engines and\ncollecting their results.\n\n@param discoveryRequest the discovery request\n@return a {@code TestPlan} that contains all resolved\n        {@linkplain TestIdentifier identifiers} from all registered engines\n",
      "diff": "@@ -1,3 +1,3 @@\n-public TestPlan discover(DiscoveryRequest discoveryRequest) {\n+public TestPlan discover(TestDiscoveryRequest discoveryRequest) {\n     return TestPlan.from(discoverRoot(discoveryRequest, \"discovery\").getEngineDescriptors());\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[discoveryRequest-DiscoveryRequest]",
        "newValue": "[discoveryRequest-TestDiscoveryRequest]"
      }
    },
    "961fd47344c55d21907607ec9672df6d4f3d2362": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "Encapsulate Launcher with its support classes into main package\n\nIssue: #54\n",
      "commitDate": "2016/1/19 上午12:34",
      "commitName": "961fd47344c55d21907607ec9672df6d4f3d2362",
      "commitAuthor": "Stefan Bechtold",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "Encapsulate Launcher with its support classes into main package\n\nIssue: #54\n",
          "commitDate": "2016/1/19 上午12:34",
          "commitName": "961fd47344c55d21907607ec9672df6d4f3d2362",
          "commitAuthor": "Stefan Bechtold",
          "commitDateOld": "2016/1/18 下午11:56",
          "commitNameOld": "93397066597b7ca8af35a77b9559bdc079d4f5d5",
          "commitAuthorOld": "Stefan Bechtold",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public TestPlan discover(DiscoveryRequest discoveryRequest) {\n    return TestPlan.from(discoverRoot(discoveryRequest, \"discovery\").getEngineDescriptors());\n}",
          "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/main/Launcher.java",
          "functionStartLine": 92,
          "functionName": "discover",
          "functionAnnotation": "",
          "functionDoc": "Discover tests and build a {@link TestPlan} according to the supplied\n{@link DiscoveryRequest} by querying all registered engines and\ncollecting their results.\n\n@param discoveryRequest the discovery request\n@return a {@code TestPlan} that contains all resolved\n        {@linkplain TestIdentifier identifiers} from all registered engines\n",
          "diff": "@@ -1,3 +1,3 @@\n public TestPlan discover(DiscoveryRequest discoveryRequest) {\n-    return TestPlan.from(discoverRoot(discoveryRequest, \"discovery\"));\n+    return TestPlan.from(discoverRoot(discoveryRequest, \"discovery\").getEngineDescriptors());\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java",
            "newPath": "junit-launcher/src/main/java/org/junit/gen5/launcher/main/Launcher.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Encapsulate Launcher with its support classes into main package\n\nIssue: #54\n",
          "commitDate": "2016/1/19 上午12:34",
          "commitName": "961fd47344c55d21907607ec9672df6d4f3d2362",
          "commitAuthor": "Stefan Bechtold",
          "commitDateOld": "2016/1/18 下午11:56",
          "commitNameOld": "93397066597b7ca8af35a77b9559bdc079d4f5d5",
          "commitAuthorOld": "Stefan Bechtold",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public TestPlan discover(DiscoveryRequest discoveryRequest) {\n    return TestPlan.from(discoverRoot(discoveryRequest, \"discovery\").getEngineDescriptors());\n}",
          "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/main/Launcher.java",
          "functionStartLine": 92,
          "functionName": "discover",
          "functionAnnotation": "",
          "functionDoc": "Discover tests and build a {@link TestPlan} according to the supplied\n{@link DiscoveryRequest} by querying all registered engines and\ncollecting their results.\n\n@param discoveryRequest the discovery request\n@return a {@code TestPlan} that contains all resolved\n        {@linkplain TestIdentifier identifiers} from all registered engines\n",
          "diff": "@@ -1,3 +1,3 @@\n public TestPlan discover(DiscoveryRequest discoveryRequest) {\n-    return TestPlan.from(discoverRoot(discoveryRequest, \"discovery\"));\n+    return TestPlan.from(discoverRoot(discoveryRequest, \"discovery\").getEngineDescriptors());\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "9da25e126d174ba6e6ae02596afa538a7cafe17b": {
      "type": "Ybodychange",
      "commitMessage": "Remove RootTestDescriptor node from TestPlan\n\nIssue: #54\n",
      "commitDate": "2016/1/18 下午10:57",
      "commitName": "9da25e126d174ba6e6ae02596afa538a7cafe17b",
      "commitAuthor": "Marc Philipp",
      "commitDateOld": "2016/1/18 下午12:10",
      "commitNameOld": "9162134ee3dfc3e80a45d08e32fdbf8ed06e87be",
      "commitAuthorOld": "Stefan Bechtold",
      "daysBetweenCommits": 0.45,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "actualSource": "public TestPlan discover(DiscoveryRequest discoveryRequest) {\n    return TestPlan.from(discoverRoot(discoveryRequest, \"discovery\"));\n}",
      "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java",
      "functionStartLine": 88,
      "functionName": "discover",
      "functionAnnotation": "",
      "functionDoc": "Discover tests and build a {@link TestPlan} according to the supplied\n{@link DiscoveryRequest} by querying all registered engines and\ncollecting their results.\n\n@param discoveryRequest the discovery request\n@return a {@code TestPlan} that contains all resolved\n        {@linkplain TestIdentifier identifiers} from all registered engines\n",
      "diff": "@@ -1,3 +1,3 @@\n public TestPlan discover(DiscoveryRequest discoveryRequest) {\n-    return TestPlan.from(discoverRootDescriptor(discoveryRequest, \"discovery\"));\n+    return TestPlan.from(discoverRoot(discoveryRequest, \"discovery\"));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9162134ee3dfc3e80a45d08e32fdbf8ed06e87be": {
      "type": "Ymultichange(Yparameterchange,Ybodychange,Ydocchange)",
      "commitMessage": "Provide better names for the test plan specification\n\n- Replaced all occurrences of specification with discovery request\n- Replaced all occurrences of specification element with selector\n- Renamed package \"org.junit.gen5.engine.specification\"\n             into \"org.junit.gen5.engine.discoveryrequest\"\n\nIssue: #116\n",
      "commitDate": "2016/1/18 下午12:10",
      "commitName": "9162134ee3dfc3e80a45d08e32fdbf8ed06e87be",
      "commitAuthor": "Stefan Bechtold",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Provide better names for the test plan specification\n\n- Replaced all occurrences of specification with discovery request\n- Replaced all occurrences of specification element with selector\n- Renamed package \"org.junit.gen5.engine.specification\"\n             into \"org.junit.gen5.engine.discoveryrequest\"\n\nIssue: #116\n",
          "commitDate": "2016/1/18 下午12:10",
          "commitName": "9162134ee3dfc3e80a45d08e32fdbf8ed06e87be",
          "commitAuthor": "Stefan Bechtold",
          "commitDateOld": "2016/1/18 上午11:24",
          "commitNameOld": "82ff8d2c1bf2426f25b7ac2d9617fa25a2a312b5",
          "commitAuthorOld": "Stefan Bechtold",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public TestPlan discover(DiscoveryRequest discoveryRequest) {\n    return TestPlan.from(discoverRootDescriptor(discoveryRequest, \"discovery\"));\n}",
          "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java",
          "functionStartLine": 82,
          "functionName": "discover",
          "functionAnnotation": "",
          "functionDoc": "Discover tests and build a {@link TestPlan} according to the supplied\n{@link DiscoveryRequest} by querying all registered engines and\ncollecting their results.\n\n@param discoveryRequest the discovery request\n@return a {@code TestPlan} that contains all resolved\n        {@linkplain TestIdentifier identifiers} from all registered engines\n",
          "diff": "@@ -1,3 +1,3 @@\n-public TestPlan discover(DiscoveryRequest specification) {\n-    return TestPlan.from(discoverRootDescriptor(specification, \"discovery\"));\n+public TestPlan discover(DiscoveryRequest discoveryRequest) {\n+    return TestPlan.from(discoverRootDescriptor(discoveryRequest, \"discovery\"));\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[specification-DiscoveryRequest]",
            "newValue": "[discoveryRequest-DiscoveryRequest]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Provide better names for the test plan specification\n\n- Replaced all occurrences of specification with discovery request\n- Replaced all occurrences of specification element with selector\n- Renamed package \"org.junit.gen5.engine.specification\"\n             into \"org.junit.gen5.engine.discoveryrequest\"\n\nIssue: #116\n",
          "commitDate": "2016/1/18 下午12:10",
          "commitName": "9162134ee3dfc3e80a45d08e32fdbf8ed06e87be",
          "commitAuthor": "Stefan Bechtold",
          "commitDateOld": "2016/1/18 上午11:24",
          "commitNameOld": "82ff8d2c1bf2426f25b7ac2d9617fa25a2a312b5",
          "commitAuthorOld": "Stefan Bechtold",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public TestPlan discover(DiscoveryRequest discoveryRequest) {\n    return TestPlan.from(discoverRootDescriptor(discoveryRequest, \"discovery\"));\n}",
          "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java",
          "functionStartLine": 82,
          "functionName": "discover",
          "functionAnnotation": "",
          "functionDoc": "Discover tests and build a {@link TestPlan} according to the supplied\n{@link DiscoveryRequest} by querying all registered engines and\ncollecting their results.\n\n@param discoveryRequest the discovery request\n@return a {@code TestPlan} that contains all resolved\n        {@linkplain TestIdentifier identifiers} from all registered engines\n",
          "diff": "@@ -1,3 +1,3 @@\n-public TestPlan discover(DiscoveryRequest specification) {\n-    return TestPlan.from(discoverRootDescriptor(specification, \"discovery\"));\n+public TestPlan discover(DiscoveryRequest discoveryRequest) {\n+    return TestPlan.from(discoverRootDescriptor(discoveryRequest, \"discovery\"));\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Provide better names for the test plan specification\n\n- Replaced all occurrences of specification with discovery request\n- Replaced all occurrences of specification element with selector\n- Renamed package \"org.junit.gen5.engine.specification\"\n             into \"org.junit.gen5.engine.discoveryrequest\"\n\nIssue: #116\n",
          "commitDate": "2016/1/18 下午12:10",
          "commitName": "9162134ee3dfc3e80a45d08e32fdbf8ed06e87be",
          "commitAuthor": "Stefan Bechtold",
          "commitDateOld": "2016/1/18 上午11:24",
          "commitNameOld": "82ff8d2c1bf2426f25b7ac2d9617fa25a2a312b5",
          "commitAuthorOld": "Stefan Bechtold",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public TestPlan discover(DiscoveryRequest discoveryRequest) {\n    return TestPlan.from(discoverRootDescriptor(discoveryRequest, \"discovery\"));\n}",
          "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java",
          "functionStartLine": 82,
          "functionName": "discover",
          "functionAnnotation": "",
          "functionDoc": "Discover tests and build a {@link TestPlan} according to the supplied\n{@link DiscoveryRequest} by querying all registered engines and\ncollecting their results.\n\n@param discoveryRequest the discovery request\n@return a {@code TestPlan} that contains all resolved\n        {@linkplain TestIdentifier identifiers} from all registered engines\n",
          "diff": "@@ -1,3 +1,3 @@\n-public TestPlan discover(DiscoveryRequest specification) {\n-    return TestPlan.from(discoverRootDescriptor(specification, \"discovery\"));\n+public TestPlan discover(DiscoveryRequest discoveryRequest) {\n+    return TestPlan.from(discoverRootDescriptor(discoveryRequest, \"discovery\"));\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Discover tests and build a {@link TestPlan} according to the supplied\n{@link DiscoveryRequest} by querying all registered engines and\ncollecting their results.\n\n@param specification the specification to be resolved\n@return a {@code TestPlan} that contains all resolved\n{@linkplain TestIdentifier identifiers} from all registered engines\n",
            "newValue": "Discover tests and build a {@link TestPlan} according to the supplied\n{@link DiscoveryRequest} by querying all registered engines and\ncollecting their results.\n\n@param discoveryRequest the discovery request\n@return a {@code TestPlan} that contains all resolved\n        {@linkplain TestIdentifier identifiers} from all registered engines\n"
          }
        }
      ]
    },
    "ad553b10b4b2b1a78c9a0c91a6d50ebb1421ff3f": {
      "type": "Ymultichange(Yparameterchange,Ydocchange)",
      "commitMessage": "Provide better names for the test plan specification\n\n- rename class TestPlanSpecification to DiscoveryRequest\n- rename class TestPlanSpecificationElement to DiscoverySelector\n- rename class TestPlanSpecificationElementVisitor to DiscoverySelectorVisitor\n- rename class TestPlanSpecification to DiscoveryRequest\n\nIssue: #116\n",
      "commitDate": "2016/1/15 下午10:15",
      "commitName": "ad553b10b4b2b1a78c9a0c91a6d50ebb1421ff3f",
      "commitAuthor": "Stefan Bechtold",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Provide better names for the test plan specification\n\n- rename class TestPlanSpecification to DiscoveryRequest\n- rename class TestPlanSpecificationElement to DiscoverySelector\n- rename class TestPlanSpecificationElementVisitor to DiscoverySelectorVisitor\n- rename class TestPlanSpecification to DiscoveryRequest\n\nIssue: #116\n",
          "commitDate": "2016/1/15 下午10:15",
          "commitName": "ad553b10b4b2b1a78c9a0c91a6d50ebb1421ff3f",
          "commitAuthor": "Stefan Bechtold",
          "commitDateOld": "2016/1/15 下午8:37",
          "commitNameOld": "156d244638005cdb0c0e82ee8e6fa987d6092b90",
          "commitAuthorOld": "Stefan Bechtold",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "actualSource": "public TestPlan discover(DiscoveryRequest specification) {\n    return TestPlan.from(discoverRootDescriptor(specification, \"discovery\"));\n}",
          "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java",
          "functionStartLine": 83,
          "functionName": "discover",
          "functionAnnotation": "",
          "functionDoc": "Discover tests and build a {@link TestPlan} according to the supplied\n{@link DiscoveryRequest} by querying all registered engines and\ncollecting their results.\n\n@param specification the specification to be resolved\n@return a {@code TestPlan} that contains all resolved\n{@linkplain TestIdentifier identifiers} from all registered engines\n",
          "diff": "@@ -1,3 +1,3 @@\n-public TestPlan discover(TestPlanSpecification specification) {\n+public TestPlan discover(DiscoveryRequest specification) {\n     return TestPlan.from(discoverRootDescriptor(specification, \"discovery\"));\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[specification-TestPlanSpecification]",
            "newValue": "[specification-DiscoveryRequest]"
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Provide better names for the test plan specification\n\n- rename class TestPlanSpecification to DiscoveryRequest\n- rename class TestPlanSpecificationElement to DiscoverySelector\n- rename class TestPlanSpecificationElementVisitor to DiscoverySelectorVisitor\n- rename class TestPlanSpecification to DiscoveryRequest\n\nIssue: #116\n",
          "commitDate": "2016/1/15 下午10:15",
          "commitName": "ad553b10b4b2b1a78c9a0c91a6d50ebb1421ff3f",
          "commitAuthor": "Stefan Bechtold",
          "commitDateOld": "2016/1/15 下午8:37",
          "commitNameOld": "156d244638005cdb0c0e82ee8e6fa987d6092b90",
          "commitAuthorOld": "Stefan Bechtold",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "actualSource": "public TestPlan discover(DiscoveryRequest specification) {\n    return TestPlan.from(discoverRootDescriptor(specification, \"discovery\"));\n}",
          "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java",
          "functionStartLine": 83,
          "functionName": "discover",
          "functionAnnotation": "",
          "functionDoc": "Discover tests and build a {@link TestPlan} according to the supplied\n{@link DiscoveryRequest} by querying all registered engines and\ncollecting their results.\n\n@param specification the specification to be resolved\n@return a {@code TestPlan} that contains all resolved\n{@linkplain TestIdentifier identifiers} from all registered engines\n",
          "diff": "@@ -1,3 +1,3 @@\n-public TestPlan discover(TestPlanSpecification specification) {\n+public TestPlan discover(DiscoveryRequest specification) {\n     return TestPlan.from(discoverRootDescriptor(specification, \"discovery\"));\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Discover tests and build a {@link TestPlan} according to the supplied\n{@link TestPlanSpecification} by querying all registered engines and\ncollecting their results.\n\n@param specification the specification to be resolved\n@return a {@code TestPlan} that contains all resolved\n{@linkplain TestIdentifier identifiers} from all registered engines\n",
            "newValue": "Discover tests and build a {@link TestPlan} according to the supplied\n{@link DiscoveryRequest} by querying all registered engines and\ncollecting their results.\n\n@param specification the specification to be resolved\n@return a {@code TestPlan} that contains all resolved\n{@linkplain TestIdentifier identifiers} from all registered engines\n"
          }
        }
      ]
    },
    "cfed3cac24530762a6a8b99627b17f5b00ac9260": {
      "type": "Ydocchange",
      "commitMessage": "Polish Launcher and TestEngineRegistry APIs and Javadoc\n\n------------------------------------------------------------------------\nOn behalf of the community, the JUnit Lambda Team thanks msg systems ag\n(http://www.msg-systems.com) for supporting the JUnit crowdfunding\ncampaign!\n------------------------------------------------------------------------\n",
      "commitDate": "2016/1/4 上午6:11",
      "commitName": "cfed3cac24530762a6a8b99627b17f5b00ac9260",
      "commitAuthor": "Sam Brannen",
      "commitDateOld": "2016/1/4 上午5:36",
      "commitNameOld": "d6b17576a2b7e2d1ba28dbef2430c042ad1b887a",
      "commitAuthorOld": "Sam Brannen",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public TestPlan discover(TestPlanSpecification specification) {\n    return TestPlan.from(discoverRootDescriptor(specification, \"discovery\"));\n}",
      "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java",
      "functionStartLine": 87,
      "functionName": "discover",
      "functionAnnotation": "",
      "functionDoc": "Discover tests and build a {@link TestPlan} according to the supplied\n{@link TestPlanSpecification} by querying all registered engines and\ncollecting their results.\n\n@param specification the specification to be resolved\n@return a {@code TestPlan} that contains all resolved\n{@linkplain TestIdentifier identifiers} from all registered engines\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Discovers a {@link TestPlan} according to a\n{@link TestPlanSpecification} by querying all registered engines and\ncollecting their results.\n\n@param specification the specification to be resolved\n@return the {@code TestPlan} that contains all resolvable\n{@linkplain TestIdentifier identifiers} from all registered engines\n",
        "newValue": "Discover tests and build a {@link TestPlan} according to the supplied\n{@link TestPlanSpecification} by querying all registered engines and\ncollecting their results.\n\n@param specification the specification to be resolved\n@return a {@code TestPlan} that contains all resolved\n{@linkplain TestIdentifier identifiers} from all registered engines\n"
      }
    },
    "d6b17576a2b7e2d1ba28dbef2430c042ad1b887a": {
      "type": "Ybodychange",
      "commitMessage": "Log discovery/execution phase in Launcher.discoverRootDescriptor()\n\nIn order to avoid duplicated, misleading log entries, this commit\nintroduces a new \u0027phase\u0027 parameter in discoverRootDescriptor() so that\nthe seemingly duplicated log entries are discernible from one another.\n\n------------------------------------------------------------------------\nOn behalf of the community, the JUnit Lambda Team thanks msg systems ag\n(http://www.msg-systems.com) for supporting the JUnit crowdfunding\ncampaign!\n------------------------------------------------------------------------\n",
      "commitDate": "2016/1/4 上午5:36",
      "commitName": "d6b17576a2b7e2d1ba28dbef2430c042ad1b887a",
      "commitAuthor": "Sam Brannen",
      "commitDateOld": "2016/1/2 上午2:57",
      "commitNameOld": "a6e3e77eeb01b8e6fdc91be3120c6d07af1b5a91",
      "commitAuthorOld": "Marc Philipp",
      "daysBetweenCommits": 2.11,
      "commitsBetweenForRepo": 60,
      "commitsBetweenForFile": 1,
      "actualSource": "public TestPlan discover(TestPlanSpecification specification) {\n    return TestPlan.from(discoverRootDescriptor(specification, \"discovery\"));\n}",
      "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java",
      "functionStartLine": 86,
      "functionName": "discover",
      "functionAnnotation": "",
      "functionDoc": "Discovers a {@link TestPlan} according to a\n{@link TestPlanSpecification} by querying all registered engines and\ncollecting their results.\n\n@param specification the specification to be resolved\n@return the {@code TestPlan} that contains all resolvable\n{@linkplain TestIdentifier identifiers} from all registered engines\n",
      "diff": "@@ -1,3 +1,3 @@\n public TestPlan discover(TestPlanSpecification specification) {\n-    return TestPlan.from(discoverRootDescriptor(specification));\n+    return TestPlan.from(discoverRootDescriptor(specification, \"discovery\"));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1c6a2598fb0bed05dc746a207ab1057550819bf0": {
      "type": "Ydocchange",
      "commitMessage": "Document Launcher\n\n------------------------------------------------------------------------\nOn behalf of the community, the JUnit Lambda Team thanks Gradleware\n(https://gradle.org) for supporting the JUnit crowdfunding campaign!\n------------------------------------------------------------------------\n",
      "commitDate": "2015/12/21 上午3:23",
      "commitName": "1c6a2598fb0bed05dc746a207ab1057550819bf0",
      "commitAuthor": "Marc Philipp",
      "commitDateOld": "2015/12/18 下午11:59",
      "commitNameOld": "e56fcfc20e3c100cf9e4ed4b142a6a3863c29353",
      "commitAuthorOld": "Marc Philipp",
      "daysBetweenCommits": 2.14,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "actualSource": "public TestPlan discover(TestPlanSpecification specification) {\n    return TestPlan.from(discoverRootDescriptor(specification));\n}",
      "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java",
      "functionStartLine": 86,
      "functionName": "discover",
      "functionAnnotation": "",
      "functionDoc": "Discovers a {@link TestPlan} according to a\n{@link TestPlanSpecification} by querying all registered engines and\ncollecting their results.\n\n@param specification the specification to be resolved\n@return the {@code TestPlan} that contains all resolvable\n{@linkplain TestIdentifier identifiers} from all registered engines\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "Discovers a {@link TestPlan} according to a\n{@link TestPlanSpecification} by querying all registered engines and\ncollecting their results.\n\n@param specification the specification to be resolved\n@return the {@code TestPlan} that contains all resolvable\n{@linkplain TestIdentifier identifiers} from all registered engines\n"
      }
    },
    "830b6d5976b6db01dad3866cfb3d54c6216b1252": {
      "type": "Ybodychange",
      "commitMessage": "Introduce TestIdentifier and use it in TestPlan\n",
      "commitDate": "2015/12/8 下午6:18",
      "commitName": "830b6d5976b6db01dad3866cfb3d54c6216b1252",
      "commitAuthor": "Marc Philipp",
      "commitDateOld": "2015/12/6 下午8:30",
      "commitNameOld": "7dc017fd9255ba302736d9ad1ce778f93e77b573",
      "commitAuthorOld": "Marc Philipp",
      "daysBetweenCommits": 1.91,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "actualSource": "public TestPlan discover(TestPlanSpecification specification) {\n    return TestPlan.from(discoverRootDescriptor(specification));\n}",
      "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java",
      "functionStartLine": 49,
      "functionName": "discover",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,11 +1,3 @@\n public TestPlan discover(TestPlanSpecification specification) {\n-    TestPlan testPlan \u003d new TestPlan();\n-    for (TestEngine testEngine : testEngineRegistry.lookupAllTestEngines()) {\n-        LOG.info(\"Discovering tests in engine \" + testEngine.getId());\n-        TestDescriptor rootTestDescriptor \u003d testEngine.discoverTests(specification);\n-        testPlan.addTestDescriptorForEngine(testEngine, rootTestDescriptor);\n-    }\n-    testPlan.applyFilters(specification);\n-    testPlan.prune();\n-    return testPlan;\n+    return TestPlan.from(discoverRootDescriptor(specification));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7dc017fd9255ba302736d9ad1ce778f93e77b573": {
      "type": "Ybodychange",
      "commitMessage": "#49: Test ExecuteTestsTask with DummyTestEngine\n",
      "commitDate": "2015/12/6 下午8:30",
      "commitName": "7dc017fd9255ba302736d9ad1ce778f93e77b573",
      "commitAuthor": "Marc Philipp",
      "commitDateOld": "2015/12/3 下午8:58",
      "commitNameOld": "40ea4f270254c3faf95fea9e2a48ecb7a6c47bb8",
      "commitAuthorOld": "Stefan Bechtold",
      "daysBetweenCommits": 2.98,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "actualSource": "public TestPlan discover(TestPlanSpecification specification) {\n    TestPlan testPlan \u003d new TestPlan();\n    for (TestEngine testEngine : testEngineRegistry.lookupAllTestEngines()) {\n        LOG.info(\"Discovering tests in engine \" + testEngine.getId());\n        TestDescriptor rootTestDescriptor \u003d testEngine.discoverTests(specification);\n        testPlan.addTestDescriptorForEngine(testEngine, rootTestDescriptor);\n    }\n    testPlan.applyFilters(specification);\n    testPlan.prune();\n    return testPlan;\n}",
      "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java",
      "functionStartLine": 49,
      "functionName": "discover",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,11 +1,11 @@\n public TestPlan discover(TestPlanSpecification specification) {\n     TestPlan testPlan \u003d new TestPlan();\n-    for (TestEngine testEngine : lookupAllTestEngines()) {\n+    for (TestEngine testEngine : testEngineRegistry.lookupAllTestEngines()) {\n         LOG.info(\"Discovering tests in engine \" + testEngine.getId());\n         TestDescriptor rootTestDescriptor \u003d testEngine.discoverTests(specification);\n         testPlan.addTestDescriptorForEngine(testEngine, rootTestDescriptor);\n     }\n     testPlan.applyFilters(specification);\n     testPlan.prune();\n     return testPlan;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "40ea4f270254c3faf95fea9e2a48ecb7a6c47bb8": {
      "type": "Ybodychange",
      "commitMessage": "#29: Refactored the TestEngine API\n- discoveryTests now returns the root testDescriptor and does not take and EngineDescriptor as argument\n- TestPlan holds a mapping for the engines and their corresponding root test descriptor\n",
      "commitDate": "2015/12/3 下午8:58",
      "commitName": "40ea4f270254c3faf95fea9e2a48ecb7a6c47bb8",
      "commitAuthor": "Stefan Bechtold",
      "commitDateOld": "2015/12/3 下午6:42",
      "commitNameOld": "59a0a13262b73c398c05376448aad97e7582384d",
      "commitAuthorOld": "JUnit Team",
      "daysBetweenCommits": 0.09,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "public TestPlan discover(TestPlanSpecification specification) {\n    TestPlan testPlan \u003d new TestPlan();\n    for (TestEngine testEngine : lookupAllTestEngines()) {\n        LOG.info(\"Discovering tests in engine \" + testEngine.getId());\n        TestDescriptor rootTestDescriptor \u003d testEngine.discoverTests(specification);\n        testPlan.addTestDescriptorForEngine(testEngine, rootTestDescriptor);\n    }\n    testPlan.applyFilters(specification);\n    testPlan.prune();\n    return testPlan;\n}",
      "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java",
      "functionStartLine": 37,
      "functionName": "discover",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,11 @@\n public TestPlan discover(TestPlanSpecification specification) {\n     TestPlan testPlan \u003d new TestPlan();\n     for (TestEngine testEngine : lookupAllTestEngines()) {\n         LOG.info(\"Discovering tests in engine \" + testEngine.getId());\n-        EngineDescriptor engineDescriptor \u003d new EngineDescriptor(testEngine);\n-        testEngine.discoverTests(specification, engineDescriptor);\n-        testPlan.addEngineDescriptor(engineDescriptor);\n+        TestDescriptor rootTestDescriptor \u003d testEngine.discoverTests(specification);\n+        testPlan.addTestDescriptorForEngine(testEngine, rootTestDescriptor);\n     }\n     testPlan.applyFilters(specification);\n     testPlan.prune();\n     return testPlan;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "849e9afba14e3ea2639dfc985b0fd515a991639a": {
      "type": "Ybodychange",
      "commitMessage": "Fix typo\n",
      "commitDate": "2015/11/23 上午6:02",
      "commitName": "849e9afba14e3ea2639dfc985b0fd515a991639a",
      "commitAuthor": "Sam Brannen",
      "commitDateOld": "2015/11/23 上午5:22",
      "commitNameOld": "a6a549c084132d2d1c2d7d46a26b47e48cb4f608",
      "commitAuthorOld": "Johannes Link",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public TestPlan discover(TestPlanSpecification specification) {\n    TestPlan testPlan \u003d new TestPlan();\n    for (TestEngine testEngine : lookupAllTestEngines()) {\n        LOG.info(\"Discovering tests in engine \" + testEngine.getId());\n        EngineDescriptor engineDescriptor \u003d new EngineDescriptor(testEngine);\n        testEngine.discoverTests(specification, engineDescriptor);\n        testPlan.addEngineDescriptor(engineDescriptor);\n    }\n    testPlan.applyFilters(specification);\n    testPlan.prune();\n    return testPlan;\n}",
      "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java",
      "functionStartLine": 42,
      "functionName": "discover",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,12 @@\n public TestPlan discover(TestPlanSpecification specification) {\n     TestPlan testPlan \u003d new TestPlan();\n     for (TestEngine testEngine : lookupAllTestEngines()) {\n-        LOG.info(\"Discovering tests in enginge \" + testEngine.getId());\n+        LOG.info(\"Discovering tests in engine \" + testEngine.getId());\n         EngineDescriptor engineDescriptor \u003d new EngineDescriptor(testEngine);\n         testEngine.discoverTests(specification, engineDescriptor);\n         testPlan.addEngineDescriptor(engineDescriptor);\n     }\n     testPlan.applyFilters(specification);\n     testPlan.prune();\n     return testPlan;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a6a549c084132d2d1c2d7d46a26b47e48cb4f608": {
      "type": "Ybodychange",
      "commitMessage": "Introducing logging in Launcher\n",
      "commitDate": "2015/11/23 上午5:22",
      "commitName": "a6a549c084132d2d1c2d7d46a26b47e48cb4f608",
      "commitAuthor": "Johannes Link",
      "commitDateOld": "2015/11/23 上午4:58",
      "commitNameOld": "5bb440e06279fd20c98ea617c245141307390274",
      "commitAuthorOld": "Johannes Link",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public TestPlan discover(TestPlanSpecification specification) {\n    TestPlan testPlan \u003d new TestPlan();\n    for (TestEngine testEngine : lookupAllTestEngines()) {\n        LOG.info(\"Discovering tests in enginge \" + testEngine.getId());\n        EngineDescriptor engineDescriptor \u003d new EngineDescriptor(testEngine);\n        testEngine.discoverTests(specification, engineDescriptor);\n        testPlan.addEngineDescriptor(engineDescriptor);\n    }\n    testPlan.applyFilters(specification);\n    testPlan.prune();\n    return testPlan;\n}",
      "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java",
      "functionStartLine": 42,
      "functionName": "discover",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,11 +1,12 @@\n public TestPlan discover(TestPlanSpecification specification) {\n     TestPlan testPlan \u003d new TestPlan();\n     for (TestEngine testEngine : lookupAllTestEngines()) {\n+        LOG.info(\"Discovering tests in enginge \" + testEngine.getId());\n         EngineDescriptor engineDescriptor \u003d new EngineDescriptor(testEngine);\n         testEngine.discoverTests(specification, engineDescriptor);\n         testPlan.addEngineDescriptor(engineDescriptor);\n     }\n     testPlan.applyFilters(specification);\n     testPlan.prune();\n     return testPlan;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "49ae3709bdf93aa8c83f5d11476b9c301eb4fc7f": {
      "type": "Ybodychange",
      "commitMessage": "Everything works again. Resolver is still more complicated than necessary.\n",
      "commitDate": "2015/11/9 下午10:50",
      "commitName": "49ae3709bdf93aa8c83f5d11476b9c301eb4fc7f",
      "commitAuthor": "Johannes Link",
      "commitDateOld": "2015/11/9 下午7:11",
      "commitNameOld": "4a34c1bc27a7ad936639a83ad7e34f89add92c4c",
      "commitAuthorOld": "Johannes Link",
      "daysBetweenCommits": 0.15,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public TestPlan discover(TestPlanSpecification specification) {\n    TestPlan testPlan \u003d new TestPlan();\n    for (TestEngine testEngine : lookupAllTestEngines()) {\n        EngineDescriptor engineDescriptor \u003d new EngineDescriptor(testEngine);\n        testEngine.discoverTests(specification, engineDescriptor);\n        testPlan.addEngineDescriptor(engineDescriptor);\n    }\n    testPlan.applyFilters(specification);\n    testPlan.prune();\n    return testPlan;\n}",
      "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java",
      "functionStartLine": 37,
      "functionName": "discover",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,11 +1,11 @@\n public TestPlan discover(TestPlanSpecification specification) {\n     TestPlan testPlan \u003d new TestPlan();\n     for (TestEngine testEngine : lookupAllTestEngines()) {\n         EngineDescriptor engineDescriptor \u003d new EngineDescriptor(testEngine);\n         testEngine.discoverTests(specification, engineDescriptor);\n-        applyFiltersToEngineDescriptor(specification, engineDescriptor);\n-        pruneEngineDescriptor(engineDescriptor);\n         testPlan.addEngineDescriptor(engineDescriptor);\n     }\n+    testPlan.applyFilters(specification);\n+    testPlan.prune();\n     return testPlan;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "4a34c1bc27a7ad936639a83ad7e34f89add92c4c": {
      "type": "Ybodychange",
      "commitMessage": "changed TestEngine interface to only use engineDescriptor.addChild an no more return values.\ncompiles, but lots of tests failing\n",
      "commitDate": "2015/11/9 下午7:11",
      "commitName": "4a34c1bc27a7ad936639a83ad7e34f89add92c4c",
      "commitAuthor": "Johannes Link",
      "commitDateOld": "2015/11/8 下午5:46",
      "commitNameOld": "1105bef6877be1c036331d5b6d607d5e16c7463b",
      "commitAuthorOld": "Johannes Link",
      "daysBetweenCommits": 1.06,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "public TestPlan discover(TestPlanSpecification specification) {\n    TestPlan testPlan \u003d new TestPlan();\n    for (TestEngine testEngine : lookupAllTestEngines()) {\n        EngineDescriptor engineDescriptor \u003d new EngineDescriptor(testEngine);\n        testEngine.discoverTests(specification, engineDescriptor);\n        applyFiltersToEngineDescriptor(specification, engineDescriptor);\n        pruneEngineDescriptor(engineDescriptor);\n        testPlan.addEngineDescriptor(engineDescriptor);\n    }\n    return testPlan;\n}",
      "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java",
      "functionStartLine": 37,
      "functionName": "discover",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,14 +1,11 @@\n public TestPlan discover(TestPlanSpecification specification) {\n     TestPlan testPlan \u003d new TestPlan();\n     for (TestEngine testEngine : lookupAllTestEngines()) {\n         EngineDescriptor engineDescriptor \u003d new EngineDescriptor(testEngine);\n-        Collection\u003cTestDescriptor\u003e testDescriptors \u003d testEngine.discoverTests(specification, engineDescriptor);\n-        if (!testDescriptors.isEmpty()) {\n-            Set\u003cTestDescriptor\u003e descriptorCandidates \u003d findFilteredCandidates(specification, testDescriptors);\n-            descriptorCandidates.add(engineDescriptor);\n-            Set\u003cTestDescriptor\u003e prunedDescriptors \u003d pruneAllWithoutConcreteTests(descriptorCandidates);\n-            testPlan.addTestDescriptors(prunedDescriptors);\n-        }\n+        testEngine.discoverTests(specification, engineDescriptor);\n+        applyFiltersToEngineDescriptor(specification, engineDescriptor);\n+        pruneEngineDescriptor(engineDescriptor);\n+        testPlan.addEngineDescriptor(engineDescriptor);\n     }\n     return testPlan;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1105bef6877be1c036331d5b6d607d5e16c7463b": {
      "type": "Ybodychange",
      "commitMessage": "Added lost registration of engineDescriptor after filtering\n",
      "commitDate": "2015/11/8 下午5:46",
      "commitName": "1105bef6877be1c036331d5b6d607d5e16c7463b",
      "commitAuthor": "Johannes Link",
      "commitDateOld": "2015/11/8 下午2:31",
      "commitNameOld": "e1184f5a171d084f33ddca961836b17dabc63165",
      "commitAuthorOld": "Johannes Link",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "public TestPlan discover(TestPlanSpecification specification) {\n    TestPlan testPlan \u003d new TestPlan();\n    for (TestEngine testEngine : lookupAllTestEngines()) {\n        EngineDescriptor engineDescriptor \u003d new EngineDescriptor(testEngine);\n        Collection\u003cTestDescriptor\u003e testDescriptors \u003d testEngine.discoverTests(specification, engineDescriptor);\n        if (!testDescriptors.isEmpty()) {\n            Set\u003cTestDescriptor\u003e descriptorCandidates \u003d findFilteredCandidates(specification, testDescriptors);\n            descriptorCandidates.add(engineDescriptor);\n            Set\u003cTestDescriptor\u003e prunedDescriptors \u003d pruneAllWithoutConcreteTests(descriptorCandidates);\n            testPlan.addTestDescriptors(prunedDescriptors);\n        }\n    }\n    return testPlan;\n}",
      "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java",
      "functionStartLine": 41,
      "functionName": "discover",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,13 +1,14 @@\n public TestPlan discover(TestPlanSpecification specification) {\n     TestPlan testPlan \u003d new TestPlan();\n     for (TestEngine testEngine : lookupAllTestEngines()) {\n         EngineDescriptor engineDescriptor \u003d new EngineDescriptor(testEngine);\n         Collection\u003cTestDescriptor\u003e testDescriptors \u003d testEngine.discoverTests(specification, engineDescriptor);\n         if (!testDescriptors.isEmpty()) {\n             Set\u003cTestDescriptor\u003e descriptorCandidates \u003d findFilteredCandidates(specification, testDescriptors);\n+            descriptorCandidates.add(engineDescriptor);\n             Set\u003cTestDescriptor\u003e prunedDescriptors \u003d pruneAllWithoutConcreteTests(descriptorCandidates);\n             testPlan.addTestDescriptors(prunedDescriptors);\n         }\n     }\n     return testPlan;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e1184f5a171d084f33ddca961836b17dabc63165": {
      "type": "Ybodychange",
      "commitMessage": "Fixed tree build in JUnit5\n",
      "commitDate": "2015/11/8 下午2:31",
      "commitName": "e1184f5a171d084f33ddca961836b17dabc63165",
      "commitAuthor": "Johannes Link",
      "commitDateOld": "2015/11/8 上午5:58",
      "commitNameOld": "cecc46dfd9b0dd931bc8625560cdcd9bced45753",
      "commitAuthorOld": "Johannes Link",
      "daysBetweenCommits": 0.36,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public TestPlan discover(TestPlanSpecification specification) {\n    TestPlan testPlan \u003d new TestPlan();\n    for (TestEngine testEngine : lookupAllTestEngines()) {\n        EngineDescriptor engineDescriptor \u003d new EngineDescriptor(testEngine);\n        Collection\u003cTestDescriptor\u003e testDescriptors \u003d testEngine.discoverTests(specification, engineDescriptor);\n        if (!testDescriptors.isEmpty()) {\n            Set\u003cTestDescriptor\u003e descriptorCandidates \u003d findFilteredCandidates(specification, testDescriptors);\n            Set\u003cTestDescriptor\u003e prunedDescriptors \u003d pruneAllWithoutConcreteTests(descriptorCandidates);\n            testPlan.addTestDescriptors(prunedDescriptors);\n        }\n    }\n    return testPlan;\n}",
      "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java",
      "functionStartLine": 41,
      "functionName": "discover",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,13 +1,13 @@\n public TestPlan discover(TestPlanSpecification specification) {\n     TestPlan testPlan \u003d new TestPlan();\n     for (TestEngine testEngine : lookupAllTestEngines()) {\n         EngineDescriptor engineDescriptor \u003d new EngineDescriptor(testEngine);\n         Collection\u003cTestDescriptor\u003e testDescriptors \u003d testEngine.discoverTests(specification, engineDescriptor);\n         if (!testDescriptors.isEmpty()) {\n             Set\u003cTestDescriptor\u003e descriptorCandidates \u003d findFilteredCandidates(specification, testDescriptors);\n-            Set\u003cTestDescriptor\u003e descriptorsWithConcreteTests \u003d filterWithoutConcreteTests(descriptorCandidates);\n-            testPlan.addTestDescriptors(descriptorsWithConcreteTests);\n+            Set\u003cTestDescriptor\u003e prunedDescriptors \u003d pruneAllWithoutConcreteTests(descriptorCandidates);\n+            testPlan.addTestDescriptors(prunedDescriptors);\n         }\n     }\n     return testPlan;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "cecc46dfd9b0dd931bc8625560cdcd9bced45753": {
      "type": "Ybodychange",
      "commitMessage": "tag filtering basically works. still some strange reporting in IntelliJ test runner.\n",
      "commitDate": "2015/11/8 上午5:58",
      "commitName": "cecc46dfd9b0dd931bc8625560cdcd9bced45753",
      "commitAuthor": "Johannes Link",
      "commitDateOld": "2015/11/4 下午11:28",
      "commitNameOld": "a150c7c86dcb16500114a601f76f476c06b0a782",
      "commitAuthorOld": "Johannes Link",
      "daysBetweenCommits": 3.27,
      "commitsBetweenForRepo": 49,
      "commitsBetweenForFile": 1,
      "actualSource": "public TestPlan discover(TestPlanSpecification specification) {\n    TestPlan testPlan \u003d new TestPlan();\n    for (TestEngine testEngine : lookupAllTestEngines()) {\n        EngineDescriptor engineDescriptor \u003d new EngineDescriptor(testEngine);\n        Collection\u003cTestDescriptor\u003e testDescriptors \u003d testEngine.discoverTests(specification, engineDescriptor);\n        if (!testDescriptors.isEmpty()) {\n            Set\u003cTestDescriptor\u003e descriptorCandidates \u003d findFilteredCandidates(specification, testDescriptors);\n            Set\u003cTestDescriptor\u003e descriptorsWithConcreteTests \u003d filterWithoutConcreteTests(descriptorCandidates);\n            testPlan.addTestDescriptors(descriptorsWithConcreteTests);\n        }\n    }\n    return testPlan;\n}",
      "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java",
      "functionStartLine": 41,
      "functionName": "discover",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,13 @@\n public TestPlan discover(TestPlanSpecification specification) {\n     TestPlan testPlan \u003d new TestPlan();\n     for (TestEngine testEngine : lookupAllTestEngines()) {\n         EngineDescriptor engineDescriptor \u003d new EngineDescriptor(testEngine);\n         Collection\u003cTestDescriptor\u003e testDescriptors \u003d testEngine.discoverTests(specification, engineDescriptor);\n         if (!testDescriptors.isEmpty()) {\n-            testPlan.addTestDescriptor(engineDescriptor);\n-            testPlan.addTestDescriptors(testDescriptors);\n+            Set\u003cTestDescriptor\u003e descriptorCandidates \u003d findFilteredCandidates(specification, testDescriptors);\n+            Set\u003cTestDescriptor\u003e descriptorsWithConcreteTests \u003d filterWithoutConcreteTests(descriptorCandidates);\n+            testPlan.addTestDescriptors(descriptorsWithConcreteTests);\n         }\n     }\n     return testPlan;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a150c7c86dcb16500114a601f76f476c06b0a782": {
      "type": "Ybodychange",
      "commitMessage": "resolver can resolve nested classes\n",
      "commitDate": "2015/11/4 下午11:28",
      "commitName": "a150c7c86dcb16500114a601f76f476c06b0a782",
      "commitAuthor": "Johannes Link",
      "commitDateOld": "2015/11/3 下午5:46",
      "commitNameOld": "0e097640972835e71a625cdee7a9359089cbec78",
      "commitAuthorOld": "Marc Philipp",
      "daysBetweenCommits": 1.24,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "actualSource": "public TestPlan discover(TestPlanSpecification specification) {\n    TestPlan testPlan \u003d new TestPlan();\n    for (TestEngine testEngine : lookupAllTestEngines()) {\n        EngineDescriptor engineDescriptor \u003d new EngineDescriptor(testEngine);\n        Collection\u003cTestDescriptor\u003e testDescriptors \u003d testEngine.discoverTests(specification, engineDescriptor);\n        if (!testDescriptors.isEmpty()) {\n            testPlan.addTestDescriptor(engineDescriptor);\n            testPlan.addTestDescriptors(testDescriptors);\n        }\n    }\n    return testPlan;\n}",
      "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java",
      "functionStartLine": 38,
      "functionName": "discover",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,12 @@\n public TestPlan discover(TestPlanSpecification specification) {\n     TestPlan testPlan \u003d new TestPlan();\n     for (TestEngine testEngine : lookupAllTestEngines()) {\n-        TestDescriptor engineDescriptor \u003d new EngineDescriptor(testEngine);\n+        EngineDescriptor engineDescriptor \u003d new EngineDescriptor(testEngine);\n         Collection\u003cTestDescriptor\u003e testDescriptors \u003d testEngine.discoverTests(specification, engineDescriptor);\n         if (!testDescriptors.isEmpty()) {\n             testPlan.addTestDescriptor(engineDescriptor);\n             testPlan.addTestDescriptors(testDescriptors);\n         }\n     }\n     return testPlan;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "0e097640972835e71a625cdee7a9359089cbec78": {
      "type": "Ybodychange",
      "commitMessage": "Only add TestDescriptor for engine if non-empty\n\nEmpty Engine nodes confuse Eclipse so much, it\nnever finishes its progress bar.\n",
      "commitDate": "2015/11/3 下午5:46",
      "commitName": "0e097640972835e71a625cdee7a9359089cbec78",
      "commitAuthor": "Marc Philipp",
      "commitDateOld": "2015/10/31 下午7:28",
      "commitNameOld": "623ccd4a73d487ec55e24f8415597910626fd90d",
      "commitAuthorOld": "Johannes Link",
      "daysBetweenCommits": 2.93,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "actualSource": "public TestPlan discover(TestPlanSpecification specification) {\n    TestPlan testPlan \u003d new TestPlan();\n    for (TestEngine testEngine : lookupAllTestEngines()) {\n        TestDescriptor engineDescriptor \u003d new EngineDescriptor(testEngine);\n        Collection\u003cTestDescriptor\u003e testDescriptors \u003d testEngine.discoverTests(specification, engineDescriptor);\n        if (!testDescriptors.isEmpty()) {\n            testPlan.addTestDescriptor(engineDescriptor);\n            testPlan.addTestDescriptors(testDescriptors);\n        }\n    }\n    return testPlan;\n}",
      "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java",
      "functionStartLine": 38,
      "functionName": "discover",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,12 @@\n public TestPlan discover(TestPlanSpecification specification) {\n     TestPlan testPlan \u003d new TestPlan();\n     for (TestEngine testEngine : lookupAllTestEngines()) {\n         TestDescriptor engineDescriptor \u003d new EngineDescriptor(testEngine);\n-        testPlan.addTestDescriptor(engineDescriptor);\n-        testPlan.addTestDescriptors(testEngine.discoverTests(specification, engineDescriptor));\n+        Collection\u003cTestDescriptor\u003e testDescriptors \u003d testEngine.discoverTests(specification, engineDescriptor);\n+        if (!testDescriptors.isEmpty()) {\n+            testPlan.addTestDescriptor(engineDescriptor);\n+            testPlan.addTestDescriptors(testDescriptors);\n+        }\n     }\n     return testPlan;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "623ccd4a73d487ec55e24f8415597910626fd90d": {
      "type": "Ybodychange",
      "commitMessage": "Reintroduced engine descriptor for all engines to enable test runners separation by engine w/o disecting the unique ID\n",
      "commitDate": "2015/10/31 下午7:28",
      "commitName": "623ccd4a73d487ec55e24f8415597910626fd90d",
      "commitAuthor": "Johannes Link",
      "commitDateOld": "2015/10/31 上午4:41",
      "commitNameOld": "90557f5414831ca924bca50c1591dd348c1c7162",
      "commitAuthorOld": "Marc Philipp",
      "daysBetweenCommits": 0.62,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "public TestPlan discover(TestPlanSpecification specification) {\n    TestPlan testPlan \u003d new TestPlan();\n    for (TestEngine testEngine : lookupAllTestEngines()) {\n        TestDescriptor engineDescriptor \u003d new EngineDescriptor(testEngine);\n        testPlan.addTestDescriptor(engineDescriptor);\n        testPlan.addTestDescriptors(testEngine.discoverTests(specification, engineDescriptor));\n    }\n    return testPlan;\n}",
      "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java",
      "functionStartLine": 37,
      "functionName": "discover",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,7 +1,9 @@\n public TestPlan discover(TestPlanSpecification specification) {\n     TestPlan testPlan \u003d new TestPlan();\n     for (TestEngine testEngine : lookupAllTestEngines()) {\n-        testPlan.addTestDescriptors(testEngine.discoverTests(specification));\n+        TestDescriptor engineDescriptor \u003d new EngineDescriptor(testEngine);\n+        testPlan.addTestDescriptor(engineDescriptor);\n+        testPlan.addTestDescriptors(testEngine.discoverTests(specification, engineDescriptor));\n     }\n     return testPlan;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9d0819e13f70c9385836259aabb8077b5240fb2c": {
      "type": "Ybodychange",
      "commitMessage": "Introduced TestExecutionNode for each TestDescriptor\n",
      "commitDate": "2015/10/30 下午11:12",
      "commitName": "9d0819e13f70c9385836259aabb8077b5240fb2c",
      "commitAuthor": "Stefan Bechtold",
      "commitDateOld": "2015/10/30 下午6:08",
      "commitNameOld": "5b99f734253c15189a88cd5704ec30ded2f24694",
      "commitAuthorOld": "Stefan Bechtold",
      "daysBetweenCommits": 0.21,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "actualSource": "public TestPlan discover(TestPlanSpecification specification) {\n    TestPlan testPlan \u003d new TestPlan();\n    for (TestEngine testEngine : lookupAllTestEngines()) {\n        testPlan.addTestDescriptors(testEngine.discoverTests(specification));\n    }\n    return testPlan;\n}",
      "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java",
      "functionStartLine": 36,
      "functionName": "discover",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,7 @@\n public TestPlan discover(TestPlanSpecification specification) {\n     TestPlan testPlan \u003d new TestPlan();\n     for (TestEngine testEngine : lookupAllTestEngines()) {\n-        TestDescriptor engineDescriptor \u003d testEngine.createEngineDescriptor();\n-        testPlan.addTestDescriptor(engineDescriptor);\n-        testPlan.addTestDescriptors(testEngine.discoverTests(specification, engineDescriptor));\n+        testPlan.addTestDescriptors(testEngine.discoverTests(specification));\n     }\n     return testPlan;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2faf053a85fd24cb6f65e7b1258d7c507587866c": {
      "type": "Ybodychange",
      "commitMessage": "Rename methods to be more specific\n",
      "commitDate": "2015/10/30 下午5:54",
      "commitName": "2faf053a85fd24cb6f65e7b1258d7c507587866c",
      "commitAuthor": "Marc Philipp",
      "commitDateOld": "2015/10/30 下午5:34",
      "commitNameOld": "b9a89c31681f519fcbe2c0ec5ce474f97aec5240",
      "commitAuthorOld": "Marc Philipp",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public TestPlan discover(TestPlanSpecification specification) {\n    TestPlan testPlan \u003d new TestPlan();\n    for (TestEngine testEngine : lookupAllTestEngines()) {\n        TestDescriptor engineDescriptor \u003d testEngine.createEngineDescriptor();\n        testPlan.addTestDescriptor(engineDescriptor);\n        testPlan.addTestDescriptors(testEngine.discoverTests(specification, engineDescriptor));\n    }\n    return testPlan;\n}",
      "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java",
      "functionStartLine": 35,
      "functionName": "discover",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,9 @@\n public TestPlan discover(TestPlanSpecification specification) {\n     TestPlan testPlan \u003d new TestPlan();\n     for (TestEngine testEngine : lookupAllTestEngines()) {\n         TestDescriptor engineDescriptor \u003d testEngine.createEngineDescriptor();\n-        testPlan.addTest(engineDescriptor);\n-        testPlan.addTests(testEngine.discoverTests(specification, engineDescriptor));\n+        testPlan.addTestDescriptor(engineDescriptor);\n+        testPlan.addTestDescriptors(testEngine.discoverTests(specification, engineDescriptor));\n     }\n     return testPlan;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "8edbcf80166518746080a12cecfddc04f2577351": {
      "type": "Ybodychange",
      "commitMessage": "Introduced EngineDescriptor as root for all test descriptors\n",
      "commitDate": "2015/10/29 下午11:10",
      "commitName": "8edbcf80166518746080a12cecfddc04f2577351",
      "commitAuthor": "Johannes Link",
      "commitDateOld": "2015/10/29 下午9:23",
      "commitNameOld": "487bbff85f6651921a4c4a3520a9e315b0f2b381",
      "commitAuthorOld": "Marc Philipp",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "public TestPlan discover(TestPlanSpecification specification) {\n    TestPlan testPlan \u003d new TestPlan();\n    for (TestEngine testEngine : lookupAllTestEngines()) {\n        TestDescriptor engineDescriptor \u003d testEngine.createEngineDescriptor();\n        testPlan.addTest(engineDescriptor);\n        testPlan.addTests(testEngine.discoverTests(specification, engineDescriptor));\n    }\n    return testPlan;\n}",
      "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java",
      "functionStartLine": 35,
      "functionName": "discover",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,7 +1,9 @@\n public TestPlan discover(TestPlanSpecification specification) {\n     TestPlan testPlan \u003d new TestPlan();\n     for (TestEngine testEngine : lookupAllTestEngines()) {\n-        testPlan.addTests(testEngine.discoverTests(specification));\n+        TestDescriptor engineDescriptor \u003d testEngine.createEngineDescriptor();\n+        testPlan.addTest(engineDescriptor);\n+        testPlan.addTests(testEngine.discoverTests(specification, engineDescriptor));\n     }\n     return testPlan;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "cdaf66815c7308c9d5a430f08c7bc0d790a80534": {
      "type": "Yrename",
      "commitMessage": "Launcher API umgebaut\n",
      "commitDate": "2015/10/28 下午9:24",
      "commitName": "cdaf66815c7308c9d5a430f08c7bc0d790a80534",
      "commitAuthor": "Johannes Link",
      "commitDateOld": "2015/10/28 下午7:12",
      "commitNameOld": "62a0ab3e60e4a1c62c806934158444f901d8e22c",
      "commitAuthorOld": "Sam Brannen",
      "daysBetweenCommits": 0.09,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "public TestPlan discover(TestPlanSpecification specification) {\n    TestPlan testPlan \u003d new TestPlan();\n    for (TestEngine testEngine : lookupAllTestEngines()) {\n        testPlan.addTests(testEngine.discoverTests(specification));\n    }\n    return testPlan;\n}",
      "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java",
      "functionStartLine": 24,
      "functionName": "discover",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,7 +1,7 @@\n-public TestPlan createTestPlanWithConfiguration(TestPlanSpecification specification) {\n+public TestPlan discover(TestPlanSpecification specification) {\n     TestPlan testPlan \u003d new TestPlan();\n     for (TestEngine testEngine : lookupAllTestEngines()) {\n         testPlan.addTests(testEngine.discoverTests(specification));\n     }\n     return testPlan;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "createTestPlanWithConfiguration",
        "newValue": "discover"
      }
    },
    "2e1ad2e7fc7fbc71b12027f9777bbbd2a7a8667a": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Rename TestPlanConfiguration to TestPlanSpecification\n",
      "commitDate": "2015/10/28 下午6:19",
      "commitName": "2e1ad2e7fc7fbc71b12027f9777bbbd2a7a8667a",
      "commitAuthor": "Marc Philipp",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Rename TestPlanConfiguration to TestPlanSpecification\n",
          "commitDate": "2015/10/28 下午6:19",
          "commitName": "2e1ad2e7fc7fbc71b12027f9777bbbd2a7a8667a",
          "commitAuthor": "Marc Philipp",
          "commitDateOld": "2015/10/28 下午5:23",
          "commitNameOld": "db7c029008a0fab7fb6770078c1b54a175c35c6c",
          "commitAuthorOld": "Marc Philipp",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public TestPlan createTestPlanWithConfiguration(TestPlanSpecification specification) {\n    TestPlan testPlan \u003d new TestPlan();\n    for (TestEngine testEngine : lookupAllTestEngines()) {\n        testPlan.addTests(testEngine.discoverTests(specification));\n    }\n    return testPlan;\n}",
          "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java",
          "functionStartLine": 17,
          "functionName": "createTestPlanWithConfiguration",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,7 +1,7 @@\n-public TestPlan createTestPlanWithConfiguration(TestPlanConfiguration configuration) {\n+public TestPlan createTestPlanWithConfiguration(TestPlanSpecification specification) {\n     TestPlan testPlan \u003d new TestPlan();\n     for (TestEngine testEngine : lookupAllTestEngines()) {\n-        testPlan.addTests(testEngine.discoverTests(configuration));\n+        testPlan.addTests(testEngine.discoverTests(specification));\n     }\n     return testPlan;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[configuration-TestPlanConfiguration]",
            "newValue": "[specification-TestPlanSpecification]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Rename TestPlanConfiguration to TestPlanSpecification\n",
          "commitDate": "2015/10/28 下午6:19",
          "commitName": "2e1ad2e7fc7fbc71b12027f9777bbbd2a7a8667a",
          "commitAuthor": "Marc Philipp",
          "commitDateOld": "2015/10/28 下午5:23",
          "commitNameOld": "db7c029008a0fab7fb6770078c1b54a175c35c6c",
          "commitAuthorOld": "Marc Philipp",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public TestPlan createTestPlanWithConfiguration(TestPlanSpecification specification) {\n    TestPlan testPlan \u003d new TestPlan();\n    for (TestEngine testEngine : lookupAllTestEngines()) {\n        testPlan.addTests(testEngine.discoverTests(specification));\n    }\n    return testPlan;\n}",
          "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java",
          "functionStartLine": 17,
          "functionName": "createTestPlanWithConfiguration",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,7 +1,7 @@\n-public TestPlan createTestPlanWithConfiguration(TestPlanConfiguration configuration) {\n+public TestPlan createTestPlanWithConfiguration(TestPlanSpecification specification) {\n     TestPlan testPlan \u003d new TestPlan();\n     for (TestEngine testEngine : lookupAllTestEngines()) {\n-        testPlan.addTests(testEngine.discoverTests(configuration));\n+        testPlan.addTests(testEngine.discoverTests(specification));\n     }\n     return testPlan;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "cbf97077bae0db71dc3a7cade28c3b00587a8699": {
      "type": "Yintroduced",
      "commitMessage": "Refactoring to focus implementation of the JUnit framework internals:\n- Removed serializable objects for inter-process communication with tool-integrators\n- Supported different ways to generate test descriptors from configuration\n- Moved Console Launcher (main) to Sample Project\n- Introduced ReflectionUtils for common reflection tasks\n- Added TestListener interface with two implementations\n- Updated the Engine interface to work with TestDescriptors only\n",
      "commitDate": "2015/10/28 下午5:23",
      "commitName": "cbf97077bae0db71dc3a7cade28c3b00587a8699",
      "commitAuthor": "Stefan Bechtold",
      "diff": "@@ -0,0 +1,7 @@\n+public TestPlan createTestPlanWithConfiguration(TestPlanConfiguration configuration) {\n+    TestPlan testPlan \u003d new TestPlan();\n+    for (TestEngine testEngine : lookupAllTestEngines()) {\n+        testPlan.addTests(testEngine.discoverTests(configuration));\n+    }\n+    return testPlan;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public TestPlan createTestPlanWithConfiguration(TestPlanConfiguration configuration) {\n    TestPlan testPlan \u003d new TestPlan();\n    for (TestEngine testEngine : lookupAllTestEngines()) {\n        testPlan.addTests(testEngine.discoverTests(configuration));\n    }\n    return testPlan;\n}",
      "path": "junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java",
      "functionStartLine": 13,
      "functionName": "createTestPlanWithConfiguration",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}