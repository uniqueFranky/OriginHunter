{
  "origin": "codeshovel",
  "repositoryName": "mockito",
  "repositoryPath": "/Users/franky/Documents/Homework/毕业设计/testcase/mockito/.git",
  "startCommitName": "077562ea54f1fa87ff8dd233c3060ddbf0f1ce26",
  "sourceFileName": "ReturnsArgumentAt.java",
  "functionName": "answer",
  "functionId": "answer___invocation-InvocationOnMock",
  "sourceFilePath": "src/main/java/org/mockito/internal/stubbing/answers/ReturnsArgumentAt.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 53,
  "functionEndLine": 65,
  "numCommitsSeen": 15,
  "timeTaken": 1143,
  "changeHistory": [
    "761de40d05b4eddae8328ab1d7e5bdacd882a3be",
    "1d285102bb01150f6399604aa900bd3f3365e4e7",
    "a4391ac09aa2d8ac38ceaa569667bb9e617756df",
    "fe7bbabb82ce3d1000c13d39d6355c134e94ac27",
    "5a2415278e865ac0becfcbaf8626d4f0c3b17a70",
    "4b81c5d36e1ab63412c9a55d982cf5c6df238dab",
    "dda1c41ea0fe96abfe62bb1bfd1e1d51d2c5c509",
    "5490d9b2fc7814bc4c1efe5a66f05ce5874d38bc",
    "ae7ad39c99ea7ffecd84c1453aa26f44846f066a"
  ],
  "changeHistoryShort": {
    "761de40d05b4eddae8328ab1d7e5bdacd882a3be": "Ybodychange",
    "1d285102bb01150f6399604aa900bd3f3365e4e7": "Ymultichange(Ybodychange,Yannotationchange)",
    "a4391ac09aa2d8ac38ceaa569667bb9e617756df": "Ybodychange",
    "fe7bbabb82ce3d1000c13d39d6355c134e94ac27": "Yfilerename",
    "5a2415278e865ac0becfcbaf8626d4f0c3b17a70": "Yfilerename",
    "4b81c5d36e1ab63412c9a55d982cf5c6df238dab": "Ymultichange(Yfilerename,Ybodychange)",
    "dda1c41ea0fe96abfe62bb1bfd1e1d51d2c5c509": "Ybodychange",
    "5490d9b2fc7814bc4c1efe5a66f05ce5874d38bc": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange,Yannotationchange)",
    "ae7ad39c99ea7ffecd84c1453aa26f44846f066a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "761de40d05b4eddae8328ab1d7e5bdacd882a3be": {
      "type": "Ybodychange",
      "commitMessage": "Fix validation in returnArgumentAt(int) in case of type erasure on the parameter (#1076)\n\n* Fixed #1071 / returnArgumentAt(int) The validation of the returnable\r\ntype works now for generic parameters.\r\n\r\nThe parameter type inference takes now the type of the actual instance\r\ninto account to avoid type erasure issues in case the parameter is\r\ngeneric.\r\n\r\n* Fixed very important checkstyle twhitespace \u0026 linebreak at eof issues\r\n\r\n* fixed intendation and import issues\r\n",
      "commitDate": "2017/5/11 上午2:03",
      "commitName": "761de40d05b4eddae8328ab1d7e5bdacd882a3be",
      "commitAuthor": "Christian Schwarz",
      "commitDateOld": "2017/1/4 下午9:40",
      "commitNameOld": "1d285102bb01150f6399604aa900bd3f3365e4e7",
      "commitAuthorOld": "Brice Dutheil",
      "daysBetweenCommits": 126.18,
      "commitsBetweenForRepo": 264,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic Object answer(InvocationOnMock invocation) throws Throwable {\n    int argumentPosition \u003d inferWantedArgumentPosition(invocation);\n    validateIndexWithinInvocationRange(invocation, argumentPosition);\n    if (wantedArgIndexIsVarargAndSameTypeAsReturnType(invocation.getMethod(), argumentPosition)) {\n        return ((Invocation) invocation).getRawArguments()[argumentPosition];\n    }\n    return invocation.getArgument(argumentPosition);\n}",
      "path": "src/main/java/org/mockito/internal/stubbing/answers/ReturnsArgumentAt.java",
      "functionStartLine": 53,
      "functionName": "answer",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,9 @@\n @Override\n public Object answer(InvocationOnMock invocation) throws Throwable {\n     int argumentPosition \u003d inferWantedArgumentPosition(invocation);\n     validateIndexWithinInvocationRange(invocation, argumentPosition);\n     if (wantedArgIndexIsVarargAndSameTypeAsReturnType(invocation.getMethod(), argumentPosition)) {\n         return ((Invocation) invocation).getRawArguments()[argumentPosition];\n-    } else {\n-        return invocation.getArgument(argumentPosition);\n     }\n+    return invocation.getArgument(argumentPosition);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1d285102bb01150f6399604aa900bd3f3365e4e7": {
      "type": "Ymultichange(Ybodychange,Yannotationchange)",
      "commitMessage": "Fixes #820 ReturnsArgAt to handle returning vararg as arrays\n\nSigned-off-by: Brice Dutheil \u003cbrice.dutheil@gmail.com\u003e\n",
      "commitDate": "2017/1/4 下午9:40",
      "commitName": "1d285102bb01150f6399604aa900bd3f3365e4e7",
      "commitAuthor": "Brice Dutheil",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Fixes #820 ReturnsArgAt to handle returning vararg as arrays\n\nSigned-off-by: Brice Dutheil \u003cbrice.dutheil@gmail.com\u003e\n",
          "commitDate": "2017/1/4 下午9:40",
          "commitName": "1d285102bb01150f6399604aa900bd3f3365e4e7",
          "commitAuthor": "Brice Dutheil",
          "commitDateOld": "2016/12/19 下午9:35",
          "commitNameOld": "126308910d3a88db5ba701a55cb5178201105cdc",
          "commitAuthorOld": "Brice Dutheil",
          "daysBetweenCommits": 16.0,
          "commitsBetweenForRepo": 69,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic Object answer(InvocationOnMock invocation) throws Throwable {\n    int argumentPosition \u003d inferWantedArgumentPosition(invocation);\n    validateIndexWithinInvocationRange(invocation, argumentPosition);\n    if (wantedArgIndexIsVarargAndSameTypeAsReturnType(invocation.getMethod(), argumentPosition)) {\n        return ((Invocation) invocation).getRawArguments()[argumentPosition];\n    } else {\n        return invocation.getArgument(argumentPosition);\n    }\n}",
          "path": "src/main/java/org/mockito/internal/stubbing/answers/ReturnsArgumentAt.java",
          "functionStartLine": 46,
          "functionName": "answer",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,4 +1,10 @@\n+@Override\n public Object answer(InvocationOnMock invocation) throws Throwable {\n-    validateIndexWithinInvocationRange(invocation);\n-    return invocation.getArgument(actualArgumentPosition(invocation));\n+    int argumentPosition \u003d inferWantedArgumentPosition(invocation);\n+    validateIndexWithinInvocationRange(invocation, argumentPosition);\n+    if (wantedArgIndexIsVarargAndSameTypeAsReturnType(invocation.getMethod(), argumentPosition)) {\n+        return ((Invocation) invocation).getRawArguments()[argumentPosition];\n+    } else {\n+        return invocation.getArgument(argumentPosition);\n+    }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yannotationchange",
          "commitMessage": "Fixes #820 ReturnsArgAt to handle returning vararg as arrays\n\nSigned-off-by: Brice Dutheil \u003cbrice.dutheil@gmail.com\u003e\n",
          "commitDate": "2017/1/4 下午9:40",
          "commitName": "1d285102bb01150f6399604aa900bd3f3365e4e7",
          "commitAuthor": "Brice Dutheil",
          "commitDateOld": "2016/12/19 下午9:35",
          "commitNameOld": "126308910d3a88db5ba701a55cb5178201105cdc",
          "commitAuthorOld": "Brice Dutheil",
          "daysBetweenCommits": 16.0,
          "commitsBetweenForRepo": 69,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic Object answer(InvocationOnMock invocation) throws Throwable {\n    int argumentPosition \u003d inferWantedArgumentPosition(invocation);\n    validateIndexWithinInvocationRange(invocation, argumentPosition);\n    if (wantedArgIndexIsVarargAndSameTypeAsReturnType(invocation.getMethod(), argumentPosition)) {\n        return ((Invocation) invocation).getRawArguments()[argumentPosition];\n    } else {\n        return invocation.getArgument(argumentPosition);\n    }\n}",
          "path": "src/main/java/org/mockito/internal/stubbing/answers/ReturnsArgumentAt.java",
          "functionStartLine": 46,
          "functionName": "answer",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,4 +1,10 @@\n+@Override\n public Object answer(InvocationOnMock invocation) throws Throwable {\n-    validateIndexWithinInvocationRange(invocation);\n-    return invocation.getArgument(actualArgumentPosition(invocation));\n+    int argumentPosition \u003d inferWantedArgumentPosition(invocation);\n+    validateIndexWithinInvocationRange(invocation, argumentPosition);\n+    if (wantedArgIndexIsVarargAndSameTypeAsReturnType(invocation.getMethod(), argumentPosition)) {\n+        return ((Invocation) invocation).getRawArguments()[argumentPosition];\n+    } else {\n+        return invocation.getArgument(argumentPosition);\n+    }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "",
            "newValue": "@Override"
          }
        }
      ]
    },
    "a4391ac09aa2d8ac38ceaa569667bb9e617756df": {
      "type": "Ybodychange",
      "commitMessage": "Fixes #365 introduced \u0027T getArgument(int)\u0027\u0027 and deprecated  \u0027T getArgumentAt(int,Class\u003cT\u003e)\u0027 in type InvocationOnMock.\n",
      "commitDate": "2016/3/12 上午4:48",
      "commitName": "a4391ac09aa2d8ac38ceaa569667bb9e617756df",
      "commitAuthor": "Christian Schwarz",
      "commitDateOld": "2015/7/9 下午12:42",
      "commitNameOld": "fe7bbabb82ce3d1000c13d39d6355c134e94ac27",
      "commitAuthorOld": "Szczepan Faber",
      "daysBetweenCommits": 246.67,
      "commitsBetweenForRepo": 111,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object answer(InvocationOnMock invocation) throws Throwable {\n    validateIndexWithinInvocationRange(invocation);\n    return invocation.getArgument(actualArgumentPosition(invocation));\n}",
      "path": "src/main/java/org/mockito/internal/stubbing/answers/ReturnsArgumentAt.java",
      "functionStartLine": 40,
      "functionName": "answer",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,4 +1,4 @@\n public Object answer(InvocationOnMock invocation) throws Throwable {\n     validateIndexWithinInvocationRange(invocation);\n-    return invocation.getArguments()[actualArgumentPosition(invocation)];\n+    return invocation.getArgument(actualArgumentPosition(invocation));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "fe7bbabb82ce3d1000c13d39d6355c134e94ac27": {
      "type": "Yfilerename",
      "commitMessage": "Moved sources to standard location\n\nLet\u0027s make the project be as close as possible to standard, conventional project for better clarity\n",
      "commitDate": "2015/7/9 下午12:42",
      "commitName": "fe7bbabb82ce3d1000c13d39d6355c134e94ac27",
      "commitAuthor": "Szczepan Faber",
      "commitDateOld": "2015/7/9 上午12:16",
      "commitNameOld": "9d3124ae8768ec9fb60ff5b8a176b060491f9770",
      "commitAuthorOld": "Szczepan Faber",
      "daysBetweenCommits": 0.52,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object answer(InvocationOnMock invocation) throws Throwable {\n    validateIndexWithinInvocationRange(invocation);\n    return invocation.getArguments()[actualArgumentPosition(invocation)];\n}",
      "path": "src/main/java/org/mockito/internal/stubbing/answers/ReturnsArgumentAt.java",
      "functionStartLine": 40,
      "functionName": "answer",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/org/mockito/internal/stubbing/answers/ReturnsArgumentAt.java",
        "newPath": "src/main/java/org/mockito/internal/stubbing/answers/ReturnsArgumentAt.java"
      }
    },
    "5a2415278e865ac0becfcbaf8626d4f0c3b17a70": {
      "type": "Yfilerename",
      "commitMessage": "Make additional answers internal, and expose them via AdditionalAnswers. Renaming returnsArgAtPosition to returnsArgAt\n\n--HG--\nrename : src/org/mockito/stubbing/answers/ReturnsArgumentAt.java \u003d\u003e src/org/mockito/internal/stubbing/answers/ReturnsArgumentAt.java\nrename : src/org/mockito/stubbing/answers/ReturnsElementsOf.java \u003d\u003e src/org/mockito/internal/stubbing/answers/ReturnsElementsOf.java\nrename : test/org/mockito/stubbing/answers/ReturnsArgumentAtTest.java \u003d\u003e test/org/mockito/internal/stubbing/answers/ReturnsArgumentAtTest.java\n",
      "commitDate": "2012/5/1 下午10:30",
      "commitName": "5a2415278e865ac0becfcbaf8626d4f0c3b17a70",
      "commitAuthor": "Brice Dutheil",
      "commitDateOld": "2012/4/16 上午5:16",
      "commitNameOld": "d883cda4d1e73664c623042d283b637990f6cc0d",
      "commitAuthorOld": "Szczepan Faber",
      "daysBetweenCommits": 15.72,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object answer(InvocationOnMock invocation) throws Throwable {\n    validateIndexWithinInvocationRange(invocation);\n    return invocation.getArguments()[actualArgumentPosition(invocation)];\n}",
      "path": "src/org/mockito/internal/stubbing/answers/ReturnsArgumentAt.java",
      "functionStartLine": 36,
      "functionName": "answer",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/org/mockito/stubbing/answers/ReturnsArgumentAt.java",
        "newPath": "src/org/mockito/internal/stubbing/answers/ReturnsArgumentAt.java"
      }
    },
    "4b81c5d36e1ab63412c9a55d982cf5c6df238dab": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "Renamed ReturnsIdentity by ReturnsArgumentAt\n\n--HG--\nrename : src/org/mockito/stubbing/answers/ReturnsIdentity.java \u003d\u003e src/org/mockito/stubbing/answers/ReturnsArgumentAt.java\nrename : test/org/mockito/stubbing/answers/ReturnsIdentityTest.java \u003d\u003e test/org/mockito/stubbing/answers/ReturnsArgumentAtTest.java\n",
      "commitDate": "2012/4/8 下午8:28",
      "commitName": "4b81c5d36e1ab63412c9a55d982cf5c6df238dab",
      "commitAuthor": "Brice Dutheil",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "Renamed ReturnsIdentity by ReturnsArgumentAt\n\n--HG--\nrename : src/org/mockito/stubbing/answers/ReturnsIdentity.java \u003d\u003e src/org/mockito/stubbing/answers/ReturnsArgumentAt.java\nrename : test/org/mockito/stubbing/answers/ReturnsIdentityTest.java \u003d\u003e test/org/mockito/stubbing/answers/ReturnsArgumentAtTest.java\n",
          "commitDate": "2012/4/8 下午8:28",
          "commitName": "4b81c5d36e1ab63412c9a55d982cf5c6df238dab",
          "commitAuthor": "Brice Dutheil",
          "commitDateOld": "2012/4/5 上午3:31",
          "commitNameOld": "93b572cf4e791e891eae691c7af6fc40b981ef16",
          "commitAuthorOld": "Brice Dutheil",
          "daysBetweenCommits": 3.71,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Object answer(InvocationOnMock invocation) throws Throwable {\n    validateIndexWithinInvocationRange(invocation);\n    return invocation.getArguments()[actualArgumentPosition(invocation)];\n}",
          "path": "src/org/mockito/stubbing/answers/ReturnsArgumentAt.java",
          "functionStartLine": 36,
          "functionName": "answer",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,4 +1,4 @@\n public Object answer(InvocationOnMock invocation) throws Throwable {\n     validateIndexWithinInvocationRange(invocation);\n-    return invocation.getArguments()[actualArgumentIndex(invocation)];\n+    return invocation.getArguments()[actualArgumentPosition(invocation)];\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/org/mockito/stubbing/answers/ReturnsIdentity.java",
            "newPath": "src/org/mockito/stubbing/answers/ReturnsArgumentAt.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Renamed ReturnsIdentity by ReturnsArgumentAt\n\n--HG--\nrename : src/org/mockito/stubbing/answers/ReturnsIdentity.java \u003d\u003e src/org/mockito/stubbing/answers/ReturnsArgumentAt.java\nrename : test/org/mockito/stubbing/answers/ReturnsIdentityTest.java \u003d\u003e test/org/mockito/stubbing/answers/ReturnsArgumentAtTest.java\n",
          "commitDate": "2012/4/8 下午8:28",
          "commitName": "4b81c5d36e1ab63412c9a55d982cf5c6df238dab",
          "commitAuthor": "Brice Dutheil",
          "commitDateOld": "2012/4/5 上午3:31",
          "commitNameOld": "93b572cf4e791e891eae691c7af6fc40b981ef16",
          "commitAuthorOld": "Brice Dutheil",
          "daysBetweenCommits": 3.71,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Object answer(InvocationOnMock invocation) throws Throwable {\n    validateIndexWithinInvocationRange(invocation);\n    return invocation.getArguments()[actualArgumentPosition(invocation)];\n}",
          "path": "src/org/mockito/stubbing/answers/ReturnsArgumentAt.java",
          "functionStartLine": 36,
          "functionName": "answer",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,4 +1,4 @@\n public Object answer(InvocationOnMock invocation) throws Throwable {\n     validateIndexWithinInvocationRange(invocation);\n-    return invocation.getArguments()[actualArgumentIndex(invocation)];\n+    return invocation.getArguments()[actualArgumentPosition(invocation)];\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "dda1c41ea0fe96abfe62bb1bfd1e1d51d2c5c509": {
      "type": "Ybodychange",
      "commitMessage": "Added reporting on answer misuse. Plus some more use cases.\n\n--HG--\nrename : src/org/mockito/internal/util/ArrayUtils.java \u003d\u003e src/org/mockito/internal/util/collections/ArrayUtils.java\n",
      "commitDate": "2012/4/4 下午11:59",
      "commitName": "dda1c41ea0fe96abfe62bb1bfd1e1d51d2c5c509",
      "commitAuthor": "Brice Dutheil",
      "commitDateOld": "2012/4/4 下午6:53",
      "commitNameOld": "5490d9b2fc7814bc4c1efe5a66f05ce5874d38bc",
      "commitAuthorOld": "Brice Dutheil",
      "daysBetweenCommits": 0.21,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object answer(InvocationOnMock invocation) throws Throwable {\n    validateIndexWithinInvocationRange(invocation);\n    return invocation.getArguments()[actualArgumentIndex(invocation)];\n}",
      "path": "src/org/mockito/stubbing/answers/ReturnsIdentity.java",
      "functionStartLine": 35,
      "functionName": "answer",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,3 +1,4 @@\n public Object answer(InvocationOnMock invocation) throws Throwable {\n-    return willReturnLastArg() ? lastArgumentOf(invocation) : argumentIndexOf(invocation);\n+    validateIndexWithinInvocationRange(invocation);\n+    return invocation.getArguments()[actualArgumentIndex(invocation)];\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5490d9b2fc7814bc4c1efe5a66f05ce5874d38bc": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange,Yannotationchange)",
      "commitMessage": "Refactoring a bit the patch of Eric, added AdditionalAnswers as a placeholder for future answers.\n\n--HG--\nrename : src/org/mockito/stubbing/answers/IdentityAnswers.java \u003d\u003e src/org/mockito/stubbing/answers/ReturnsIdentity.java\nrename : test/org/mockito/stubbing/answers/IdentityAnswersTest.java \u003d\u003e test/org/mockito/stubbing/answers/ReturnsIdentityTest.java\n",
      "commitDate": "2012/4/4 下午6:53",
      "commitName": "5490d9b2fc7814bc4c1efe5a66f05ce5874d38bc",
      "commitAuthor": "Brice Dutheil",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Refactoring a bit the patch of Eric, added AdditionalAnswers as a placeholder for future answers.\n\n--HG--\nrename : src/org/mockito/stubbing/answers/IdentityAnswers.java \u003d\u003e src/org/mockito/stubbing/answers/ReturnsIdentity.java\nrename : test/org/mockito/stubbing/answers/IdentityAnswersTest.java \u003d\u003e test/org/mockito/stubbing/answers/ReturnsIdentityTest.java\n",
          "commitDate": "2012/4/4 下午6:53",
          "commitName": "5490d9b2fc7814bc4c1efe5a66f05ce5874d38bc",
          "commitAuthor": "Brice Dutheil",
          "commitDateOld": "2012/3/8 上午5:31",
          "commitNameOld": "ae7ad39c99ea7ffecd84c1453aa26f44846f066a",
          "commitAuthorOld": "Eric Lefevre-Ardant",
          "daysBetweenCommits": 27.56,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Object answer(InvocationOnMock invocation) throws Throwable {\n    return willReturnLastArg() ? lastArgumentOf(invocation) : argumentIndexOf(invocation);\n}",
          "path": "src/org/mockito/stubbing/answers/ReturnsIdentity.java",
          "functionStartLine": 35,
          "functionName": "answer",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,6 +1,3 @@\n-@SuppressWarnings(\"unchecked\")\n-@Override\n-public T answer(InvocationOnMock invocation) throws Throwable {\n-    int actualIndex \u003d (index \u003d\u003d -1) ? invocation.getArguments().length - 1 : index;\n-    return (T) invocation.getArguments()[actualIndex];\n+public Object answer(InvocationOnMock invocation) throws Throwable {\n+    return willReturnLastArg() ? lastArgumentOf(invocation) : argumentIndexOf(invocation);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/org/mockito/stubbing/answers/IdentityAnswers.java",
            "newPath": "src/org/mockito/stubbing/answers/ReturnsIdentity.java",
            "oldMethodName": "answer",
            "newMethodName": "answer"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "Refactoring a bit the patch of Eric, added AdditionalAnswers as a placeholder for future answers.\n\n--HG--\nrename : src/org/mockito/stubbing/answers/IdentityAnswers.java \u003d\u003e src/org/mockito/stubbing/answers/ReturnsIdentity.java\nrename : test/org/mockito/stubbing/answers/IdentityAnswersTest.java \u003d\u003e test/org/mockito/stubbing/answers/ReturnsIdentityTest.java\n",
          "commitDate": "2012/4/4 下午6:53",
          "commitName": "5490d9b2fc7814bc4c1efe5a66f05ce5874d38bc",
          "commitAuthor": "Brice Dutheil",
          "commitDateOld": "2012/3/8 上午5:31",
          "commitNameOld": "ae7ad39c99ea7ffecd84c1453aa26f44846f066a",
          "commitAuthorOld": "Eric Lefevre-Ardant",
          "daysBetweenCommits": 27.56,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Object answer(InvocationOnMock invocation) throws Throwable {\n    return willReturnLastArg() ? lastArgumentOf(invocation) : argumentIndexOf(invocation);\n}",
          "path": "src/org/mockito/stubbing/answers/ReturnsIdentity.java",
          "functionStartLine": 35,
          "functionName": "answer",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,6 +1,3 @@\n-@SuppressWarnings(\"unchecked\")\n-@Override\n-public T answer(InvocationOnMock invocation) throws Throwable {\n-    int actualIndex \u003d (index \u003d\u003d -1) ? invocation.getArguments().length - 1 : index;\n-    return (T) invocation.getArguments()[actualIndex];\n+public Object answer(InvocationOnMock invocation) throws Throwable {\n+    return willReturnLastArg() ? lastArgumentOf(invocation) : argumentIndexOf(invocation);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "T",
            "newValue": "Object"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Refactoring a bit the patch of Eric, added AdditionalAnswers as a placeholder for future answers.\n\n--HG--\nrename : src/org/mockito/stubbing/answers/IdentityAnswers.java \u003d\u003e src/org/mockito/stubbing/answers/ReturnsIdentity.java\nrename : test/org/mockito/stubbing/answers/IdentityAnswersTest.java \u003d\u003e test/org/mockito/stubbing/answers/ReturnsIdentityTest.java\n",
          "commitDate": "2012/4/4 下午6:53",
          "commitName": "5490d9b2fc7814bc4c1efe5a66f05ce5874d38bc",
          "commitAuthor": "Brice Dutheil",
          "commitDateOld": "2012/3/8 上午5:31",
          "commitNameOld": "ae7ad39c99ea7ffecd84c1453aa26f44846f066a",
          "commitAuthorOld": "Eric Lefevre-Ardant",
          "daysBetweenCommits": 27.56,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Object answer(InvocationOnMock invocation) throws Throwable {\n    return willReturnLastArg() ? lastArgumentOf(invocation) : argumentIndexOf(invocation);\n}",
          "path": "src/org/mockito/stubbing/answers/ReturnsIdentity.java",
          "functionStartLine": 35,
          "functionName": "answer",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,6 +1,3 @@\n-@SuppressWarnings(\"unchecked\")\n-@Override\n-public T answer(InvocationOnMock invocation) throws Throwable {\n-    int actualIndex \u003d (index \u003d\u003d -1) ? invocation.getArguments().length - 1 : index;\n-    return (T) invocation.getArguments()[actualIndex];\n+public Object answer(InvocationOnMock invocation) throws Throwable {\n+    return willReturnLastArg() ? lastArgumentOf(invocation) : argumentIndexOf(invocation);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yannotationchange",
          "commitMessage": "Refactoring a bit the patch of Eric, added AdditionalAnswers as a placeholder for future answers.\n\n--HG--\nrename : src/org/mockito/stubbing/answers/IdentityAnswers.java \u003d\u003e src/org/mockito/stubbing/answers/ReturnsIdentity.java\nrename : test/org/mockito/stubbing/answers/IdentityAnswersTest.java \u003d\u003e test/org/mockito/stubbing/answers/ReturnsIdentityTest.java\n",
          "commitDate": "2012/4/4 下午6:53",
          "commitName": "5490d9b2fc7814bc4c1efe5a66f05ce5874d38bc",
          "commitAuthor": "Brice Dutheil",
          "commitDateOld": "2012/3/8 上午5:31",
          "commitNameOld": "ae7ad39c99ea7ffecd84c1453aa26f44846f066a",
          "commitAuthorOld": "Eric Lefevre-Ardant",
          "daysBetweenCommits": 27.56,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Object answer(InvocationOnMock invocation) throws Throwable {\n    return willReturnLastArg() ? lastArgumentOf(invocation) : argumentIndexOf(invocation);\n}",
          "path": "src/org/mockito/stubbing/answers/ReturnsIdentity.java",
          "functionStartLine": 35,
          "functionName": "answer",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,6 +1,3 @@\n-@SuppressWarnings(\"unchecked\")\n-@Override\n-public T answer(InvocationOnMock invocation) throws Throwable {\n-    int actualIndex \u003d (index \u003d\u003d -1) ? invocation.getArguments().length - 1 : index;\n-    return (T) invocation.getArguments()[actualIndex];\n+public Object answer(InvocationOnMock invocation) throws Throwable {\n+    return willReturnLastArg() ? lastArgumentOf(invocation) : argumentIndexOf(invocation);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "@SuppressWarnings(\"unchecked\"),@Override",
            "newValue": ""
          }
        }
      ]
    },
    "ae7ad39c99ea7ffecd84c1453aa26f44846f066a": {
      "type": "Yintroduced",
      "commitMessage": "Helper methods when returning one of the parameters\n\n--HG--\nextra : transplant_source : %2A39%84%21%F4%AB%C4%2A%A5v%0BD%AB8%81%82%3A%C9k\n",
      "commitDate": "2012/3/8 上午5:31",
      "commitName": "ae7ad39c99ea7ffecd84c1453aa26f44846f066a",
      "commitAuthor": "Eric Lefevre-Ardant",
      "diff": "@@ -0,0 +1,4 @@\n+@Override\n+public Object answer(InvocationOnMock invocation) throws Throwable {\n+    return answer.answer(invocation);\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic Object answer(InvocationOnMock invocation) throws Throwable {\n    return answer.answer(invocation);\n}",
      "path": "src/org/mockito/stubbing/answers/IdentityAnswers.java",
      "functionStartLine": 30,
      "functionName": "answer",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}