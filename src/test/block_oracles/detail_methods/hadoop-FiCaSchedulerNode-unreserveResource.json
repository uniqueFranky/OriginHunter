{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/Users/franky/Documents/Homework/毕业设计/testcase/hadoop/.git",
  "startCommitName": "9c3fc3ef2865164aa5f121793ac914cfeb21a181",
  "sourceFileName": "FiCaSchedulerNode.java",
  "functionName": "unreserveResource",
  "functionId": "unreserveResource___application-SchedulerApplicationAttempt",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerNode.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 102,
  "functionEndLine": 125,
  "numCommitsSeen": 37,
  "timeTaken": 6084,
  "changeHistory": [
    "82f3454f5ac1f1c457e668e2cee12b4dcc800ee1",
    "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
    "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76",
    "6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "82f3454f5ac1f1c457e668e2cee12b4dcc800ee1": "Ymultichange(Ybodychange,Yannotationchange)",
    "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f": "Yparameterchange",
    "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
    "6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "82f3454f5ac1f1c457e668e2cee12b4dcc800ee1": {
      "type": "Ymultichange(Ybodychange,Yannotationchange)",
      "commitMessage": "YARN-2017. Merged some of the common scheduler code. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1596753 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2014/5/22 下午1:32",
      "commitName": "82f3454f5ac1f1c457e668e2cee12b4dcc800ee1",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-2017. Merged some of the common scheduler code. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1596753 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2014/5/22 下午1:32",
          "commitName": "82f3454f5ac1f1c457e668e2cee12b4dcc800ee1",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "2014/4/16 上午4:37",
          "commitNameOld": "44b6261bfacddea88a3cf02d406f970bbbb98d04",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 36.37,
          "commitsBetweenForRepo": 202,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic synchronized void unreserveResource(SchedulerApplicationAttempt application) {\n    if (getReservedContainer() !\u003d null \u0026\u0026 getReservedContainer().getContainer() !\u003d null \u0026\u0026 getReservedContainer().getContainer().getId() !\u003d null \u0026\u0026 getReservedContainer().getContainer().getId().getApplicationAttemptId() !\u003d null) {\n        ApplicationAttemptId reservedApplication \u003d getReservedContainer().getContainer().getId().getApplicationAttemptId();\n        if (!reservedApplication.equals(application.getApplicationAttemptId())) {\n            throw new IllegalStateException(\"Trying to unreserve \" + \" for application \" + application.getApplicationAttemptId() + \" when currently reserved \" + \" for application \" + reservedApplication.getApplicationId() + \" on node \" + this);\n        }\n    }\n    setReservedContainer(null);\n}",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerNode.java",
          "functionStartLine": 85,
          "functionName": "unreserveResource",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,9 +1,10 @@\n+@Override\n public synchronized void unreserveResource(SchedulerApplicationAttempt application) {\n-    if (reservedContainer !\u003d null \u0026\u0026 reservedContainer.getContainer() !\u003d null \u0026\u0026 reservedContainer.getContainer().getId() !\u003d null \u0026\u0026 reservedContainer.getContainer().getId().getApplicationAttemptId() !\u003d null) {\n-        ApplicationAttemptId reservedApplication \u003d reservedContainer.getContainer().getId().getApplicationAttemptId();\n+    if (getReservedContainer() !\u003d null \u0026\u0026 getReservedContainer().getContainer() !\u003d null \u0026\u0026 getReservedContainer().getContainer().getId() !\u003d null \u0026\u0026 getReservedContainer().getContainer().getId().getApplicationAttemptId() !\u003d null) {\n+        ApplicationAttemptId reservedApplication \u003d getReservedContainer().getContainer().getId().getApplicationAttemptId();\n         if (!reservedApplication.equals(application.getApplicationAttemptId())) {\n             throw new IllegalStateException(\"Trying to unreserve \" + \" for application \" + application.getApplicationAttemptId() + \" when currently reserved \" + \" for application \" + reservedApplication.getApplicationId() + \" on node \" + this);\n         }\n     }\n-    reservedContainer \u003d null;\n+    setReservedContainer(null);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yannotationchange",
          "commitMessage": "YARN-2017. Merged some of the common scheduler code. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1596753 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2014/5/22 下午1:32",
          "commitName": "82f3454f5ac1f1c457e668e2cee12b4dcc800ee1",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "2014/4/16 上午4:37",
          "commitNameOld": "44b6261bfacddea88a3cf02d406f970bbbb98d04",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 36.37,
          "commitsBetweenForRepo": 202,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic synchronized void unreserveResource(SchedulerApplicationAttempt application) {\n    if (getReservedContainer() !\u003d null \u0026\u0026 getReservedContainer().getContainer() !\u003d null \u0026\u0026 getReservedContainer().getContainer().getId() !\u003d null \u0026\u0026 getReservedContainer().getContainer().getId().getApplicationAttemptId() !\u003d null) {\n        ApplicationAttemptId reservedApplication \u003d getReservedContainer().getContainer().getId().getApplicationAttemptId();\n        if (!reservedApplication.equals(application.getApplicationAttemptId())) {\n            throw new IllegalStateException(\"Trying to unreserve \" + \" for application \" + application.getApplicationAttemptId() + \" when currently reserved \" + \" for application \" + reservedApplication.getApplicationId() + \" on node \" + this);\n        }\n    }\n    setReservedContainer(null);\n}",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerNode.java",
          "functionStartLine": 85,
          "functionName": "unreserveResource",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,9 +1,10 @@\n+@Override\n public synchronized void unreserveResource(SchedulerApplicationAttempt application) {\n-    if (reservedContainer !\u003d null \u0026\u0026 reservedContainer.getContainer() !\u003d null \u0026\u0026 reservedContainer.getContainer().getId() !\u003d null \u0026\u0026 reservedContainer.getContainer().getId().getApplicationAttemptId() !\u003d null) {\n-        ApplicationAttemptId reservedApplication \u003d reservedContainer.getContainer().getId().getApplicationAttemptId();\n+    if (getReservedContainer() !\u003d null \u0026\u0026 getReservedContainer().getContainer() !\u003d null \u0026\u0026 getReservedContainer().getContainer().getId() !\u003d null \u0026\u0026 getReservedContainer().getContainer().getId().getApplicationAttemptId() !\u003d null) {\n+        ApplicationAttemptId reservedApplication \u003d getReservedContainer().getContainer().getId().getApplicationAttemptId();\n         if (!reservedApplication.equals(application.getApplicationAttemptId())) {\n             throw new IllegalStateException(\"Trying to unreserve \" + \" for application \" + application.getApplicationAttemptId() + \" when currently reserved \" + \" for application \" + reservedApplication.getApplicationId() + \" on node \" + this);\n         }\n     }\n-    reservedContainer \u003d null;\n+    setReservedContainer(null);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "",
            "newValue": "@Override"
          }
        }
      ]
    },
    "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f": {
      "type": "Yparameterchange",
      "commitMessage": "YARN-1493. Changed ResourceManager and Scheduler interfacing to recognize app-attempts separately from apps. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1554896 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2014/1/3 上午4:19",
      "commitName": "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "2013/11/6 上午5:23",
      "commitNameOld": "6990355e577ad19371cb656c250fb665ed14062f",
      "commitAuthorOld": "Luke Lu",
      "daysBetweenCommits": 57.96,
      "commitsBetweenForRepo": 320,
      "commitsBetweenForFile": 1,
      "actualSource": "public synchronized void unreserveResource(SchedulerApplicationAttempt application) {\n    if (reservedContainer !\u003d null \u0026\u0026 reservedContainer.getContainer() !\u003d null \u0026\u0026 reservedContainer.getContainer().getId() !\u003d null \u0026\u0026 reservedContainer.getContainer().getId().getApplicationAttemptId() !\u003d null) {\n        ApplicationAttemptId reservedApplication \u003d reservedContainer.getContainer().getId().getApplicationAttemptId();\n        if (!reservedApplication.equals(application.getApplicationAttemptId())) {\n            throw new IllegalStateException(\"Trying to unreserve \" + \" for application \" + application.getApplicationAttemptId() + \" when currently reserved \" + \" for application \" + reservedApplication.getApplicationId() + \" on node \" + this);\n        }\n    }\n    reservedContainer \u003d null;\n}",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerNode.java",
      "functionStartLine": 243,
      "functionName": "unreserveResource",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,9 @@\n-public synchronized void unreserveResource(SchedulerApplication application) {\n+public synchronized void unreserveResource(SchedulerApplicationAttempt application) {\n     if (reservedContainer !\u003d null \u0026\u0026 reservedContainer.getContainer() !\u003d null \u0026\u0026 reservedContainer.getContainer().getId() !\u003d null \u0026\u0026 reservedContainer.getContainer().getId().getApplicationAttemptId() !\u003d null) {\n         ApplicationAttemptId reservedApplication \u003d reservedContainer.getContainer().getId().getApplicationAttemptId();\n         if (!reservedApplication.equals(application.getApplicationAttemptId())) {\n             throw new IllegalStateException(\"Trying to unreserve \" + \" for application \" + application.getApplicationAttemptId() + \" when currently reserved \" + \" for application \" + reservedApplication.getApplicationId() + \" on node \" + this);\n         }\n     }\n     reservedContainer \u003d null;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[application-SchedulerApplication]",
        "newValue": "[application-SchedulerApplicationAttempt]"
      }
    },
    "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61": {
      "type": "Ybodychange",
      "commitMessage": "YARN-569. Add support for requesting and enforcing preemption requests via\na capacity monitor. Contributed by Carlo Curino, Chris Douglas\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1502083 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2013/7/11 上午9:20",
      "commitName": "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61",
      "commitAuthor": "Christopher Douglas",
      "commitDateOld": "2013/6/22 上午2:28",
      "commitNameOld": "37d7935a9d7b86635c9c1ffc03f88b49857f88a0",
      "commitAuthorOld": "Bikas Saha",
      "daysBetweenCommits": 19.29,
      "commitsBetweenForRepo": 72,
      "commitsBetweenForFile": 1,
      "actualSource": "public synchronized void unreserveResource(SchedulerApplication application) {\n    if (reservedContainer !\u003d null \u0026\u0026 reservedContainer.getContainer() !\u003d null \u0026\u0026 reservedContainer.getContainer().getId() !\u003d null \u0026\u0026 reservedContainer.getContainer().getId().getApplicationAttemptId() !\u003d null) {\n        ApplicationAttemptId reservedApplication \u003d reservedContainer.getContainer().getId().getApplicationAttemptId();\n        if (!reservedApplication.equals(application.getApplicationAttemptId())) {\n            throw new IllegalStateException(\"Trying to unreserve \" + \" for application \" + application.getApplicationAttemptId() + \" when currently reserved \" + \" for application \" + reservedApplication.getApplicationId() + \" on node \" + this);\n        }\n    }\n    reservedContainer \u003d null;\n}",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerNode.java",
      "functionStartLine": 228,
      "functionName": "unreserveResource",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,7 +1,9 @@\n public synchronized void unreserveResource(SchedulerApplication application) {\n-    ApplicationAttemptId reservedApplication \u003d reservedContainer.getContainer().getId().getApplicationAttemptId();\n-    if (!reservedApplication.equals(application.getApplicationAttemptId())) {\n-        throw new IllegalStateException(\"Trying to unreserve \" + \" for application \" + application.getApplicationAttemptId() + \" when currently reserved \" + \" for application \" + reservedApplication.getApplicationId() + \" on node \" + this);\n+    if (reservedContainer !\u003d null \u0026\u0026 reservedContainer.getContainer() !\u003d null \u0026\u0026 reservedContainer.getContainer().getId() !\u003d null \u0026\u0026 reservedContainer.getContainer().getId().getApplicationAttemptId() !\u003d null) {\n+        ApplicationAttemptId reservedApplication \u003d reservedContainer.getContainer().getId().getApplicationAttemptId();\n+        if (!reservedApplication.equals(application.getApplicationAttemptId())) {\n+            throw new IllegalStateException(\"Trying to unreserve \" + \" for application \" + application.getApplicationAttemptId() + \" when currently reserved \" + \" for application \" + reservedApplication.getApplicationId() + \" on node \" + this);\n+        }\n     }\n     reservedContainer \u003d null;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2012/8/8 下午1:22",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "2012/8/8 上午10:53",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public synchronized void unreserveResource(SchedulerApplication application) {\n    ApplicationAttemptId reservedApplication \u003d reservedContainer.getContainer().getId().getApplicationAttemptId();\n    if (!reservedApplication.equals(application.getApplicationAttemptId())) {\n        throw new IllegalStateException(\"Trying to unreserve \" + \" for application \" + application.getApplicationAttemptId() + \" when currently reserved \" + \" for application \" + reservedApplication.getApplicationId() + \" on node \" + this);\n    }\n    reservedContainer \u003d null;\n}",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerNode.java",
      "functionStartLine": 228,
      "functionName": "unreserveResource",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerNode.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerNode.java"
      }
    },
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
      "commitMessage": "MAPREDUCE-4440. Changed SchedulerApp and SchedulerNode to be a minimal interface to allow schedulers to maintain their own.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1362332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2012/7/17 上午9:43",
      "commitName": "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76",
      "commitAuthor": "Arun Murthy",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "MAPREDUCE-4440. Changed SchedulerApp and SchedulerNode to be a minimal interface to allow schedulers to maintain their own.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1362332 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2012/7/17 上午9:43",
          "commitName": "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "2012/7/17 上午6:41",
          "commitNameOld": "30099efb3525265f8b9fccd2709d45327f5b6724",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public synchronized void unreserveResource(SchedulerApplication application) {\n    ApplicationAttemptId reservedApplication \u003d reservedContainer.getContainer().getId().getApplicationAttemptId();\n    if (!reservedApplication.equals(application.getApplicationAttemptId())) {\n        throw new IllegalStateException(\"Trying to unreserve \" + \" for application \" + application.getApplicationAttemptId() + \" when currently reserved \" + \" for application \" + reservedApplication.getApplicationId() + \" on node \" + this);\n    }\n    reservedContainer \u003d null;\n}",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerNode.java",
          "functionStartLine": 228,
          "functionName": "unreserveResource",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,7 +1,7 @@\n-public synchronized void unreserveResource(SchedulerApp application) {\n+public synchronized void unreserveResource(SchedulerApplication application) {\n     ApplicationAttemptId reservedApplication \u003d reservedContainer.getContainer().getId().getApplicationAttemptId();\n     if (!reservedApplication.equals(application.getApplicationAttemptId())) {\n-        throw new IllegalStateException(\"Trying to unreserve \" + \" for application \" + application.getApplicationId() + \" when currently reserved \" + \" for application \" + reservedApplication.getApplicationId() + \" on node \" + this);\n+        throw new IllegalStateException(\"Trying to unreserve \" + \" for application \" + application.getApplicationAttemptId() + \" when currently reserved \" + \" for application \" + reservedApplication.getApplicationId() + \" on node \" + this);\n     }\n     reservedContainer \u003d null;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerNode.java",
            "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerNode.java",
            "oldMethodName": "unreserveResource",
            "newMethodName": "unreserveResource"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-4440. Changed SchedulerApp and SchedulerNode to be a minimal interface to allow schedulers to maintain their own.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1362332 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2012/7/17 上午9:43",
          "commitName": "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "2012/7/17 上午6:41",
          "commitNameOld": "30099efb3525265f8b9fccd2709d45327f5b6724",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public synchronized void unreserveResource(SchedulerApplication application) {\n    ApplicationAttemptId reservedApplication \u003d reservedContainer.getContainer().getId().getApplicationAttemptId();\n    if (!reservedApplication.equals(application.getApplicationAttemptId())) {\n        throw new IllegalStateException(\"Trying to unreserve \" + \" for application \" + application.getApplicationAttemptId() + \" when currently reserved \" + \" for application \" + reservedApplication.getApplicationId() + \" on node \" + this);\n    }\n    reservedContainer \u003d null;\n}",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerNode.java",
          "functionStartLine": 228,
          "functionName": "unreserveResource",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,7 +1,7 @@\n-public synchronized void unreserveResource(SchedulerApp application) {\n+public synchronized void unreserveResource(SchedulerApplication application) {\n     ApplicationAttemptId reservedApplication \u003d reservedContainer.getContainer().getId().getApplicationAttemptId();\n     if (!reservedApplication.equals(application.getApplicationAttemptId())) {\n-        throw new IllegalStateException(\"Trying to unreserve \" + \" for application \" + application.getApplicationId() + \" when currently reserved \" + \" for application \" + reservedApplication.getApplicationId() + \" on node \" + this);\n+        throw new IllegalStateException(\"Trying to unreserve \" + \" for application \" + application.getApplicationAttemptId() + \" when currently reserved \" + \" for application \" + reservedApplication.getApplicationId() + \" on node \" + this);\n     }\n     reservedContainer \u003d null;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-4440. Changed SchedulerApp and SchedulerNode to be a minimal interface to allow schedulers to maintain their own.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1362332 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2012/7/17 上午9:43",
          "commitName": "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "2012/7/17 上午6:41",
          "commitNameOld": "30099efb3525265f8b9fccd2709d45327f5b6724",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public synchronized void unreserveResource(SchedulerApplication application) {\n    ApplicationAttemptId reservedApplication \u003d reservedContainer.getContainer().getId().getApplicationAttemptId();\n    if (!reservedApplication.equals(application.getApplicationAttemptId())) {\n        throw new IllegalStateException(\"Trying to unreserve \" + \" for application \" + application.getApplicationAttemptId() + \" when currently reserved \" + \" for application \" + reservedApplication.getApplicationId() + \" on node \" + this);\n    }\n    reservedContainer \u003d null;\n}",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerNode.java",
          "functionStartLine": 228,
          "functionName": "unreserveResource",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,7 +1,7 @@\n-public synchronized void unreserveResource(SchedulerApp application) {\n+public synchronized void unreserveResource(SchedulerApplication application) {\n     ApplicationAttemptId reservedApplication \u003d reservedContainer.getContainer().getId().getApplicationAttemptId();\n     if (!reservedApplication.equals(application.getApplicationAttemptId())) {\n-        throw new IllegalStateException(\"Trying to unreserve \" + \" for application \" + application.getApplicationId() + \" when currently reserved \" + \" for application \" + reservedApplication.getApplicationId() + \" on node \" + this);\n+        throw new IllegalStateException(\"Trying to unreserve \" + \" for application \" + application.getApplicationAttemptId() + \" when currently reserved \" + \" for application \" + reservedApplication.getApplicationId() + \" on node \" + this);\n     }\n     reservedContainer \u003d null;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[application-SchedulerApp]",
            "newValue": "[application-SchedulerApplication]"
          }
        }
      ]
    },
    "6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2896. Simplify all apis to in org.apache.hadoop.yarn.api.records.* to be get/set only. Added javadocs to all public records.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1169980 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2011/9/13 上午8:05",
      "commitName": "6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "2011/8/30 上午7:27",
      "commitNameOld": "fb6ecb9b27798a923ca290ba5d23368e3a820a6c",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 14.03,
      "commitsBetweenForRepo": 82,
      "commitsBetweenForFile": 1,
      "actualSource": "public synchronized void unreserveResource(SchedulerApp application) {\n    ApplicationAttemptId reservedApplication \u003d reservedContainer.getContainer().getId().getApplicationAttemptId();\n    if (!reservedApplication.equals(application.getApplicationAttemptId())) {\n        throw new IllegalStateException(\"Trying to unreserve \" + \" for application \" + application.getApplicationId() + \" when currently reserved \" + \" for application \" + reservedApplication.getApplicationId() + \" on node \" + this);\n    }\n    reservedContainer \u003d null;\n}",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerNode.java",
      "functionStartLine": 221,
      "functionName": "unreserveResource",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,7 +1,7 @@\n public synchronized void unreserveResource(SchedulerApp application) {\n-    ApplicationAttemptId reservedApplication \u003d reservedContainer.getContainer().getId().getAppAttemptId();\n+    ApplicationAttemptId reservedApplication \u003d reservedContainer.getContainer().getId().getApplicationAttemptId();\n     if (!reservedApplication.equals(application.getApplicationAttemptId())) {\n         throw new IllegalStateException(\"Trying to unreserve \" + \" for application \" + application.getApplicationId() + \" when currently reserved \" + \" for application \" + reservedApplication.getApplicationId() + \" on node \" + this);\n     }\n     reservedContainer \u003d null;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2011/8/25 上午8:14",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "2011/8/25 上午8:06",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public synchronized void unreserveResource(SchedulerApp application) {\n    ApplicationAttemptId reservedApplication \u003d reservedContainer.getContainer().getId().getAppAttemptId();\n    if (!reservedApplication.equals(application.getApplicationAttemptId())) {\n        throw new IllegalStateException(\"Trying to unreserve \" + \" for application \" + application.getApplicationId() + \" when currently reserved \" + \" for application \" + reservedApplication.getApplicationId() + \" on node \" + this);\n    }\n    reservedContainer \u003d null;\n}",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerNode.java",
      "functionStartLine": 203,
      "functionName": "unreserveResource",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerNode.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerNode.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2011/8/18 下午7:07",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,7 @@\n+public synchronized void unreserveResource(SchedulerApp application) {\n+    ApplicationAttemptId reservedApplication \u003d reservedContainer.getContainer().getId().getAppAttemptId();\n+    if (!reservedApplication.equals(application.getApplicationAttemptId())) {\n+        throw new IllegalStateException(\"Trying to unreserve \" + \" for application \" + application.getApplicationId() + \" when currently reserved \" + \" for application \" + reservedApplication.getApplicationId() + \" on node \" + this);\n+    }\n+    reservedContainer \u003d null;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public synchronized void unreserveResource(SchedulerApp application) {\n    ApplicationAttemptId reservedApplication \u003d reservedContainer.getContainer().getId().getAppAttemptId();\n    if (!reservedApplication.equals(application.getApplicationAttemptId())) {\n        throw new IllegalStateException(\"Trying to unreserve \" + \" for application \" + application.getApplicationId() + \" when currently reserved \" + \" for application \" + reservedApplication.getApplicationId() + \" on node \" + this);\n    }\n    reservedContainer \u003d null;\n}",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerNode.java",
      "functionStartLine": 203,
      "functionName": "unreserveResource",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}