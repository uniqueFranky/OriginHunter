{
  "origin": "codeshovel",
  "repositoryName": "commons-io",
  "repositoryPath": "/Users/franky/Documents/Homework/毕业设计/testcase/commons-io/.git",
  "startCommitName": "559de2c461e94ab636c959149c775bb27111fb48",
  "sourceFileName": "Tailer.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "src/main/java/org/apache/commons/io/input/Tailer.java",
  "functionAnnotation": "@Override",
  "functionDoc": "Follows changes in the file, calling the TailerListener\u0027s handle method for each new line.\n",
  "functionStartLine": 406,
  "functionEndLine": 496,
  "numCommitsSeen": 49,
  "timeTaken": 1132,
  "changeHistory": [
    "467386105ad855e793a09632142c00cd01c5dd10",
    "56f2a758983611adea7308e90ae9934c973efa72",
    "45fbfb82fd1f5168a7183e78ece89da7a60e21fe",
    "2a915f5872beca562a72a1ded95652f87b5daaa3",
    "4dc97b64005f0083b2facaa70f661138a4fa3fc0",
    "7705470ba1ca2bf95f6442f06f68f007f33a4aeb",
    "62a47bf10c42039875bc9bf7790feb470b3205aa",
    "6aa00766b9103d75c763160280429af8e1f0549e",
    "3789b1aa9669cff2f434eba56f57c500662ead10",
    "3db2debddb4840f415570f88fb4a7794724b7930",
    "c395904915ca330d8944d74f9502c0f4bcf65907",
    "199dd8dfd1cef867ad8712c7565f090f81be0e7f",
    "24330e7703383c78411225dd9b99ebfe57b31ad5",
    "59ffcad15d220c2bc1f70f01d58bc31dec04b423",
    "f6c8dcc99db1929435fd8bb05dc0cf77e956e6e6",
    "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a",
    "4c17f2bcb464dc60c1937ee9ba5c5bbe2a84c2e8",
    "cdc2dadd24ee51a464cae08a98fb2da4f8ab4a76",
    "230a3c292c67918a019d96f15f2fb30bbb261bc1",
    "25032e70cbf8cb14de334a5002811852867d16dd",
    "a32a395a621098ce652ee8158e6320fa422f9fa3",
    "587f5571c6eb5a55b752fd7bfd66c2c535f5e566"
  ],
  "changeHistoryShort": {
    "467386105ad855e793a09632142c00cd01c5dd10": "Ybodychange",
    "56f2a758983611adea7308e90ae9934c973efa72": "Ybodychange",
    "45fbfb82fd1f5168a7183e78ece89da7a60e21fe": "Ybodychange",
    "2a915f5872beca562a72a1ded95652f87b5daaa3": "Yannotationchange",
    "4dc97b64005f0083b2facaa70f661138a4fa3fc0": "Ybodychange",
    "7705470ba1ca2bf95f6442f06f68f007f33a4aeb": "Ybodychange",
    "62a47bf10c42039875bc9bf7790feb470b3205aa": "Ybodychange",
    "6aa00766b9103d75c763160280429af8e1f0549e": "Ybodychange",
    "3789b1aa9669cff2f434eba56f57c500662ead10": "Ybodychange",
    "3db2debddb4840f415570f88fb4a7794724b7930": "Ybodychange",
    "c395904915ca330d8944d74f9502c0f4bcf65907": "Ybodychange",
    "199dd8dfd1cef867ad8712c7565f090f81be0e7f": "Ybodychange",
    "24330e7703383c78411225dd9b99ebfe57b31ad5": "Ybodychange",
    "59ffcad15d220c2bc1f70f01d58bc31dec04b423": "Ybodychange",
    "f6c8dcc99db1929435fd8bb05dc0cf77e956e6e6": "Ybodychange",
    "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a": "Yfilerename",
    "4c17f2bcb464dc60c1937ee9ba5c5bbe2a84c2e8": "Ybodychange",
    "cdc2dadd24ee51a464cae08a98fb2da4f8ab4a76": "Ybodychange",
    "230a3c292c67918a019d96f15f2fb30bbb261bc1": "Ybodychange",
    "25032e70cbf8cb14de334a5002811852867d16dd": "Ybodychange",
    "a32a395a621098ce652ee8158e6320fa422f9fa3": "Ybodychange",
    "587f5571c6eb5a55b752fd7bfd66c2c535f5e566": "Yintroduced"
  },
  "changeHistoryDetails": {
    "467386105ad855e793a09632142c00cd01c5dd10": {
      "type": "Ybodychange",
      "commitMessage": "Don\u0027t need to nest else clause.",
      "commitDate": "2018/3/7 上午12:27",
      "commitName": "467386105ad855e793a09632142c00cd01c5dd10",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "2017/9/29 上午5:03",
      "commitNameOld": "56f2a758983611adea7308e90ae9934c973efa72",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 158.81,
      "commitsBetweenForRepo": 50,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void run() {\n    RandomAccessFile reader \u003d null;\n    try {\n        long last \u003d 0;\n        long position \u003d 0;\n        while (getRun() \u0026\u0026 reader \u003d\u003d null) {\n            try {\n                reader \u003d new RandomAccessFile(file, RAF_MODE);\n            } catch (final FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader \u003d\u003d null) {\n                Thread.sleep(delayMillis);\n            } else {\n                position \u003d end ? file.length() : 0;\n                last \u003d file.lastModified();\n                reader.seek(position);\n            }\n        }\n        while (getRun()) {\n            final boolean newer \u003d FileUtils.isFileNewer(file, last);\n            final long length \u003d file.length();\n            if (length \u003c position) {\n                listener.fileRotated();\n                try (RandomAccessFile save \u003d reader) {\n                    reader \u003d new RandomAccessFile(file, RAF_MODE);\n                    try {\n                        readLines(save);\n                    } catch (final IOException ioe) {\n                        listener.handle(ioe);\n                    }\n                    position \u003d 0;\n                } catch (final FileNotFoundException e) {\n                    listener.fileNotFound();\n                    Thread.sleep(delayMillis);\n                }\n                continue;\n            }\n            if (length \u003e position) {\n                position \u003d readLines(reader);\n                last \u003d file.lastModified();\n            } else if (newer) {\n                position \u003d 0;\n                reader.seek(position);\n                position \u003d readLines(reader);\n                last \u003d file.lastModified();\n            }\n            if (reOpen \u0026\u0026 reader !\u003d null) {\n                reader.close();\n            }\n            Thread.sleep(delayMillis);\n            if (getRun() \u0026\u0026 reOpen) {\n                reader \u003d new RandomAccessFile(file, RAF_MODE);\n                reader.seek(position);\n            }\n        }\n    } catch (final InterruptedException e) {\n        Thread.currentThread().interrupt();\n        listener.handle(e);\n    } catch (final Exception e) {\n        listener.handle(e);\n    } finally {\n        try {\n            if (reader !\u003d null) {\n                reader.close();\n            }\n        } catch (final IOException e) {\n            listener.handle(e);\n        }\n        stop();\n    }\n}",
      "path": "src/main/java/org/apache/commons/io/input/Tailer.java",
      "functionStartLine": 406,
      "functionName": "run",
      "functionAnnotation": "@Override",
      "functionDoc": "Follows changes in the file, calling the TailerListener\u0027s handle method for each new line.\n",
      "diff": "@@ -1,74 +1,73 @@\n @Override\n public void run() {\n     RandomAccessFile reader \u003d null;\n     try {\n         long last \u003d 0;\n         long position \u003d 0;\n         while (getRun() \u0026\u0026 reader \u003d\u003d null) {\n             try {\n                 reader \u003d new RandomAccessFile(file, RAF_MODE);\n             } catch (final FileNotFoundException e) {\n                 listener.fileNotFound();\n             }\n             if (reader \u003d\u003d null) {\n                 Thread.sleep(delayMillis);\n             } else {\n                 position \u003d end ? file.length() : 0;\n                 last \u003d file.lastModified();\n                 reader.seek(position);\n             }\n         }\n         while (getRun()) {\n             final boolean newer \u003d FileUtils.isFileNewer(file, last);\n             final long length \u003d file.length();\n             if (length \u003c position) {\n                 listener.fileRotated();\n                 try (RandomAccessFile save \u003d reader) {\n                     reader \u003d new RandomAccessFile(file, RAF_MODE);\n                     try {\n                         readLines(save);\n                     } catch (final IOException ioe) {\n                         listener.handle(ioe);\n                     }\n                     position \u003d 0;\n                 } catch (final FileNotFoundException e) {\n                     listener.fileNotFound();\n                     Thread.sleep(delayMillis);\n                 }\n                 continue;\n-            } else {\n-                if (length \u003e position) {\n-                    position \u003d readLines(reader);\n-                    last \u003d file.lastModified();\n-                } else if (newer) {\n-                    position \u003d 0;\n-                    reader.seek(position);\n-                    position \u003d readLines(reader);\n-                    last \u003d file.lastModified();\n-                }\n+            }\n+            if (length \u003e position) {\n+                position \u003d readLines(reader);\n+                last \u003d file.lastModified();\n+            } else if (newer) {\n+                position \u003d 0;\n+                reader.seek(position);\n+                position \u003d readLines(reader);\n+                last \u003d file.lastModified();\n             }\n             if (reOpen \u0026\u0026 reader !\u003d null) {\n                 reader.close();\n             }\n             Thread.sleep(delayMillis);\n             if (getRun() \u0026\u0026 reOpen) {\n                 reader \u003d new RandomAccessFile(file, RAF_MODE);\n                 reader.seek(position);\n             }\n         }\n     } catch (final InterruptedException e) {\n         Thread.currentThread().interrupt();\n         listener.handle(e);\n     } catch (final Exception e) {\n         listener.handle(e);\n     } finally {\n         try {\n             if (reader !\u003d null) {\n                 reader.close();\n             }\n         } catch (final IOException e) {\n             listener.handle(e);\n         }\n         stop();\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "56f2a758983611adea7308e90ae9934c973efa72": {
      "type": "Ybodychange",
      "commitMessage": "Consistently use the final modifier with local variables.",
      "commitDate": "2017/9/29 上午5:03",
      "commitName": "56f2a758983611adea7308e90ae9934c973efa72",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "2017/9/28 上午2:00",
      "commitNameOld": "a768fe9aacf04cce58441ba5cbe6e0d03c2a11d8",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 1.13,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void run() {\n    RandomAccessFile reader \u003d null;\n    try {\n        long last \u003d 0;\n        long position \u003d 0;\n        while (getRun() \u0026\u0026 reader \u003d\u003d null) {\n            try {\n                reader \u003d new RandomAccessFile(file, RAF_MODE);\n            } catch (final FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader \u003d\u003d null) {\n                Thread.sleep(delayMillis);\n            } else {\n                position \u003d end ? file.length() : 0;\n                last \u003d file.lastModified();\n                reader.seek(position);\n            }\n        }\n        while (getRun()) {\n            final boolean newer \u003d FileUtils.isFileNewer(file, last);\n            final long length \u003d file.length();\n            if (length \u003c position) {\n                listener.fileRotated();\n                try (RandomAccessFile save \u003d reader) {\n                    reader \u003d new RandomAccessFile(file, RAF_MODE);\n                    try {\n                        readLines(save);\n                    } catch (final IOException ioe) {\n                        listener.handle(ioe);\n                    }\n                    position \u003d 0;\n                } catch (final FileNotFoundException e) {\n                    listener.fileNotFound();\n                    Thread.sleep(delayMillis);\n                }\n                continue;\n            } else {\n                if (length \u003e position) {\n                    position \u003d readLines(reader);\n                    last \u003d file.lastModified();\n                } else if (newer) {\n                    position \u003d 0;\n                    reader.seek(position);\n                    position \u003d readLines(reader);\n                    last \u003d file.lastModified();\n                }\n            }\n            if (reOpen \u0026\u0026 reader !\u003d null) {\n                reader.close();\n            }\n            Thread.sleep(delayMillis);\n            if (getRun() \u0026\u0026 reOpen) {\n                reader \u003d new RandomAccessFile(file, RAF_MODE);\n                reader.seek(position);\n            }\n        }\n    } catch (final InterruptedException e) {\n        Thread.currentThread().interrupt();\n        listener.handle(e);\n    } catch (final Exception e) {\n        listener.handle(e);\n    } finally {\n        try {\n            if (reader !\u003d null) {\n                reader.close();\n            }\n        } catch (final IOException e) {\n            listener.handle(e);\n        }\n        stop();\n    }\n}",
      "path": "src/main/java/org/apache/commons/io/input/Tailer.java",
      "functionStartLine": 406,
      "functionName": "run",
      "functionAnnotation": "@Override",
      "functionDoc": "Follows changes in the file, calling the TailerListener\u0027s handle method for each new line.\n",
      "diff": "@@ -1,74 +1,74 @@\n @Override\n public void run() {\n     RandomAccessFile reader \u003d null;\n     try {\n         long last \u003d 0;\n         long position \u003d 0;\n         while (getRun() \u0026\u0026 reader \u003d\u003d null) {\n             try {\n                 reader \u003d new RandomAccessFile(file, RAF_MODE);\n             } catch (final FileNotFoundException e) {\n                 listener.fileNotFound();\n             }\n             if (reader \u003d\u003d null) {\n                 Thread.sleep(delayMillis);\n             } else {\n                 position \u003d end ? file.length() : 0;\n                 last \u003d file.lastModified();\n                 reader.seek(position);\n             }\n         }\n         while (getRun()) {\n             final boolean newer \u003d FileUtils.isFileNewer(file, last);\n             final long length \u003d file.length();\n             if (length \u003c position) {\n                 listener.fileRotated();\n                 try (RandomAccessFile save \u003d reader) {\n                     reader \u003d new RandomAccessFile(file, RAF_MODE);\n                     try {\n                         readLines(save);\n-                    } catch (IOException ioe) {\n+                    } catch (final IOException ioe) {\n                         listener.handle(ioe);\n                     }\n                     position \u003d 0;\n                 } catch (final FileNotFoundException e) {\n                     listener.fileNotFound();\n                     Thread.sleep(delayMillis);\n                 }\n                 continue;\n             } else {\n                 if (length \u003e position) {\n                     position \u003d readLines(reader);\n                     last \u003d file.lastModified();\n                 } else if (newer) {\n                     position \u003d 0;\n                     reader.seek(position);\n                     position \u003d readLines(reader);\n                     last \u003d file.lastModified();\n                 }\n             }\n             if (reOpen \u0026\u0026 reader !\u003d null) {\n                 reader.close();\n             }\n             Thread.sleep(delayMillis);\n             if (getRun() \u0026\u0026 reOpen) {\n                 reader \u003d new RandomAccessFile(file, RAF_MODE);\n                 reader.seek(position);\n             }\n         }\n     } catch (final InterruptedException e) {\n         Thread.currentThread().interrupt();\n         listener.handle(e);\n     } catch (final Exception e) {\n         listener.handle(e);\n     } finally {\n         try {\n             if (reader !\u003d null) {\n                 reader.close();\n             }\n         } catch (final IOException e) {\n             listener.handle(e);\n         }\n         stop();\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "45fbfb82fd1f5168a7183e78ece89da7a60e21fe": {
      "type": "Ybodychange",
      "commitMessage": "IO-528: fix Tailer.run race condition runaway logging (closes #29)\n",
      "commitDate": "2017/4/23 下午5:29",
      "commitName": "45fbfb82fd1f5168a7183e78ece89da7a60e21fe",
      "commitAuthor": "Dave Moten",
      "commitDateOld": "2017/2/16 上午2:37",
      "commitNameOld": "8b9fe1b01ce21003f6a6ff8391ad2a64f4d21030",
      "commitAuthorOld": "Sebastian Kürten",
      "daysBetweenCommits": 66.62,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void run() {\n    RandomAccessFile reader \u003d null;\n    try {\n        long last \u003d 0;\n        long position \u003d 0;\n        while (getRun() \u0026\u0026 reader \u003d\u003d null) {\n            try {\n                reader \u003d new RandomAccessFile(file, RAF_MODE);\n            } catch (final FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader \u003d\u003d null) {\n                Thread.sleep(delayMillis);\n            } else {\n                position \u003d end ? file.length() : 0;\n                last \u003d file.lastModified();\n                reader.seek(position);\n            }\n        }\n        while (getRun()) {\n            final boolean newer \u003d FileUtils.isFileNewer(file, last);\n            final long length \u003d file.length();\n            if (length \u003c position) {\n                listener.fileRotated();\n                try (RandomAccessFile save \u003d reader) {\n                    reader \u003d new RandomAccessFile(file, RAF_MODE);\n                    try {\n                        readLines(save);\n                    } catch (IOException ioe) {\n                        listener.handle(ioe);\n                    }\n                    position \u003d 0;\n                } catch (final FileNotFoundException e) {\n                    listener.fileNotFound();\n                    Thread.sleep(delayMillis);\n                }\n                continue;\n            } else {\n                if (length \u003e position) {\n                    position \u003d readLines(reader);\n                    last \u003d file.lastModified();\n                } else if (newer) {\n                    position \u003d 0;\n                    reader.seek(position);\n                    position \u003d readLines(reader);\n                    last \u003d file.lastModified();\n                }\n            }\n            if (reOpen \u0026\u0026 reader !\u003d null) {\n                reader.close();\n            }\n            Thread.sleep(delayMillis);\n            if (getRun() \u0026\u0026 reOpen) {\n                reader \u003d new RandomAccessFile(file, RAF_MODE);\n                reader.seek(position);\n            }\n        }\n    } catch (final InterruptedException e) {\n        Thread.currentThread().interrupt();\n        listener.handle(e);\n    } catch (final Exception e) {\n        listener.handle(e);\n    } finally {\n        try {\n            if (reader !\u003d null) {\n                reader.close();\n            }\n        } catch (final IOException e) {\n            listener.handle(e);\n        }\n        stop();\n    }\n}",
      "path": "src/main/java/org/apache/commons/io/input/Tailer.java",
      "functionStartLine": 406,
      "functionName": "run",
      "functionAnnotation": "@Override",
      "functionDoc": "Follows changes in the file, calling the TailerListener\u0027s handle method for each new line.\n",
      "diff": "@@ -1,73 +1,74 @@\n @Override\n public void run() {\n     RandomAccessFile reader \u003d null;\n     try {\n         long last \u003d 0;\n         long position \u003d 0;\n         while (getRun() \u0026\u0026 reader \u003d\u003d null) {\n             try {\n                 reader \u003d new RandomAccessFile(file, RAF_MODE);\n             } catch (final FileNotFoundException e) {\n                 listener.fileNotFound();\n             }\n             if (reader \u003d\u003d null) {\n                 Thread.sleep(delayMillis);\n             } else {\n                 position \u003d end ? file.length() : 0;\n                 last \u003d file.lastModified();\n                 reader.seek(position);\n             }\n         }\n         while (getRun()) {\n             final boolean newer \u003d FileUtils.isFileNewer(file, last);\n             final long length \u003d file.length();\n             if (length \u003c position) {\n                 listener.fileRotated();\n                 try (RandomAccessFile save \u003d reader) {\n                     reader \u003d new RandomAccessFile(file, RAF_MODE);\n                     try {\n                         readLines(save);\n                     } catch (IOException ioe) {\n                         listener.handle(ioe);\n                     }\n                     position \u003d 0;\n                 } catch (final FileNotFoundException e) {\n                     listener.fileNotFound();\n+                    Thread.sleep(delayMillis);\n                 }\n                 continue;\n             } else {\n                 if (length \u003e position) {\n                     position \u003d readLines(reader);\n                     last \u003d file.lastModified();\n                 } else if (newer) {\n                     position \u003d 0;\n                     reader.seek(position);\n                     position \u003d readLines(reader);\n                     last \u003d file.lastModified();\n                 }\n             }\n             if (reOpen \u0026\u0026 reader !\u003d null) {\n                 reader.close();\n             }\n             Thread.sleep(delayMillis);\n             if (getRun() \u0026\u0026 reOpen) {\n                 reader \u003d new RandomAccessFile(file, RAF_MODE);\n                 reader.seek(position);\n             }\n         }\n     } catch (final InterruptedException e) {\n         Thread.currentThread().interrupt();\n         listener.handle(e);\n     } catch (final Exception e) {\n         listener.handle(e);\n     } finally {\n         try {\n             if (reader !\u003d null) {\n                 reader.close();\n             }\n         } catch (final IOException e) {\n             listener.handle(e);\n         }\n         stop();\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2a915f5872beca562a72a1ded95652f87b5daaa3": {
      "type": "Yannotationchange",
      "commitMessage": "Add missing \u0027@Override\u0027 annotations.",
      "commitDate": "2016/11/19 上午5:31",
      "commitName": "2a915f5872beca562a72a1ded95652f87b5daaa3",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "2016/5/7 上午8:06",
      "commitNameOld": "4dc97b64005f0083b2facaa70f661138a4fa3fc0",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 195.89,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void run() {\n    RandomAccessFile reader \u003d null;\n    try {\n        long last \u003d 0;\n        long position \u003d 0;\n        while (getRun() \u0026\u0026 reader \u003d\u003d null) {\n            try {\n                reader \u003d new RandomAccessFile(file, RAF_MODE);\n            } catch (final FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader \u003d\u003d null) {\n                Thread.sleep(delayMillis);\n            } else {\n                position \u003d end ? file.length() : 0;\n                last \u003d file.lastModified();\n                reader.seek(position);\n            }\n        }\n        while (getRun()) {\n            final boolean newer \u003d FileUtils.isFileNewer(file, last);\n            final long length \u003d file.length();\n            if (length \u003c position) {\n                listener.fileRotated();\n                try (RandomAccessFile save \u003d reader) {\n                    reader \u003d new RandomAccessFile(file, RAF_MODE);\n                    try {\n                        readLines(save);\n                    } catch (IOException ioe) {\n                        listener.handle(ioe);\n                    }\n                    position \u003d 0;\n                } catch (final FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length \u003e position) {\n                    position \u003d readLines(reader);\n                    last \u003d file.lastModified();\n                } else if (newer) {\n                    position \u003d 0;\n                    reader.seek(position);\n                    position \u003d readLines(reader);\n                    last \u003d file.lastModified();\n                }\n            }\n            if (reOpen \u0026\u0026 reader !\u003d null) {\n                reader.close();\n            }\n            Thread.sleep(delayMillis);\n            if (getRun() \u0026\u0026 reOpen) {\n                reader \u003d new RandomAccessFile(file, RAF_MODE);\n                reader.seek(position);\n            }\n        }\n    } catch (final InterruptedException e) {\n        Thread.currentThread().interrupt();\n        listener.handle(e);\n    } catch (final Exception e) {\n        listener.handle(e);\n    } finally {\n        try {\n            if (reader !\u003d null) {\n                reader.close();\n            }\n        } catch (final IOException e) {\n            listener.handle(e);\n        }\n        stop();\n    }\n}",
      "path": "src/main/java/org/apache/commons/io/input/Tailer.java",
      "functionStartLine": 406,
      "functionName": "run",
      "functionAnnotation": "@Override",
      "functionDoc": "Follows changes in the file, calling the TailerListener\u0027s handle method for each new line.\n",
      "diff": "@@ -1,72 +1,73 @@\n+@Override\n public void run() {\n     RandomAccessFile reader \u003d null;\n     try {\n         long last \u003d 0;\n         long position \u003d 0;\n         while (getRun() \u0026\u0026 reader \u003d\u003d null) {\n             try {\n                 reader \u003d new RandomAccessFile(file, RAF_MODE);\n             } catch (final FileNotFoundException e) {\n                 listener.fileNotFound();\n             }\n             if (reader \u003d\u003d null) {\n                 Thread.sleep(delayMillis);\n             } else {\n                 position \u003d end ? file.length() : 0;\n                 last \u003d file.lastModified();\n                 reader.seek(position);\n             }\n         }\n         while (getRun()) {\n             final boolean newer \u003d FileUtils.isFileNewer(file, last);\n             final long length \u003d file.length();\n             if (length \u003c position) {\n                 listener.fileRotated();\n                 try (RandomAccessFile save \u003d reader) {\n                     reader \u003d new RandomAccessFile(file, RAF_MODE);\n                     try {\n                         readLines(save);\n                     } catch (IOException ioe) {\n                         listener.handle(ioe);\n                     }\n                     position \u003d 0;\n                 } catch (final FileNotFoundException e) {\n                     listener.fileNotFound();\n                 }\n                 continue;\n             } else {\n                 if (length \u003e position) {\n                     position \u003d readLines(reader);\n                     last \u003d file.lastModified();\n                 } else if (newer) {\n                     position \u003d 0;\n                     reader.seek(position);\n                     position \u003d readLines(reader);\n                     last \u003d file.lastModified();\n                 }\n             }\n             if (reOpen \u0026\u0026 reader !\u003d null) {\n                 reader.close();\n             }\n             Thread.sleep(delayMillis);\n             if (getRun() \u0026\u0026 reOpen) {\n                 reader \u003d new RandomAccessFile(file, RAF_MODE);\n                 reader.seek(position);\n             }\n         }\n     } catch (final InterruptedException e) {\n         Thread.currentThread().interrupt();\n         listener.handle(e);\n     } catch (final Exception e) {\n         listener.handle(e);\n     } finally {\n         try {\n             if (reader !\u003d null) {\n                 reader.close();\n             }\n         } catch (final IOException e) {\n             listener.handle(e);\n         }\n         stop();\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "@Override"
      }
    },
    "4dc97b64005f0083b2facaa70f661138a4fa3fc0": {
      "type": "Ybodychange",
      "commitMessage": "[IO-505] Deprecated of all IOUtils.closeQuietly() methods and use try-with-resources internally.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1742675 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2016/5/7 上午8:06",
      "commitName": "4dc97b64005f0083b2facaa70f661138a4fa3fc0",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "2015/11/13 上午12:06",
      "commitNameOld": "e76397c0c7f7889f82a0a59203ad16a673f1e704",
      "commitAuthorOld": "Kristian Rosenvold",
      "daysBetweenCommits": 176.33,
      "commitsBetweenForRepo": 92,
      "commitsBetweenForFile": 1,
      "actualSource": "public void run() {\n    RandomAccessFile reader \u003d null;\n    try {\n        long last \u003d 0;\n        long position \u003d 0;\n        while (getRun() \u0026\u0026 reader \u003d\u003d null) {\n            try {\n                reader \u003d new RandomAccessFile(file, RAF_MODE);\n            } catch (final FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader \u003d\u003d null) {\n                Thread.sleep(delayMillis);\n            } else {\n                position \u003d end ? file.length() : 0;\n                last \u003d file.lastModified();\n                reader.seek(position);\n            }\n        }\n        while (getRun()) {\n            final boolean newer \u003d FileUtils.isFileNewer(file, last);\n            final long length \u003d file.length();\n            if (length \u003c position) {\n                listener.fileRotated();\n                try (RandomAccessFile save \u003d reader) {\n                    reader \u003d new RandomAccessFile(file, RAF_MODE);\n                    try {\n                        readLines(save);\n                    } catch (IOException ioe) {\n                        listener.handle(ioe);\n                    }\n                    position \u003d 0;\n                } catch (final FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length \u003e position) {\n                    position \u003d readLines(reader);\n                    last \u003d file.lastModified();\n                } else if (newer) {\n                    position \u003d 0;\n                    reader.seek(position);\n                    position \u003d readLines(reader);\n                    last \u003d file.lastModified();\n                }\n            }\n            if (reOpen \u0026\u0026 reader !\u003d null) {\n                reader.close();\n            }\n            Thread.sleep(delayMillis);\n            if (getRun() \u0026\u0026 reOpen) {\n                reader \u003d new RandomAccessFile(file, RAF_MODE);\n                reader.seek(position);\n            }\n        }\n    } catch (final InterruptedException e) {\n        Thread.currentThread().interrupt();\n        listener.handle(e);\n    } catch (final Exception e) {\n        listener.handle(e);\n    } finally {\n        try {\n            if (reader !\u003d null) {\n                reader.close();\n            }\n        } catch (final IOException e) {\n            listener.handle(e);\n        }\n        stop();\n    }\n}",
      "path": "src/main/java/org/apache/commons/io/input/Tailer.java",
      "functionStartLine": 405,
      "functionName": "run",
      "functionAnnotation": "",
      "functionDoc": "Follows changes in the file, calling the TailerListener\u0027s handle method for each new line.\n",
      "diff": "@@ -1,67 +1,72 @@\n public void run() {\n     RandomAccessFile reader \u003d null;\n     try {\n         long last \u003d 0;\n         long position \u003d 0;\n         while (getRun() \u0026\u0026 reader \u003d\u003d null) {\n             try {\n                 reader \u003d new RandomAccessFile(file, RAF_MODE);\n             } catch (final FileNotFoundException e) {\n                 listener.fileNotFound();\n             }\n             if (reader \u003d\u003d null) {\n                 Thread.sleep(delayMillis);\n             } else {\n                 position \u003d end ? file.length() : 0;\n                 last \u003d file.lastModified();\n                 reader.seek(position);\n             }\n         }\n         while (getRun()) {\n             final boolean newer \u003d FileUtils.isFileNewer(file, last);\n             final long length \u003d file.length();\n             if (length \u003c position) {\n                 listener.fileRotated();\n-                try {\n-                    final RandomAccessFile save \u003d reader;\n+                try (RandomAccessFile save \u003d reader) {\n                     reader \u003d new RandomAccessFile(file, RAF_MODE);\n                     try {\n                         readLines(save);\n                     } catch (IOException ioe) {\n                         listener.handle(ioe);\n                     }\n                     position \u003d 0;\n-                    IOUtils.closeQuietly(save);\n                 } catch (final FileNotFoundException e) {\n                     listener.fileNotFound();\n                 }\n                 continue;\n             } else {\n                 if (length \u003e position) {\n                     position \u003d readLines(reader);\n                     last \u003d file.lastModified();\n                 } else if (newer) {\n                     position \u003d 0;\n                     reader.seek(position);\n                     position \u003d readLines(reader);\n                     last \u003d file.lastModified();\n                 }\n             }\n-            if (reOpen) {\n-                IOUtils.closeQuietly(reader);\n+            if (reOpen \u0026\u0026 reader !\u003d null) {\n+                reader.close();\n             }\n             Thread.sleep(delayMillis);\n             if (getRun() \u0026\u0026 reOpen) {\n                 reader \u003d new RandomAccessFile(file, RAF_MODE);\n                 reader.seek(position);\n             }\n         }\n     } catch (final InterruptedException e) {\n         Thread.currentThread().interrupt();\n-        stop(e);\n+        listener.handle(e);\n     } catch (final Exception e) {\n-        stop(e);\n+        listener.handle(e);\n     } finally {\n-        IOUtils.closeQuietly(reader);\n+        try {\n+            if (reader !\u003d null) {\n+                reader.close();\n+            }\n+        } catch (final IOException e) {\n+            listener.handle(e);\n+        }\n+        stop();\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7705470ba1ca2bf95f6442f06f68f007f33a4aeb": {
      "type": "Ybodychange",
      "commitMessage": "IO-279  Tailer erroneously considers file as new.\n        Fix to use file.lastModified() rather than System.currentTimeMillis()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1476097 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2013/4/26 下午4:26",
      "commitName": "7705470ba1ca2bf95f6442f06f68f007f33a4aeb",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "2013/4/25 上午7:24",
      "commitNameOld": "effe551657921069b871519156a934e4ef3ae916",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 1.38,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public void run() {\n    RandomAccessFile reader \u003d null;\n    try {\n        long last \u003d 0;\n        long position \u003d 0;\n        while (getRun() \u0026\u0026 reader \u003d\u003d null) {\n            try {\n                reader \u003d new RandomAccessFile(file, RAF_MODE);\n            } catch (final FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader \u003d\u003d null) {\n                Thread.sleep(delayMillis);\n            } else {\n                position \u003d end ? file.length() : 0;\n                last \u003d file.lastModified();\n                reader.seek(position);\n            }\n        }\n        while (getRun()) {\n            final boolean newer \u003d FileUtils.isFileNewer(file, last);\n            final long length \u003d file.length();\n            if (length \u003c position) {\n                listener.fileRotated();\n                try {\n                    final RandomAccessFile save \u003d reader;\n                    reader \u003d new RandomAccessFile(file, RAF_MODE);\n                    try {\n                        readLines(save);\n                    } catch (IOException ioe) {\n                        listener.handle(ioe);\n                    }\n                    position \u003d 0;\n                    IOUtils.closeQuietly(save);\n                } catch (final FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length \u003e position) {\n                    position \u003d readLines(reader);\n                    last \u003d file.lastModified();\n                } else if (newer) {\n                    position \u003d 0;\n                    reader.seek(position);\n                    position \u003d readLines(reader);\n                    last \u003d file.lastModified();\n                }\n            }\n            if (reOpen) {\n                IOUtils.closeQuietly(reader);\n            }\n            Thread.sleep(delayMillis);\n            if (getRun() \u0026\u0026 reOpen) {\n                reader \u003d new RandomAccessFile(file, RAF_MODE);\n                reader.seek(position);\n            }\n        }\n    } catch (final InterruptedException e) {\n        Thread.currentThread().interrupt();\n        stop(e);\n    } catch (final Exception e) {\n        stop(e);\n    } finally {\n        IOUtils.closeQuietly(reader);\n    }\n}",
      "path": "src/main/java/org/apache/commons/io/input/Tailer.java",
      "functionStartLine": 349,
      "functionName": "run",
      "functionAnnotation": "",
      "functionDoc": "Follows changes in the file, calling the TailerListener\u0027s handle method for each new line.\n",
      "diff": "@@ -1,67 +1,67 @@\n public void run() {\n     RandomAccessFile reader \u003d null;\n     try {\n         long last \u003d 0;\n         long position \u003d 0;\n         while (getRun() \u0026\u0026 reader \u003d\u003d null) {\n             try {\n                 reader \u003d new RandomAccessFile(file, RAF_MODE);\n             } catch (final FileNotFoundException e) {\n                 listener.fileNotFound();\n             }\n             if (reader \u003d\u003d null) {\n                 Thread.sleep(delayMillis);\n             } else {\n                 position \u003d end ? file.length() : 0;\n-                last \u003d System.currentTimeMillis();\n+                last \u003d file.lastModified();\n                 reader.seek(position);\n             }\n         }\n         while (getRun()) {\n             final boolean newer \u003d FileUtils.isFileNewer(file, last);\n             final long length \u003d file.length();\n             if (length \u003c position) {\n                 listener.fileRotated();\n                 try {\n                     final RandomAccessFile save \u003d reader;\n                     reader \u003d new RandomAccessFile(file, RAF_MODE);\n                     try {\n                         readLines(save);\n                     } catch (IOException ioe) {\n                         listener.handle(ioe);\n                     }\n                     position \u003d 0;\n                     IOUtils.closeQuietly(save);\n                 } catch (final FileNotFoundException e) {\n                     listener.fileNotFound();\n                 }\n                 continue;\n             } else {\n                 if (length \u003e position) {\n                     position \u003d readLines(reader);\n-                    last \u003d System.currentTimeMillis();\n+                    last \u003d file.lastModified();\n                 } else if (newer) {\n                     position \u003d 0;\n                     reader.seek(position);\n                     position \u003d readLines(reader);\n-                    last \u003d System.currentTimeMillis();\n+                    last \u003d file.lastModified();\n                 }\n             }\n             if (reOpen) {\n                 IOUtils.closeQuietly(reader);\n             }\n             Thread.sleep(delayMillis);\n             if (getRun() \u0026\u0026 reOpen) {\n                 reader \u003d new RandomAccessFile(file, RAF_MODE);\n                 reader.seek(position);\n             }\n         }\n     } catch (final InterruptedException e) {\n         Thread.currentThread().interrupt();\n         stop(e);\n     } catch (final Exception e) {\n         stop(e);\n     } finally {\n         IOUtils.closeQuietly(reader);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "62a47bf10c42039875bc9bf7790feb470b3205aa": {
      "type": "Ybodychange",
      "commitMessage": "IO-338 When a file is rotated, finish reading previous file prior to starting new one\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468723 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2013/4/17 上午10:26",
      "commitName": "62a47bf10c42039875bc9bf7790feb470b3205aa",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "2013/4/17 上午8:59",
      "commitNameOld": "8d52f694da0484cb2783a8b35dad845322af0c07",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public void run() {\n    RandomAccessFile reader \u003d null;\n    try {\n        long last \u003d 0;\n        long position \u003d 0;\n        while (getRun() \u0026\u0026 reader \u003d\u003d null) {\n            try {\n                reader \u003d new RandomAccessFile(file, RAF_MODE);\n            } catch (final FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader \u003d\u003d null) {\n                Thread.sleep(delayMillis);\n            } else {\n                position \u003d end ? file.length() : 0;\n                last \u003d System.currentTimeMillis();\n                reader.seek(position);\n            }\n        }\n        while (getRun()) {\n            final boolean newer \u003d FileUtils.isFileNewer(file, last);\n            final long length \u003d file.length();\n            if (length \u003c position) {\n                listener.fileRotated();\n                try {\n                    final RandomAccessFile save \u003d reader;\n                    reader \u003d new RandomAccessFile(file, RAF_MODE);\n                    try {\n                        readLines(save);\n                    } catch (IOException ioe) {\n                        listener.handle(ioe);\n                    }\n                    position \u003d 0;\n                    IOUtils.closeQuietly(save);\n                } catch (final FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length \u003e position) {\n                    position \u003d readLines(reader);\n                    last \u003d System.currentTimeMillis();\n                } else if (newer) {\n                    position \u003d 0;\n                    reader.seek(position);\n                    position \u003d readLines(reader);\n                    last \u003d System.currentTimeMillis();\n                }\n            }\n            if (reOpen) {\n                IOUtils.closeQuietly(reader);\n            }\n            Thread.sleep(delayMillis);\n            if (getRun() \u0026\u0026 reOpen) {\n                reader \u003d new RandomAccessFile(file, RAF_MODE);\n                reader.seek(position);\n            }\n        }\n    } catch (final InterruptedException e) {\n        Thread.currentThread().interrupt();\n        stop(e);\n    } catch (final Exception e) {\n        stop(e);\n    } finally {\n        IOUtils.closeQuietly(reader);\n    }\n}",
      "path": "src/main/java/org/apache/commons/io/input/Tailer.java",
      "functionStartLine": 349,
      "functionName": "run",
      "functionAnnotation": "",
      "functionDoc": "Follows changes in the file, calling the TailerListener\u0027s handle method for each new line.\n",
      "diff": "@@ -1,62 +1,67 @@\n public void run() {\n     RandomAccessFile reader \u003d null;\n     try {\n         long last \u003d 0;\n         long position \u003d 0;\n         while (getRun() \u0026\u0026 reader \u003d\u003d null) {\n             try {\n                 reader \u003d new RandomAccessFile(file, RAF_MODE);\n             } catch (final FileNotFoundException e) {\n                 listener.fileNotFound();\n             }\n             if (reader \u003d\u003d null) {\n                 Thread.sleep(delayMillis);\n             } else {\n                 position \u003d end ? file.length() : 0;\n                 last \u003d System.currentTimeMillis();\n                 reader.seek(position);\n             }\n         }\n         while (getRun()) {\n             final boolean newer \u003d FileUtils.isFileNewer(file, last);\n             final long length \u003d file.length();\n             if (length \u003c position) {\n                 listener.fileRotated();\n                 try {\n                     final RandomAccessFile save \u003d reader;\n                     reader \u003d new RandomAccessFile(file, RAF_MODE);\n+                    try {\n+                        readLines(save);\n+                    } catch (IOException ioe) {\n+                        listener.handle(ioe);\n+                    }\n                     position \u003d 0;\n                     IOUtils.closeQuietly(save);\n                 } catch (final FileNotFoundException e) {\n                     listener.fileNotFound();\n                 }\n                 continue;\n             } else {\n                 if (length \u003e position) {\n                     position \u003d readLines(reader);\n                     last \u003d System.currentTimeMillis();\n                 } else if (newer) {\n                     position \u003d 0;\n                     reader.seek(position);\n                     position \u003d readLines(reader);\n                     last \u003d System.currentTimeMillis();\n                 }\n             }\n             if (reOpen) {\n                 IOUtils.closeQuietly(reader);\n             }\n             Thread.sleep(delayMillis);\n             if (getRun() \u0026\u0026 reOpen) {\n                 reader \u003d new RandomAccessFile(file, RAF_MODE);\n                 reader.seek(position);\n             }\n         }\n     } catch (final InterruptedException e) {\n         Thread.currentThread().interrupt();\n         stop(e);\n     } catch (final Exception e) {\n         stop(e);\n     } finally {\n         IOUtils.closeQuietly(reader);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6aa00766b9103d75c763160280429af8e1f0549e": {
      "type": "Ybodychange",
      "commitMessage": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2012/12/1 上午4:51",
      "commitName": "6aa00766b9103d75c763160280429af8e1f0549e",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "2012/11/22 上午8:36",
      "commitNameOld": "3789b1aa9669cff2f434eba56f57c500662ead10",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 8.84,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "actualSource": "public void run() {\n    RandomAccessFile reader \u003d null;\n    try {\n        long last \u003d 0;\n        long position \u003d 0;\n        while (getRun() \u0026\u0026 reader \u003d\u003d null) {\n            try {\n                reader \u003d new RandomAccessFile(file, RAF_MODE);\n            } catch (final FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader \u003d\u003d null) {\n                Thread.sleep(delayMillis);\n            } else {\n                position \u003d end ? file.length() : 0;\n                last \u003d System.currentTimeMillis();\n                reader.seek(position);\n            }\n        }\n        while (getRun()) {\n            final boolean newer \u003d FileUtils.isFileNewer(file, last);\n            final long length \u003d file.length();\n            if (length \u003c position) {\n                listener.fileRotated();\n                try {\n                    final RandomAccessFile save \u003d reader;\n                    reader \u003d new RandomAccessFile(file, RAF_MODE);\n                    position \u003d 0;\n                    IOUtils.closeQuietly(save);\n                } catch (final FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length \u003e position) {\n                    position \u003d readLines(reader);\n                    last \u003d System.currentTimeMillis();\n                } else if (newer) {\n                    position \u003d 0;\n                    reader.seek(position);\n                    position \u003d readLines(reader);\n                    last \u003d System.currentTimeMillis();\n                }\n            }\n            if (reOpen) {\n                IOUtils.closeQuietly(reader);\n            }\n            Thread.sleep(delayMillis);\n            if (getRun() \u0026\u0026 reOpen) {\n                reader \u003d new RandomAccessFile(file, RAF_MODE);\n                reader.seek(position);\n            }\n        }\n    } catch (final InterruptedException e) {\n        Thread.currentThread().interrupt();\n        stop(e);\n    } catch (final Exception e) {\n        stop(e);\n    } finally {\n        IOUtils.closeQuietly(reader);\n    }\n}",
      "path": "src/main/java/org/apache/commons/io/input/Tailer.java",
      "functionStartLine": 351,
      "functionName": "run",
      "functionAnnotation": "",
      "functionDoc": "Follows changes in the file, calling the TailerListener\u0027s handle method for each new line.\n",
      "diff": "@@ -1,62 +1,62 @@\n public void run() {\n     RandomAccessFile reader \u003d null;\n     try {\n         long last \u003d 0;\n         long position \u003d 0;\n         while (getRun() \u0026\u0026 reader \u003d\u003d null) {\n             try {\n                 reader \u003d new RandomAccessFile(file, RAF_MODE);\n-            } catch (FileNotFoundException e) {\n+            } catch (final FileNotFoundException e) {\n                 listener.fileNotFound();\n             }\n             if (reader \u003d\u003d null) {\n                 Thread.sleep(delayMillis);\n             } else {\n                 position \u003d end ? file.length() : 0;\n                 last \u003d System.currentTimeMillis();\n                 reader.seek(position);\n             }\n         }\n         while (getRun()) {\n-            boolean newer \u003d FileUtils.isFileNewer(file, last);\n-            long length \u003d file.length();\n+            final boolean newer \u003d FileUtils.isFileNewer(file, last);\n+            final long length \u003d file.length();\n             if (length \u003c position) {\n                 listener.fileRotated();\n                 try {\n-                    RandomAccessFile save \u003d reader;\n+                    final RandomAccessFile save \u003d reader;\n                     reader \u003d new RandomAccessFile(file, RAF_MODE);\n                     position \u003d 0;\n                     IOUtils.closeQuietly(save);\n-                } catch (FileNotFoundException e) {\n+                } catch (final FileNotFoundException e) {\n                     listener.fileNotFound();\n                 }\n                 continue;\n             } else {\n                 if (length \u003e position) {\n                     position \u003d readLines(reader);\n                     last \u003d System.currentTimeMillis();\n                 } else if (newer) {\n                     position \u003d 0;\n                     reader.seek(position);\n                     position \u003d readLines(reader);\n                     last \u003d System.currentTimeMillis();\n                 }\n             }\n             if (reOpen) {\n                 IOUtils.closeQuietly(reader);\n             }\n             Thread.sleep(delayMillis);\n             if (getRun() \u0026\u0026 reOpen) {\n                 reader \u003d new RandomAccessFile(file, RAF_MODE);\n                 reader.seek(position);\n             }\n         }\n-    } catch (InterruptedException e) {\n+    } catch (final InterruptedException e) {\n         Thread.currentThread().interrupt();\n         stop(e);\n-    } catch (Exception e) {\n+    } catch (final Exception e) {\n         stop(e);\n     } finally {\n         IOUtils.closeQuietly(reader);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "3789b1aa9669cff2f434eba56f57c500662ead10": {
      "type": "Ybodychange",
      "commitMessage": "[IO-358][Tailer] InterruptedException while the thread is sleeping is silently ignored.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1412391 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2012/11/22 上午8:36",
      "commitName": "3789b1aa9669cff2f434eba56f57c500662ead10",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "2012/11/21 上午11:29",
      "commitNameOld": "3225374e9f6362a4a59d0cf8b3da9b92905bbd27",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.88,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void run() {\n    RandomAccessFile reader \u003d null;\n    try {\n        long last \u003d 0;\n        long position \u003d 0;\n        while (getRun() \u0026\u0026 reader \u003d\u003d null) {\n            try {\n                reader \u003d new RandomAccessFile(file, RAF_MODE);\n            } catch (FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader \u003d\u003d null) {\n                Thread.sleep(delayMillis);\n            } else {\n                position \u003d end ? file.length() : 0;\n                last \u003d System.currentTimeMillis();\n                reader.seek(position);\n            }\n        }\n        while (getRun()) {\n            boolean newer \u003d FileUtils.isFileNewer(file, last);\n            long length \u003d file.length();\n            if (length \u003c position) {\n                listener.fileRotated();\n                try {\n                    RandomAccessFile save \u003d reader;\n                    reader \u003d new RandomAccessFile(file, RAF_MODE);\n                    position \u003d 0;\n                    IOUtils.closeQuietly(save);\n                } catch (FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length \u003e position) {\n                    position \u003d readLines(reader);\n                    last \u003d System.currentTimeMillis();\n                } else if (newer) {\n                    position \u003d 0;\n                    reader.seek(position);\n                    position \u003d readLines(reader);\n                    last \u003d System.currentTimeMillis();\n                }\n            }\n            if (reOpen) {\n                IOUtils.closeQuietly(reader);\n            }\n            Thread.sleep(delayMillis);\n            if (getRun() \u0026\u0026 reOpen) {\n                reader \u003d new RandomAccessFile(file, RAF_MODE);\n                reader.seek(position);\n            }\n        }\n    } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        stop(e);\n    } catch (Exception e) {\n        stop(e);\n    } finally {\n        IOUtils.closeQuietly(reader);\n    }\n}",
      "path": "src/main/java/org/apache/commons/io/input/Tailer.java",
      "functionStartLine": 351,
      "functionName": "run",
      "functionAnnotation": "",
      "functionDoc": "Follows changes in the file, calling the TailerListener\u0027s handle method for each new line.\n",
      "diff": "@@ -1,65 +1,62 @@\n public void run() {\n     RandomAccessFile reader \u003d null;\n     try {\n         long last \u003d 0;\n         long position \u003d 0;\n         while (getRun() \u0026\u0026 reader \u003d\u003d null) {\n             try {\n                 reader \u003d new RandomAccessFile(file, RAF_MODE);\n             } catch (FileNotFoundException e) {\n                 listener.fileNotFound();\n             }\n             if (reader \u003d\u003d null) {\n-                try {\n-                    Thread.sleep(delayMillis);\n-                } catch (InterruptedException e) {\n-                }\n+                Thread.sleep(delayMillis);\n             } else {\n                 position \u003d end ? file.length() : 0;\n                 last \u003d System.currentTimeMillis();\n                 reader.seek(position);\n             }\n         }\n         while (getRun()) {\n             boolean newer \u003d FileUtils.isFileNewer(file, last);\n             long length \u003d file.length();\n             if (length \u003c position) {\n                 listener.fileRotated();\n                 try {\n                     RandomAccessFile save \u003d reader;\n                     reader \u003d new RandomAccessFile(file, RAF_MODE);\n                     position \u003d 0;\n                     IOUtils.closeQuietly(save);\n                 } catch (FileNotFoundException e) {\n                     listener.fileNotFound();\n                 }\n                 continue;\n             } else {\n                 if (length \u003e position) {\n                     position \u003d readLines(reader);\n                     last \u003d System.currentTimeMillis();\n                 } else if (newer) {\n                     position \u003d 0;\n                     reader.seek(position);\n                     position \u003d readLines(reader);\n                     last \u003d System.currentTimeMillis();\n                 }\n             }\n             if (reOpen) {\n                 IOUtils.closeQuietly(reader);\n             }\n-            try {\n-                Thread.sleep(delayMillis);\n-            } catch (InterruptedException e) {\n-            }\n+            Thread.sleep(delayMillis);\n             if (getRun() \u0026\u0026 reOpen) {\n                 reader \u003d new RandomAccessFile(file, RAF_MODE);\n                 reader.seek(position);\n             }\n         }\n+    } catch (InterruptedException e) {\n+        Thread.currentThread().interrupt();\n+        stop(e);\n     } catch (Exception e) {\n-        listener.handle(e);\n+        stop(e);\n     } finally {\n         IOUtils.closeQuietly(reader);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "3db2debddb4840f415570f88fb4a7794724b7930": {
      "type": "Ybodychange",
      "commitMessage": "[IO-345] Supply a hook method allowing Tailer actively determining stop condition.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1391419 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2012/9/28 下午8:10",
      "commitName": "3db2debddb4840f415570f88fb4a7794724b7930",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "2012/6/11 上午9:09",
      "commitNameOld": "c395904915ca330d8944d74f9502c0f4bcf65907",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 109.46,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "actualSource": "public void run() {\n    RandomAccessFile reader \u003d null;\n    try {\n        long last \u003d 0;\n        long position \u003d 0;\n        while (getRun() \u0026\u0026 reader \u003d\u003d null) {\n            try {\n                reader \u003d new RandomAccessFile(file, RAF_MODE);\n            } catch (FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader \u003d\u003d null) {\n                try {\n                    Thread.sleep(delayMillis);\n                } catch (InterruptedException e) {\n                }\n            } else {\n                position \u003d end ? file.length() : 0;\n                last \u003d System.currentTimeMillis();\n                reader.seek(position);\n            }\n        }\n        while (getRun()) {\n            boolean newer \u003d FileUtils.isFileNewer(file, last);\n            long length \u003d file.length();\n            if (length \u003c position) {\n                listener.fileRotated();\n                try {\n                    RandomAccessFile save \u003d reader;\n                    reader \u003d new RandomAccessFile(file, RAF_MODE);\n                    position \u003d 0;\n                    IOUtils.closeQuietly(save);\n                } catch (FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length \u003e position) {\n                    position \u003d readLines(reader);\n                    last \u003d System.currentTimeMillis();\n                } else if (newer) {\n                    position \u003d 0;\n                    reader.seek(position);\n                    position \u003d readLines(reader);\n                    last \u003d System.currentTimeMillis();\n                }\n            }\n            if (reOpen) {\n                IOUtils.closeQuietly(reader);\n            }\n            try {\n                Thread.sleep(delayMillis);\n            } catch (InterruptedException e) {\n            }\n            if (getRun() \u0026\u0026 reOpen) {\n                reader \u003d new RandomAccessFile(file, RAF_MODE);\n                reader.seek(position);\n            }\n        }\n    } catch (Exception e) {\n        listener.handle(e);\n    } finally {\n        IOUtils.closeQuietly(reader);\n    }\n}",
      "path": "src/main/java/org/apache/commons/io/input/Tailer.java",
      "functionStartLine": 346,
      "functionName": "run",
      "functionAnnotation": "",
      "functionDoc": "Follows changes in the file, calling the TailerListener\u0027s handle method for each new line.\n",
      "diff": "@@ -1,65 +1,65 @@\n public void run() {\n     RandomAccessFile reader \u003d null;\n     try {\n         long last \u003d 0;\n         long position \u003d 0;\n-        while (run \u0026\u0026 reader \u003d\u003d null) {\n+        while (getRun() \u0026\u0026 reader \u003d\u003d null) {\n             try {\n                 reader \u003d new RandomAccessFile(file, RAF_MODE);\n             } catch (FileNotFoundException e) {\n                 listener.fileNotFound();\n             }\n             if (reader \u003d\u003d null) {\n                 try {\n                     Thread.sleep(delayMillis);\n                 } catch (InterruptedException e) {\n                 }\n             } else {\n                 position \u003d end ? file.length() : 0;\n                 last \u003d System.currentTimeMillis();\n                 reader.seek(position);\n             }\n         }\n-        while (run) {\n+        while (getRun()) {\n             boolean newer \u003d FileUtils.isFileNewer(file, last);\n             long length \u003d file.length();\n             if (length \u003c position) {\n                 listener.fileRotated();\n                 try {\n                     RandomAccessFile save \u003d reader;\n                     reader \u003d new RandomAccessFile(file, RAF_MODE);\n                     position \u003d 0;\n                     IOUtils.closeQuietly(save);\n                 } catch (FileNotFoundException e) {\n                     listener.fileNotFound();\n                 }\n                 continue;\n             } else {\n                 if (length \u003e position) {\n                     position \u003d readLines(reader);\n                     last \u003d System.currentTimeMillis();\n                 } else if (newer) {\n                     position \u003d 0;\n                     reader.seek(position);\n                     position \u003d readLines(reader);\n                     last \u003d System.currentTimeMillis();\n                 }\n             }\n             if (reOpen) {\n                 IOUtils.closeQuietly(reader);\n             }\n             try {\n                 Thread.sleep(delayMillis);\n             } catch (InterruptedException e) {\n             }\n-            if (run \u0026\u0026 reOpen) {\n+            if (getRun() \u0026\u0026 reOpen) {\n                 reader \u003d new RandomAccessFile(file, RAF_MODE);\n                 reader.seek(position);\n             }\n         }\n     } catch (Exception e) {\n         listener.handle(e);\n     } finally {\n         IOUtils.closeQuietly(reader);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c395904915ca330d8944d74f9502c0f4bcf65907": {
      "type": "Ybodychange",
      "commitMessage": "[IO-269] Tailer locks file from deletion/rename on Windows.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1348698 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2012/6/11 上午9:09",
      "commitName": "c395904915ca330d8944d74f9502c0f4bcf65907",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "2012/6/8 上午7:54",
      "commitNameOld": "199dd8dfd1cef867ad8712c7565f090f81be0e7f",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 3.05,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void run() {\n    RandomAccessFile reader \u003d null;\n    try {\n        long last \u003d 0;\n        long position \u003d 0;\n        while (run \u0026\u0026 reader \u003d\u003d null) {\n            try {\n                reader \u003d new RandomAccessFile(file, RAF_MODE);\n            } catch (FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader \u003d\u003d null) {\n                try {\n                    Thread.sleep(delayMillis);\n                } catch (InterruptedException e) {\n                }\n            } else {\n                position \u003d end ? file.length() : 0;\n                last \u003d System.currentTimeMillis();\n                reader.seek(position);\n            }\n        }\n        while (run) {\n            boolean newer \u003d FileUtils.isFileNewer(file, last);\n            long length \u003d file.length();\n            if (length \u003c position) {\n                listener.fileRotated();\n                try {\n                    RandomAccessFile save \u003d reader;\n                    reader \u003d new RandomAccessFile(file, RAF_MODE);\n                    position \u003d 0;\n                    IOUtils.closeQuietly(save);\n                } catch (FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length \u003e position) {\n                    position \u003d readLines(reader);\n                    last \u003d System.currentTimeMillis();\n                } else if (newer) {\n                    position \u003d 0;\n                    reader.seek(position);\n                    position \u003d readLines(reader);\n                    last \u003d System.currentTimeMillis();\n                }\n            }\n            if (reOpen) {\n                IOUtils.closeQuietly(reader);\n            }\n            try {\n                Thread.sleep(delayMillis);\n            } catch (InterruptedException e) {\n            }\n            if (run \u0026\u0026 reOpen) {\n                reader \u003d new RandomAccessFile(file, RAF_MODE);\n                reader.seek(position);\n            }\n        }\n    } catch (Exception e) {\n        listener.handle(e);\n    } finally {\n        IOUtils.closeQuietly(reader);\n    }\n}",
      "path": "src/main/java/org/apache/commons/io/input/Tailer.java",
      "functionStartLine": 336,
      "functionName": "run",
      "functionAnnotation": "",
      "functionDoc": "Follows changes in the file, calling the TailerListener\u0027s handle method for each new line.\n",
      "diff": "@@ -1,58 +1,65 @@\n public void run() {\n     RandomAccessFile reader \u003d null;\n     try {\n         long last \u003d 0;\n         long position \u003d 0;\n         while (run \u0026\u0026 reader \u003d\u003d null) {\n             try {\n                 reader \u003d new RandomAccessFile(file, RAF_MODE);\n             } catch (FileNotFoundException e) {\n                 listener.fileNotFound();\n             }\n             if (reader \u003d\u003d null) {\n                 try {\n                     Thread.sleep(delayMillis);\n                 } catch (InterruptedException e) {\n                 }\n             } else {\n                 position \u003d end ? file.length() : 0;\n                 last \u003d System.currentTimeMillis();\n                 reader.seek(position);\n             }\n         }\n         while (run) {\n             boolean newer \u003d FileUtils.isFileNewer(file, last);\n             long length \u003d file.length();\n             if (length \u003c position) {\n                 listener.fileRotated();\n                 try {\n                     RandomAccessFile save \u003d reader;\n                     reader \u003d new RandomAccessFile(file, RAF_MODE);\n                     position \u003d 0;\n                     IOUtils.closeQuietly(save);\n                 } catch (FileNotFoundException e) {\n                     listener.fileNotFound();\n                 }\n                 continue;\n             } else {\n                 if (length \u003e position) {\n                     position \u003d readLines(reader);\n                     last \u003d System.currentTimeMillis();\n                 } else if (newer) {\n                     position \u003d 0;\n                     reader.seek(position);\n                     position \u003d readLines(reader);\n                     last \u003d System.currentTimeMillis();\n                 }\n             }\n+            if (reOpen) {\n+                IOUtils.closeQuietly(reader);\n+            }\n             try {\n                 Thread.sleep(delayMillis);\n             } catch (InterruptedException e) {\n             }\n+            if (run \u0026\u0026 reOpen) {\n+                reader \u003d new RandomAccessFile(file, RAF_MODE);\n+                reader.seek(position);\n+            }\n         }\n     } catch (Exception e) {\n         listener.handle(e);\n     } finally {\n         IOUtils.closeQuietly(reader);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "199dd8dfd1cef867ad8712c7565f090f81be0e7f": {
      "type": "Ybodychange",
      "commitMessage": "IO-279 - Tailer erroneously considers file as new.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1347836 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2012/6/8 上午7:54",
      "commitName": "199dd8dfd1cef867ad8712c7565f090f81be0e7f",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "2012/6/8 上午7:23",
      "commitNameOld": "41dfac731ef973b03f70d8f9c01afc67bc5f311d",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public void run() {\n    RandomAccessFile reader \u003d null;\n    try {\n        long last \u003d 0;\n        long position \u003d 0;\n        while (run \u0026\u0026 reader \u003d\u003d null) {\n            try {\n                reader \u003d new RandomAccessFile(file, RAF_MODE);\n            } catch (FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader \u003d\u003d null) {\n                try {\n                    Thread.sleep(delayMillis);\n                } catch (InterruptedException e) {\n                }\n            } else {\n                position \u003d end ? file.length() : 0;\n                last \u003d System.currentTimeMillis();\n                reader.seek(position);\n            }\n        }\n        while (run) {\n            boolean newer \u003d FileUtils.isFileNewer(file, last);\n            long length \u003d file.length();\n            if (length \u003c position) {\n                listener.fileRotated();\n                try {\n                    RandomAccessFile save \u003d reader;\n                    reader \u003d new RandomAccessFile(file, RAF_MODE);\n                    position \u003d 0;\n                    IOUtils.closeQuietly(save);\n                } catch (FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length \u003e position) {\n                    position \u003d readLines(reader);\n                    last \u003d System.currentTimeMillis();\n                } else if (newer) {\n                    position \u003d 0;\n                    reader.seek(position);\n                    position \u003d readLines(reader);\n                    last \u003d System.currentTimeMillis();\n                }\n            }\n            try {\n                Thread.sleep(delayMillis);\n            } catch (InterruptedException e) {\n            }\n        }\n    } catch (Exception e) {\n        listener.handle(e);\n    } finally {\n        IOUtils.closeQuietly(reader);\n    }\n}",
      "path": "src/main/java/org/apache/commons/io/input/Tailer.java",
      "functionStartLine": 272,
      "functionName": "run",
      "functionAnnotation": "",
      "functionDoc": "Follows changes in the file, calling the TailerListener\u0027s handle method for each new line.\n",
      "diff": "@@ -1,57 +1,58 @@\n public void run() {\n     RandomAccessFile reader \u003d null;\n     try {\n         long last \u003d 0;\n         long position \u003d 0;\n         while (run \u0026\u0026 reader \u003d\u003d null) {\n             try {\n                 reader \u003d new RandomAccessFile(file, RAF_MODE);\n             } catch (FileNotFoundException e) {\n                 listener.fileNotFound();\n             }\n             if (reader \u003d\u003d null) {\n                 try {\n                     Thread.sleep(delayMillis);\n                 } catch (InterruptedException e) {\n                 }\n             } else {\n                 position \u003d end ? file.length() : 0;\n                 last \u003d System.currentTimeMillis();\n                 reader.seek(position);\n             }\n         }\n         while (run) {\n+            boolean newer \u003d FileUtils.isFileNewer(file, last);\n             long length \u003d file.length();\n             if (length \u003c position) {\n                 listener.fileRotated();\n                 try {\n                     RandomAccessFile save \u003d reader;\n                     reader \u003d new RandomAccessFile(file, RAF_MODE);\n                     position \u003d 0;\n                     IOUtils.closeQuietly(save);\n                 } catch (FileNotFoundException e) {\n                     listener.fileNotFound();\n                 }\n                 continue;\n             } else {\n                 if (length \u003e position) {\n-                    last \u003d System.currentTimeMillis();\n                     position \u003d readLines(reader);\n-                } else if (FileUtils.isFileNewer(file, last)) {\n+                    last \u003d System.currentTimeMillis();\n+                } else if (newer) {\n                     position \u003d 0;\n                     reader.seek(position);\n-                    last \u003d System.currentTimeMillis();\n                     position \u003d readLines(reader);\n+                    last \u003d System.currentTimeMillis();\n                 }\n             }\n             try {\n                 Thread.sleep(delayMillis);\n             } catch (InterruptedException e) {\n             }\n         }\n     } catch (Exception e) {\n         listener.handle(e);\n     } finally {\n         IOUtils.closeQuietly(reader);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "24330e7703383c78411225dd9b99ebfe57b31ad5": {
      "type": "Ybodychange",
      "commitMessage": "Rename delay to delayMillis for param name, Javadoc, and private ivar; accessor remains the same.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1345280 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2012/6/2 上午1:30",
      "commitName": "24330e7703383c78411225dd9b99ebfe57b31ad5",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "2012/6/2 上午1:27",
      "commitNameOld": "59ffcad15d220c2bc1f70f01d58bc31dec04b423",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void run() {\n    RandomAccessFile reader \u003d null;\n    try {\n        long last \u003d 0;\n        long position \u003d 0;\n        while (run \u0026\u0026 reader \u003d\u003d null) {\n            try {\n                reader \u003d new RandomAccessFile(file, RAF_MODE);\n            } catch (FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader \u003d\u003d null) {\n                try {\n                    Thread.sleep(delayMillis);\n                } catch (InterruptedException e) {\n                }\n            } else {\n                position \u003d end ? file.length() : 0;\n                last \u003d System.currentTimeMillis();\n                reader.seek(position);\n            }\n        }\n        while (run) {\n            long length \u003d file.length();\n            if (length \u003c position) {\n                listener.fileRotated();\n                try {\n                    RandomAccessFile save \u003d reader;\n                    reader \u003d new RandomAccessFile(file, RAF_MODE);\n                    position \u003d 0;\n                    IOUtils.closeQuietly(save);\n                } catch (FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length \u003e position) {\n                    last \u003d System.currentTimeMillis();\n                    position \u003d readLines(reader);\n                } else if (FileUtils.isFileNewer(file, last)) {\n                    position \u003d 0;\n                    reader.seek(position);\n                    last \u003d System.currentTimeMillis();\n                    position \u003d readLines(reader);\n                }\n            }\n            try {\n                Thread.sleep(delayMillis);\n            } catch (InterruptedException e) {\n            }\n        }\n    } catch (Exception e) {\n        listener.handle(e);\n    } finally {\n        IOUtils.closeQuietly(reader);\n    }\n}",
      "path": "src/main/java/org/apache/commons/io/input/Tailer.java",
      "functionStartLine": 270,
      "functionName": "run",
      "functionAnnotation": "",
      "functionDoc": "Follows changes in the file, calling the TailerListener\u0027s handle method for each new line.\n",
      "diff": "@@ -1,57 +1,57 @@\n public void run() {\n     RandomAccessFile reader \u003d null;\n     try {\n         long last \u003d 0;\n         long position \u003d 0;\n         while (run \u0026\u0026 reader \u003d\u003d null) {\n             try {\n                 reader \u003d new RandomAccessFile(file, RAF_MODE);\n             } catch (FileNotFoundException e) {\n                 listener.fileNotFound();\n             }\n             if (reader \u003d\u003d null) {\n                 try {\n-                    Thread.sleep(delay);\n+                    Thread.sleep(delayMillis);\n                 } catch (InterruptedException e) {\n                 }\n             } else {\n                 position \u003d end ? file.length() : 0;\n                 last \u003d System.currentTimeMillis();\n                 reader.seek(position);\n             }\n         }\n         while (run) {\n             long length \u003d file.length();\n             if (length \u003c position) {\n                 listener.fileRotated();\n                 try {\n                     RandomAccessFile save \u003d reader;\n                     reader \u003d new RandomAccessFile(file, RAF_MODE);\n                     position \u003d 0;\n                     IOUtils.closeQuietly(save);\n                 } catch (FileNotFoundException e) {\n                     listener.fileNotFound();\n                 }\n                 continue;\n             } else {\n                 if (length \u003e position) {\n                     last \u003d System.currentTimeMillis();\n                     position \u003d readLines(reader);\n                 } else if (FileUtils.isFileNewer(file, last)) {\n                     position \u003d 0;\n                     reader.seek(position);\n                     last \u003d System.currentTimeMillis();\n                     position \u003d readLines(reader);\n                 }\n             }\n             try {\n-                Thread.sleep(delay);\n+                Thread.sleep(delayMillis);\n             } catch (InterruptedException e) {\n             }\n         }\n     } catch (Exception e) {\n         listener.handle(e);\n     } finally {\n         IOUtils.closeQuietly(reader);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "59ffcad15d220c2bc1f70f01d58bc31dec04b423": {
      "type": "Ybodychange",
      "commitMessage": "[IO-332] Improve tailer\u0027s reading performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1345279 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2012/6/2 上午1:27",
      "commitName": "59ffcad15d220c2bc1f70f01d58bc31dec04b423",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "2012/3/23 上午4:55",
      "commitNameOld": "cf5c462807a137b823a3155dfe9800b3cbf2303d",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 70.86,
      "commitsBetweenForRepo": 92,
      "commitsBetweenForFile": 1,
      "actualSource": "public void run() {\n    RandomAccessFile reader \u003d null;\n    try {\n        long last \u003d 0;\n        long position \u003d 0;\n        while (run \u0026\u0026 reader \u003d\u003d null) {\n            try {\n                reader \u003d new RandomAccessFile(file, RAF_MODE);\n            } catch (FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader \u003d\u003d null) {\n                try {\n                    Thread.sleep(delay);\n                } catch (InterruptedException e) {\n                }\n            } else {\n                position \u003d end ? file.length() : 0;\n                last \u003d System.currentTimeMillis();\n                reader.seek(position);\n            }\n        }\n        while (run) {\n            long length \u003d file.length();\n            if (length \u003c position) {\n                listener.fileRotated();\n                try {\n                    RandomAccessFile save \u003d reader;\n                    reader \u003d new RandomAccessFile(file, RAF_MODE);\n                    position \u003d 0;\n                    IOUtils.closeQuietly(save);\n                } catch (FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length \u003e position) {\n                    last \u003d System.currentTimeMillis();\n                    position \u003d readLines(reader);\n                } else if (FileUtils.isFileNewer(file, last)) {\n                    position \u003d 0;\n                    reader.seek(position);\n                    last \u003d System.currentTimeMillis();\n                    position \u003d readLines(reader);\n                }\n            }\n            try {\n                Thread.sleep(delay);\n            } catch (InterruptedException e) {\n            }\n        }\n    } catch (Exception e) {\n        listener.handle(e);\n    } finally {\n        IOUtils.closeQuietly(reader);\n    }\n}",
      "path": "src/main/java/org/apache/commons/io/input/Tailer.java",
      "functionStartLine": 270,
      "functionName": "run",
      "functionAnnotation": "",
      "functionDoc": "Follows changes in the file, calling the TailerListener\u0027s handle method for each new line.\n",
      "diff": "@@ -1,57 +1,57 @@\n public void run() {\n     RandomAccessFile reader \u003d null;\n     try {\n         long last \u003d 0;\n         long position \u003d 0;\n         while (run \u0026\u0026 reader \u003d\u003d null) {\n             try {\n-                reader \u003d new RandomAccessFile(file, \"r\");\n+                reader \u003d new RandomAccessFile(file, RAF_MODE);\n             } catch (FileNotFoundException e) {\n                 listener.fileNotFound();\n             }\n             if (reader \u003d\u003d null) {\n                 try {\n                     Thread.sleep(delay);\n                 } catch (InterruptedException e) {\n                 }\n             } else {\n                 position \u003d end ? file.length() : 0;\n                 last \u003d System.currentTimeMillis();\n                 reader.seek(position);\n             }\n         }\n         while (run) {\n             long length \u003d file.length();\n             if (length \u003c position) {\n                 listener.fileRotated();\n                 try {\n                     RandomAccessFile save \u003d reader;\n-                    reader \u003d new RandomAccessFile(file, \"r\");\n+                    reader \u003d new RandomAccessFile(file, RAF_MODE);\n                     position \u003d 0;\n                     IOUtils.closeQuietly(save);\n                 } catch (FileNotFoundException e) {\n                     listener.fileNotFound();\n                 }\n                 continue;\n             } else {\n                 if (length \u003e position) {\n                     last \u003d System.currentTimeMillis();\n                     position \u003d readLines(reader);\n                 } else if (FileUtils.isFileNewer(file, last)) {\n                     position \u003d 0;\n                     reader.seek(position);\n                     last \u003d System.currentTimeMillis();\n                     position \u003d readLines(reader);\n                 }\n             }\n             try {\n                 Thread.sleep(delay);\n             } catch (InterruptedException e) {\n             }\n         }\n     } catch (Exception e) {\n         listener.handle(e);\n     } finally {\n         IOUtils.closeQuietly(reader);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f6c8dcc99db1929435fd8bb05dc0cf77e956e6e6": {
      "type": "Ybodychange",
      "commitMessage": "IO-177 Should be handling InterruptedException when sleeping - not calling the exception handler\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005921 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2010/10/9 上午1:41",
      "commitName": "f6c8dcc99db1929435fd8bb05dc0cf77e956e6e6",
      "commitAuthor": "Niall Pemberton",
      "commitDateOld": "2010/10/5 上午2:54",
      "commitNameOld": "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a",
      "commitAuthorOld": "Niall Pemberton",
      "daysBetweenCommits": 3.95,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "actualSource": "public void run() {\n    RandomAccessFile reader \u003d null;\n    try {\n        long last \u003d 0;\n        long position \u003d 0;\n        while (run \u0026\u0026 reader \u003d\u003d null) {\n            try {\n                reader \u003d new RandomAccessFile(file, \"r\");\n            } catch (FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader \u003d\u003d null) {\n                try {\n                    Thread.sleep(delay);\n                } catch (InterruptedException e) {\n                }\n            } else {\n                position \u003d end ? file.length() : 0;\n                last \u003d System.currentTimeMillis();\n                reader.seek(position);\n            }\n        }\n        while (run) {\n            long length \u003d file.length();\n            if (length \u003c position) {\n                listener.fileRotated();\n                try {\n                    RandomAccessFile save \u003d reader;\n                    reader \u003d new RandomAccessFile(file, \"r\");\n                    position \u003d 0;\n                    IOUtils.closeQuietly(save);\n                } catch (FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length \u003e position) {\n                    last \u003d System.currentTimeMillis();\n                    position \u003d readLines(reader);\n                } else if (FileUtils.isFileNewer(file, last)) {\n                    position \u003d 0;\n                    reader.seek(position);\n                    last \u003d System.currentTimeMillis();\n                    position \u003d readLines(reader);\n                }\n            }\n            try {\n                Thread.sleep(delay);\n            } catch (InterruptedException e) {\n            }\n        }\n    } catch (Exception e) {\n        listener.handle(e);\n    } finally {\n        IOUtils.closeQuietly(reader);\n    }\n}",
      "path": "src/main/java/org/apache/commons/io/input/Tailer.java",
      "functionStartLine": 181,
      "functionName": "run",
      "functionAnnotation": "",
      "functionDoc": "Follows changes in the file, calling the TailerListener\u0027s handle method for each new line.\n",
      "diff": "@@ -1,51 +1,57 @@\n public void run() {\n     RandomAccessFile reader \u003d null;\n     try {\n         long last \u003d 0;\n         long position \u003d 0;\n         while (run \u0026\u0026 reader \u003d\u003d null) {\n             try {\n                 reader \u003d new RandomAccessFile(file, \"r\");\n             } catch (FileNotFoundException e) {\n                 listener.fileNotFound();\n             }\n             if (reader \u003d\u003d null) {\n-                Thread.sleep(delay);\n+                try {\n+                    Thread.sleep(delay);\n+                } catch (InterruptedException e) {\n+                }\n             } else {\n                 position \u003d end ? file.length() : 0;\n                 last \u003d System.currentTimeMillis();\n                 reader.seek(position);\n             }\n         }\n         while (run) {\n             long length \u003d file.length();\n             if (length \u003c position) {\n                 listener.fileRotated();\n                 try {\n                     RandomAccessFile save \u003d reader;\n                     reader \u003d new RandomAccessFile(file, \"r\");\n                     position \u003d 0;\n                     IOUtils.closeQuietly(save);\n                 } catch (FileNotFoundException e) {\n                     listener.fileNotFound();\n                 }\n                 continue;\n             } else {\n                 if (length \u003e position) {\n                     last \u003d System.currentTimeMillis();\n                     position \u003d readLines(reader);\n                 } else if (FileUtils.isFileNewer(file, last)) {\n                     position \u003d 0;\n                     reader.seek(position);\n                     last \u003d System.currentTimeMillis();\n                     position \u003d readLines(reader);\n                 }\n             }\n-            Thread.sleep(delay);\n+            try {\n+                Thread.sleep(delay);\n+            } catch (InterruptedException e) {\n+            }\n         }\n     } catch (Exception e) {\n         listener.handle(e);\n     } finally {\n         IOUtils.closeQuietly(reader);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a": {
      "type": "Yfilerename",
      "commitMessage": "Build changes - re-organize to standard m2 layout, remove useless JIRA report and fix some Ant issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004358 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2010/10/5 上午2:54",
      "commitName": "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a",
      "commitAuthor": "Niall Pemberton",
      "commitDateOld": "2010/10/5 上午1:54",
      "commitNameOld": "19f48eb1711427a43a5e10c84bbbf1218a08bdd2",
      "commitAuthorOld": "Niall Pemberton",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void run() {\n    RandomAccessFile reader \u003d null;\n    try {\n        long last \u003d 0;\n        long position \u003d 0;\n        while (run \u0026\u0026 reader \u003d\u003d null) {\n            try {\n                reader \u003d new RandomAccessFile(file, \"r\");\n            } catch (FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader \u003d\u003d null) {\n                Thread.sleep(delay);\n            } else {\n                position \u003d end ? file.length() : 0;\n                last \u003d System.currentTimeMillis();\n                reader.seek(position);\n            }\n        }\n        while (run) {\n            long length \u003d file.length();\n            if (length \u003c position) {\n                listener.fileRotated();\n                try {\n                    RandomAccessFile save \u003d reader;\n                    reader \u003d new RandomAccessFile(file, \"r\");\n                    position \u003d 0;\n                    IOUtils.closeQuietly(save);\n                } catch (FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length \u003e position) {\n                    last \u003d System.currentTimeMillis();\n                    position \u003d readLines(reader);\n                } else if (FileUtils.isFileNewer(file, last)) {\n                    position \u003d 0;\n                    reader.seek(position);\n                    last \u003d System.currentTimeMillis();\n                    position \u003d readLines(reader);\n                }\n            }\n            Thread.sleep(delay);\n        }\n    } catch (Exception e) {\n        listener.handle(e);\n    } finally {\n        IOUtils.closeQuietly(reader);\n    }\n}",
      "path": "src/main/java/org/apache/commons/io/input/Tailer.java",
      "functionStartLine": 181,
      "functionName": "run",
      "functionAnnotation": "",
      "functionDoc": "Follows changes in the file, calling the TailerListener\u0027s handle method for each new line.\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/io/input/Tailer.java",
        "newPath": "src/main/java/org/apache/commons/io/input/Tailer.java"
      }
    },
    "4c17f2bcb464dc60c1937ee9ba5c5bbe2a84c2e8": {
      "type": "Ybodychange",
      "commitMessage": "Cannot be null\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003696 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2010/10/2 上午6:38",
      "commitName": "4c17f2bcb464dc60c1937ee9ba5c5bbe2a84c2e8",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "2010/10/1 上午12:56",
      "commitNameOld": "70f4ddc09819068a13fcb522ad08340140d48f37",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 1.24,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "actualSource": "public void run() {\n    RandomAccessFile reader \u003d null;\n    try {\n        long last \u003d 0;\n        long position \u003d 0;\n        while (run \u0026\u0026 reader \u003d\u003d null) {\n            try {\n                reader \u003d new RandomAccessFile(file, \"r\");\n            } catch (FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader \u003d\u003d null) {\n                Thread.sleep(delay);\n            } else {\n                position \u003d end ? file.length() : 0;\n                last \u003d System.currentTimeMillis();\n                reader.seek(position);\n            }\n        }\n        while (run) {\n            long length \u003d file.length();\n            if (length \u003c position) {\n                listener.fileRotated();\n                try {\n                    RandomAccessFile save \u003d reader;\n                    reader \u003d new RandomAccessFile(file, \"r\");\n                    position \u003d 0;\n                    IOUtils.closeQuietly(save);\n                } catch (FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length \u003e position) {\n                    last \u003d System.currentTimeMillis();\n                    position \u003d readLines(reader);\n                } else if (FileUtils.isFileNewer(file, last)) {\n                    position \u003d 0;\n                    reader.seek(position);\n                    last \u003d System.currentTimeMillis();\n                    position \u003d readLines(reader);\n                }\n            }\n            Thread.sleep(delay);\n        }\n    } catch (Exception e) {\n        listener.handle(e);\n    } finally {\n        IOUtils.closeQuietly(reader);\n    }\n}",
      "path": "src/java/org/apache/commons/io/input/Tailer.java",
      "functionStartLine": 178,
      "functionName": "run",
      "functionAnnotation": "",
      "functionDoc": "Follows changes in the file, calling the TailerListener\u0027s handle method for each new line.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "cdc2dadd24ee51a464cae08a98fb2da4f8ab4a76": {
      "type": "Ybodychange",
      "commitMessage": "Original code kept the RAF if the re-open failed.\nRevert to the same behaviour, but explicitly close the file\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002933 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2010/9/30 上午10:30",
      "commitName": "cdc2dadd24ee51a464cae08a98fb2da4f8ab4a76",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "2010/9/30 上午10:06",
      "commitNameOld": "230a3c292c67918a019d96f15f2fb30bbb261bc1",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void run() {\n    RandomAccessFile reader \u003d null;\n    try {\n        long last \u003d 0;\n        long position \u003d 0;\n        while (run \u0026\u0026 reader \u003d\u003d null) {\n            try {\n                reader \u003d new RandomAccessFile(file, \"r\");\n            } catch (FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader \u003d\u003d null) {\n                Thread.sleep(delay);\n            } else {\n                position \u003d end ? file.length() : 0;\n                last \u003d System.currentTimeMillis();\n                reader.seek(position);\n            }\n        }\n        while (run) {\n            long length \u003d file.length();\n            if (length \u003c position) {\n                listener.fileRotated();\n                try {\n                    RandomAccessFile save \u003d reader;\n                    reader \u003d new RandomAccessFile(file, \"r\");\n                    position \u003d 0;\n                    IOUtils.closeQuietly(save);\n                } catch (FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length \u003e position) {\n                    last \u003d System.currentTimeMillis();\n                    position \u003d readLines(reader);\n                } else if (FileUtils.isFileNewer(file, last)) {\n                    position \u003d 0;\n                    reader.seek(position);\n                    last \u003d System.currentTimeMillis();\n                    position \u003d readLines(reader);\n                }\n            }\n            Thread.sleep(delay);\n        }\n    } catch (Exception e) {\n        listener.handle(e);\n    } finally {\n        IOUtils.closeQuietly(reader);\n    }\n}",
      "path": "src/java/org/apache/commons/io/input/Tailer.java",
      "functionStartLine": 125,
      "functionName": "run",
      "functionAnnotation": "",
      "functionDoc": "Follows changes in the file, calling the TailerListener\u0027s handle method for each new line.\n",
      "diff": "@@ -1,50 +1,51 @@\n public void run() {\n     RandomAccessFile reader \u003d null;\n     try {\n         long last \u003d 0;\n         long position \u003d 0;\n         while (run \u0026\u0026 reader \u003d\u003d null) {\n             try {\n                 reader \u003d new RandomAccessFile(file, \"r\");\n             } catch (FileNotFoundException e) {\n                 listener.fileNotFound();\n             }\n             if (reader \u003d\u003d null) {\n                 Thread.sleep(delay);\n             } else {\n                 position \u003d end ? file.length() : 0;\n                 last \u003d System.currentTimeMillis();\n                 reader.seek(position);\n             }\n         }\n         while (run) {\n             long length \u003d file.length();\n             if (length \u003c position) {\n                 listener.fileRotated();\n                 try {\n-                    IOUtils.closeQuietly(reader);\n+                    RandomAccessFile save \u003d reader;\n                     reader \u003d new RandomAccessFile(file, \"r\");\n                     position \u003d 0;\n+                    IOUtils.closeQuietly(save);\n                 } catch (FileNotFoundException e) {\n                     listener.fileNotFound();\n                 }\n                 continue;\n             } else {\n                 if (length \u003e position) {\n                     last \u003d System.currentTimeMillis();\n                     position \u003d readLines(reader);\n                 } else if (FileUtils.isFileNewer(file, last)) {\n                     position \u003d 0;\n                     reader.seek(position);\n                     last \u003d System.currentTimeMillis();\n                     position \u003d readLines(reader);\n                 }\n             }\n             Thread.sleep(delay);\n         }\n     } catch (Exception e) {\n         listener.handle(e);\n     } finally {\n         IOUtils.closeQuietly(reader);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "230a3c292c67918a019d96f15f2fb30bbb261bc1": {
      "type": "Ybodychange",
      "commitMessage": "Ensure file is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002931 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2010/9/30 上午10:06",
      "commitName": "230a3c292c67918a019d96f15f2fb30bbb261bc1",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "2010/9/30 上午9:43",
      "commitNameOld": "9f17760e3ea10bc221a006e10728c611f3b8ba01",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void run() {\n    RandomAccessFile reader \u003d null;\n    try {\n        long last \u003d 0;\n        long position \u003d 0;\n        while (run \u0026\u0026 reader \u003d\u003d null) {\n            try {\n                reader \u003d new RandomAccessFile(file, \"r\");\n            } catch (FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader \u003d\u003d null) {\n                Thread.sleep(delay);\n            } else {\n                position \u003d end ? file.length() : 0;\n                last \u003d System.currentTimeMillis();\n                reader.seek(position);\n            }\n        }\n        while (run) {\n            long length \u003d file.length();\n            if (length \u003c position) {\n                listener.fileRotated();\n                try {\n                    IOUtils.closeQuietly(reader);\n                    reader \u003d new RandomAccessFile(file, \"r\");\n                    position \u003d 0;\n                } catch (FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length \u003e position) {\n                    last \u003d System.currentTimeMillis();\n                    position \u003d readLines(reader);\n                } else if (FileUtils.isFileNewer(file, last)) {\n                    position \u003d 0;\n                    reader.seek(position);\n                    last \u003d System.currentTimeMillis();\n                    position \u003d readLines(reader);\n                }\n            }\n            Thread.sleep(delay);\n        }\n    } catch (Exception e) {\n        listener.handle(e);\n    } finally {\n        IOUtils.closeQuietly(reader);\n    }\n}",
      "path": "src/java/org/apache/commons/io/input/Tailer.java",
      "functionStartLine": 125,
      "functionName": "run",
      "functionAnnotation": "",
      "functionDoc": "Follows changes in the file, calling the TailerListener\u0027s handle method for each new line.\n",
      "diff": "@@ -1,47 +1,50 @@\n public void run() {\n+    RandomAccessFile reader \u003d null;\n     try {\n         long last \u003d 0;\n         long position \u003d 0;\n-        RandomAccessFile reader \u003d null;\n         while (run \u0026\u0026 reader \u003d\u003d null) {\n             try {\n                 reader \u003d new RandomAccessFile(file, \"r\");\n             } catch (FileNotFoundException e) {\n                 listener.fileNotFound();\n             }\n             if (reader \u003d\u003d null) {\n                 Thread.sleep(delay);\n             } else {\n                 position \u003d end ? file.length() : 0;\n                 last \u003d System.currentTimeMillis();\n                 reader.seek(position);\n             }\n         }\n         while (run) {\n             long length \u003d file.length();\n             if (length \u003c position) {\n                 listener.fileRotated();\n                 try {\n+                    IOUtils.closeQuietly(reader);\n                     reader \u003d new RandomAccessFile(file, \"r\");\n                     position \u003d 0;\n                 } catch (FileNotFoundException e) {\n                     listener.fileNotFound();\n                 }\n                 continue;\n             } else {\n                 if (length \u003e position) {\n                     last \u003d System.currentTimeMillis();\n                     position \u003d readLines(reader);\n                 } else if (FileUtils.isFileNewer(file, last)) {\n                     position \u003d 0;\n                     reader.seek(position);\n                     last \u003d System.currentTimeMillis();\n                     position \u003d readLines(reader);\n                 }\n             }\n             Thread.sleep(delay);\n         }\n     } catch (Exception e) {\n         listener.handle(e);\n+    } finally {\n+        IOUtils.closeQuietly(reader);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "25032e70cbf8cb14de334a5002811852867d16dd": {
      "type": "Ybodychange",
      "commitMessage": "Localise variables to run() method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002922 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2010/9/30 上午9:40",
      "commitName": "25032e70cbf8cb14de334a5002811852867d16dd",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "2010/9/30 上午9:08",
      "commitNameOld": "a32a395a621098ce652ee8158e6320fa422f9fa3",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public void run() {\n    try {\n        long last \u003d 0;\n        long position \u003d 0;\n        RandomAccessFile reader \u003d null;\n        while (run \u0026\u0026 reader \u003d\u003d null) {\n            try {\n                reader \u003d new RandomAccessFile(file, \"r\");\n            } catch (FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader \u003d\u003d null) {\n                Thread.sleep(delay);\n            } else {\n                position \u003d end ? file.length() : 0;\n                last \u003d System.currentTimeMillis();\n                reader.seek(position);\n            }\n        }\n        while (run) {\n            long length \u003d file.length();\n            if (length \u003c position) {\n                listener.fileRotated();\n                try {\n                    reader \u003d new RandomAccessFile(file, \"r\");\n                    position \u003d 0;\n                } catch (FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length \u003e position) {\n                    last \u003d System.currentTimeMillis();\n                    position \u003d readLines(reader);\n                } else if (FileUtils.isFileNewer(file, last)) {\n                    position \u003d 0;\n                    reader.seek(position);\n                    last \u003d System.currentTimeMillis();\n                    position \u003d readLines(reader);\n                }\n            }\n            Thread.sleep(delay);\n        }\n    } catch (Exception e) {\n        listener.handle(e);\n    }\n}",
      "path": "src/java/org/apache/commons/io/input/Tailer.java",
      "functionStartLine": 124,
      "functionName": "run",
      "functionAnnotation": "",
      "functionDoc": "Follows changes in the file, calling the TailerListener\u0027s handle method for each new line.\n",
      "diff": "@@ -1,42 +1,47 @@\n public void run() {\n     try {\n+        long last \u003d 0;\n+        long position \u003d 0;\n+        RandomAccessFile reader \u003d null;\n         while (run \u0026\u0026 reader \u003d\u003d null) {\n             try {\n                 reader \u003d new RandomAccessFile(file, \"r\");\n             } catch (FileNotFoundException e) {\n                 listener.fileNotFound();\n             }\n             if (reader \u003d\u003d null) {\n                 Thread.sleep(delay);\n             } else {\n                 position \u003d end ? file.length() : 0;\n                 last \u003d System.currentTimeMillis();\n                 reader.seek(position);\n             }\n         }\n         while (run) {\n             long length \u003d file.length();\n             if (length \u003c position) {\n                 listener.fileRotated();\n                 try {\n                     reader \u003d new RandomAccessFile(file, \"r\");\n                     position \u003d 0;\n                 } catch (FileNotFoundException e) {\n                     listener.fileNotFound();\n                 }\n                 continue;\n             } else {\n                 if (length \u003e position) {\n-                    readLines();\n+                    last \u003d System.currentTimeMillis();\n+                    position \u003d readLines(reader);\n                 } else if (FileUtils.isFileNewer(file, last)) {\n                     position \u003d 0;\n                     reader.seek(position);\n-                    readLines();\n+                    last \u003d System.currentTimeMillis();\n+                    position \u003d readLines(reader);\n                 }\n             }\n             Thread.sleep(delay);\n         }\n     } catch (Exception e) {\n         listener.handle(e);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a32a395a621098ce652ee8158e6320fa422f9fa3": {
      "type": "Ybodychange",
      "commitMessage": "Add test for and fix NPE if thread stopped with no file found\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002918 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2010/9/30 上午9:08",
      "commitName": "a32a395a621098ce652ee8158e6320fa422f9fa3",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "2010/9/30 上午8:33",
      "commitNameOld": "317841f44a515e57356fe50d7eb1be15030dfb5b",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public void run() {\n    try {\n        while (run \u0026\u0026 reader \u003d\u003d null) {\n            try {\n                reader \u003d new RandomAccessFile(file, \"r\");\n            } catch (FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader \u003d\u003d null) {\n                Thread.sleep(delay);\n            } else {\n                position \u003d end ? file.length() : 0;\n                last \u003d System.currentTimeMillis();\n                reader.seek(position);\n            }\n        }\n        while (run) {\n            long length \u003d file.length();\n            if (length \u003c position) {\n                listener.fileRotated();\n                try {\n                    reader \u003d new RandomAccessFile(file, \"r\");\n                    position \u003d 0;\n                } catch (FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length \u003e position) {\n                    readLines();\n                } else if (FileUtils.isFileNewer(file, last)) {\n                    position \u003d 0;\n                    reader.seek(position);\n                    readLines();\n                }\n            }\n            Thread.sleep(delay);\n        }\n    } catch (Exception e) {\n        listener.handle(e);\n    }\n}",
      "path": "src/java/org/apache/commons/io/input/Tailer.java",
      "functionStartLine": 139,
      "functionName": "run",
      "functionAnnotation": "",
      "functionDoc": "Follows changes in the file, calling the TailerListener\u0027s handle method for each new line.\n",
      "diff": "@@ -1,41 +1,42 @@\n public void run() {\n     try {\n         while (run \u0026\u0026 reader \u003d\u003d null) {\n             try {\n                 reader \u003d new RandomAccessFile(file, \"r\");\n             } catch (FileNotFoundException e) {\n                 listener.fileNotFound();\n             }\n             if (reader \u003d\u003d null) {\n                 Thread.sleep(delay);\n+            } else {\n+                position \u003d end ? file.length() : 0;\n+                last \u003d System.currentTimeMillis();\n+                reader.seek(position);\n             }\n         }\n-        position \u003d end ? file.length() : 0;\n-        last \u003d System.currentTimeMillis();\n-        reader.seek(position);\n         while (run) {\n             long length \u003d file.length();\n             if (length \u003c position) {\n                 listener.fileRotated();\n                 try {\n                     reader \u003d new RandomAccessFile(file, \"r\");\n                     position \u003d 0;\n                 } catch (FileNotFoundException e) {\n                     listener.fileNotFound();\n                 }\n                 continue;\n             } else {\n                 if (length \u003e position) {\n                     readLines();\n                 } else if (FileUtils.isFileNewer(file, last)) {\n                     position \u003d 0;\n                     reader.seek(position);\n                     readLines();\n                 }\n             }\n             Thread.sleep(delay);\n         }\n     } catch (Exception e) {\n         listener.handle(e);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "587f5571c6eb5a55b752fd7bfd66c2c535f5e566": {
      "type": "Yintroduced",
      "commitMessage": "IO-177 New Tailer class - Simple implementation of the unix \"tail -f\" functionality - thanks to Jeff Rodriguez for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002844 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2010/9/30 上午4:56",
      "commitName": "587f5571c6eb5a55b752fd7bfd66c2c535f5e566",
      "commitAuthor": "Niall Pemberton",
      "diff": "@@ -0,0 +1,41 @@\n+public void run() {\n+    try {\n+        while (run \u0026\u0026 reader \u003d\u003d null) {\n+            try {\n+                reader \u003d new RandomAccessFile(file, \"r\");\n+            } catch (FileNotFoundException e) {\n+                listener.fileNotFound();\n+            }\n+            if (reader \u003d\u003d null) {\n+                Thread.sleep(delay);\n+            }\n+        }\n+        position \u003d end ? file.length() : 0;\n+        last \u003d System.currentTimeMillis();\n+        reader.seek(position);\n+        while (run) {\n+            long length \u003d file.length();\n+            if (length \u003c position) {\n+                listener.fileRotated();\n+                try {\n+                    reader \u003d new RandomAccessFile(file, \"r\");\n+                    position \u003d 0;\n+                } catch (FileNotFoundException e) {\n+                    listener.fileNotFound();\n+                }\n+                continue;\n+            } else {\n+                if (length \u003e position) {\n+                    readLines();\n+                } else if (FileUtils.isFileNewer(file, last)) {\n+                    position \u003d 0;\n+                    reader.seek(position);\n+                    readLines();\n+                }\n+            }\n+            Thread.sleep(delay);\n+        }\n+    } catch (Exception e) {\n+        listener.handle(e);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void run() {\n    try {\n        while (run \u0026\u0026 reader \u003d\u003d null) {\n            try {\n                reader \u003d new RandomAccessFile(file, \"r\");\n            } catch (FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader \u003d\u003d null) {\n                Thread.sleep(delay);\n            }\n        }\n        position \u003d end ? file.length() : 0;\n        last \u003d System.currentTimeMillis();\n        reader.seek(position);\n        while (run) {\n            long length \u003d file.length();\n            if (length \u003c position) {\n                listener.fileRotated();\n                try {\n                    reader \u003d new RandomAccessFile(file, \"r\");\n                    position \u003d 0;\n                } catch (FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length \u003e position) {\n                    readLines();\n                } else if (FileUtils.isFileNewer(file, last)) {\n                    position \u003d 0;\n                    reader.seek(position);\n                    readLines();\n                }\n            }\n            Thread.sleep(delay);\n        }\n    } catch (Exception e) {\n        listener.handle(e);\n    }\n}",
      "path": "src/java/org/apache/commons/io/input/Tailer.java",
      "functionStartLine": 139,
      "functionName": "run",
      "functionAnnotation": "",
      "functionDoc": "Follows changes in the file, calling the TailerListener\u0027s handle method for each new line.\n"
    }
  }
}