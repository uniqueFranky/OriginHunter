{
  "origin": "codeshovel",
  "repositoryName": "scikit-learn",
  "repositoryPath": "/Users/franky/Documents/Homework/毕业设计/testcase/scikit-learn/.git",
  "startCommitName": "9e5819aa413ce907134ee5704abba43ad8a61827",
  "sourceFileName": "_classes.py",
  "functionName": "_validate_X_predict",
  "functionId": "BaseDecisionTree___validate_X_predict___self__X__check_input",
  "sourceFilePath": "sklearn/tree/_classes.py",
  "functionAnnotation": "",
  "functionStartLine": 377,
  "functionEndLine": 394,
  "numCommitsSeen": 415,
  "timeTaken": 3756,
  "changeHistory": [
    "437ca0553ce8d97571cecc3f4df8493e5cf959c5",
    "834608ec1dc5de20b25411f283df739fc110478b",
    "77665e3c319a2e8887424a5872f1aac9eb844319",
    "92bda9794fdd913426c660e9d1e208a83f8d341f",
    "294a6219e28daffb505893e1ff9529dc86633a87",
    "4ffbf34588e66d10a6ae79d7692c66c83f7edbab"
  ],
  "changeHistoryShort": {
    "437ca0553ce8d97571cecc3f4df8493e5cf959c5": "Yfilerename",
    "834608ec1dc5de20b25411f283df739fc110478b": "Ybodychange",
    "77665e3c319a2e8887424a5872f1aac9eb844319": "Ybodychange",
    "92bda9794fdd913426c660e9d1e208a83f8d341f": "Ybodychange",
    "294a6219e28daffb505893e1ff9529dc86633a87": "Ybodychange",
    "4ffbf34588e66d10a6ae79d7692c66c83f7edbab": "Yintroduced"
  },
  "changeHistoryDetails": {
    "437ca0553ce8d97571cecc3f4df8493e5cf959c5": {
      "type": "Yfilerename",
      "commitMessage": "MNT Makes modules in tree and ensemble private (#14964)\n\n",
      "commitDate": "2019/10/16 下午10:39",
      "commitName": "437ca0553ce8d97571cecc3f4df8493e5cf959c5",
      "commitAuthor": "Adrin Jalali",
      "commitDateOld": "2019/10/16 下午8:24",
      "commitNameOld": "283a61384e094165ed06186230f9f002b81296da",
      "commitAuthorOld": "jeremiedbb",
      "daysBetweenCommits": 0.09,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "    def _validate_X_predict(self, X, check_input):\n        \"\"\"Validate X whenever one tries to predict, apply, predict_proba\"\"\"\n        if check_input:\n            X \u003d check_array(X, dtype\u003dDTYPE, accept_sparse\u003d\"csr\")\n            if issparse(X) and (X.indices.dtype !\u003d np.intc or\n                                X.indptr.dtype !\u003d np.intc):\n                raise ValueError(\"No support for np.int64 index based \"\n                                 \"sparse matrices\")\n\n        n_features \u003d X.shape[1]\n        if self.n_features_ !\u003d n_features:\n            raise ValueError(\"Number of features of the model must \"\n                             \"match the input. Model n_features is %s and \"\n                             \"input n_features is %s \"\n                             % (self.n_features_, n_features))\n\n        return X\n",
      "path": "sklearn/tree/_classes.py",
      "functionStartLine": 376,
      "functionName": "_validate_X_predict",
      "functionAnnotation": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "sklearn/tree/tree.py",
        "newPath": "sklearn/tree/_classes.py"
      }
    },
    "834608ec1dc5de20b25411f283df739fc110478b": {
      "type": "Ybodychange",
      "commitMessage": "MAINT Remove unused condition (#8778)\n\n",
      "commitDate": "2017/4/23 下午8:14",
      "commitName": "834608ec1dc5de20b25411f283df739fc110478b",
      "commitAuthor": "Hanmin Qin",
      "commitDateOld": "2017/4/9 下午11:16",
      "commitNameOld": "7d1e430cd9349c64198cae4a9e4f88422d988d49",
      "commitAuthorOld": "Peter Csizsek",
      "daysBetweenCommits": 13.87,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "actualSource": "    def _validate_X_predict(self, X, check_input):\n        \"\"\"Validate X whenever one tries to predict, apply, predict_proba\"\"\"\n        if check_input:\n            X \u003d check_array(X, dtype\u003dDTYPE, accept_sparse\u003d\"csr\")\n            if issparse(X) and (X.indices.dtype !\u003d np.intc or\n                                X.indptr.dtype !\u003d np.intc):\n                raise ValueError(\"No support for np.int64 index based \"\n                                 \"sparse matrices\")\n\n        n_features \u003d X.shape[1]\n        if self.n_features_ !\u003d n_features:\n            raise ValueError(\"Number of features of the model must \"\n                             \"match the input. Model n_features is %s and \"\n                             \"input n_features is %s \"\n                             % (self.n_features_, n_features))\n\n        return X\n",
      "path": "sklearn/tree/tree.py",
      "functionStartLine": 370,
      "functionName": "_validate_X_predict",
      "functionAnnotation": "",
      "diff": "@@ -1,21 +1,17 @@\n     def _validate_X_predict(self, X, check_input):\n         \"\"\"Validate X whenever one tries to predict, apply, predict_proba\"\"\"\n-        if self.tree_ is None:\n-            raise NotFittedError(\"Estimator not fitted, \"\n-                                 \"call `fit` before exploiting the model.\")\n-\n         if check_input:\n             X \u003d check_array(X, dtype\u003dDTYPE, accept_sparse\u003d\"csr\")\n             if issparse(X) and (X.indices.dtype !\u003d np.intc or\n                                 X.indptr.dtype !\u003d np.intc):\n                 raise ValueError(\"No support for np.int64 index based \"\n                                  \"sparse matrices\")\n \n         n_features \u003d X.shape[1]\n         if self.n_features_ !\u003d n_features:\n             raise ValueError(\"Number of features of the model must \"\n                              \"match the input. Model n_features is %s and \"\n                              \"input n_features is %s \"\n                              % (self.n_features_, n_features))\n \n         return X\n",
      "extendedDetails": {}
    },
    "77665e3c319a2e8887424a5872f1aac9eb844319": {
      "type": "Ybodychange",
      "commitMessage": "removes extra spaces from error message\n\nI unfortunately got to know this error message too well when my data-formatting pipeline encountered a bug :)",
      "commitDate": "2015/11/5 下午1:44",
      "commitName": "77665e3c319a2e8887424a5872f1aac9eb844319",
      "commitAuthor": "Preston Parry",
      "commitDateOld": "2015/11/4 上午7:02",
      "commitNameOld": "f2e35411faa48829757c683d411ac503e7762d84",
      "commitAuthorOld": "KamalakerDadi",
      "daysBetweenCommits": 1.28,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "    def _validate_X_predict(self, X, check_input):\n        \"\"\"Validate X whenever one tries to predict, apply, predict_proba\"\"\"\n        if self.tree_ is None:\n            raise NotFittedError(\"Estimator not fitted, \"\n                                 \"call `fit` before exploiting the model.\")\n\n        if check_input:\n            X \u003d check_array(X, dtype\u003dDTYPE, accept_sparse\u003d\"csr\")\n            if issparse(X) and (X.indices.dtype !\u003d np.intc or\n                                X.indptr.dtype !\u003d np.intc):\n                raise ValueError(\"No support for np.int64 index based \"\n                                 \"sparse matrices\")\n\n        n_features \u003d X.shape[1]\n        if self.n_features_ !\u003d n_features:\n            raise ValueError(\"Number of features of the model must \"\n                             \"match the input. Model n_features is %s and \"\n                             \"input n_features is %s \"\n                             % (self.n_features_, n_features))\n\n        return X\n",
      "path": "sklearn/tree/tree.py",
      "functionStartLine": 376,
      "functionName": "_validate_X_predict",
      "functionAnnotation": "",
      "diff": "@@ -1,21 +1,21 @@\n     def _validate_X_predict(self, X, check_input):\n         \"\"\"Validate X whenever one tries to predict, apply, predict_proba\"\"\"\n         if self.tree_ is None:\n             raise NotFittedError(\"Estimator not fitted, \"\n                                  \"call `fit` before exploiting the model.\")\n \n         if check_input:\n             X \u003d check_array(X, dtype\u003dDTYPE, accept_sparse\u003d\"csr\")\n             if issparse(X) and (X.indices.dtype !\u003d np.intc or\n                                 X.indptr.dtype !\u003d np.intc):\n                 raise ValueError(\"No support for np.int64 index based \"\n                                  \"sparse matrices\")\n \n         n_features \u003d X.shape[1]\n         if self.n_features_ !\u003d n_features:\n             raise ValueError(\"Number of features of the model must \"\n-                             \" match the input. Model n_features is %s and \"\n-                             \" input n_features is %s \"\n+                             \"match the input. Model n_features is %s and \"\n+                             \"input n_features is %s \"\n                              % (self.n_features_, n_features))\n \n         return X\n",
      "extendedDetails": {}
    },
    "92bda9794fdd913426c660e9d1e208a83f8d341f": {
      "type": "Ybodychange",
      "commitMessage": "DOC use same error message in decision tree and random forest\n",
      "commitDate": "2015/4/20 下午11:27",
      "commitName": "92bda9794fdd913426c660e9d1e208a83f8d341f",
      "commitAuthor": "Arnaud Joly",
      "commitDateOld": "2015/4/20 下午11:27",
      "commitNameOld": "294a6219e28daffb505893e1ff9529dc86633a87",
      "commitAuthorOld": "Arnaud Joly",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "    def _validate_X_predict(self, X, check_input):\n        \"\"\"Validate X whenever one tries to predict, apply, predict_proba\"\"\"\n        if self.tree_ is None:\n            raise NotFittedError(\"Estimator not fitted, \"\n                                 \"call `fit` before exploiting the model.\")\n\n        if check_input:\n            X \u003d check_array(X, dtype\u003dDTYPE, accept_sparse\u003d\"csr\")\n            if issparse(X) and (X.indices.dtype !\u003d np.intc or\n                                X.indptr.dtype !\u003d np.intc):\n                raise ValueError(\"No support for np.int64 index based \"\n                                 \"sparse matrices\")\n\n        n_features \u003d X.shape[1]\n        if self.n_features_ !\u003d n_features:\n            raise ValueError(\"Number of features of the model must \"\n                             \" match the input. Model n_features is %s and \"\n                             \" input n_features is %s \"\n                             % (self.n_features_, n_features))\n\n        return X\n",
      "path": "sklearn/tree/tree.py",
      "functionStartLine": 312,
      "functionName": "_validate_X_predict",
      "functionAnnotation": "",
      "diff": "@@ -1,20 +1,21 @@\n     def _validate_X_predict(self, X, check_input):\n         \"\"\"Validate X whenever one tries to predict, apply, predict_proba\"\"\"\n         if self.tree_ is None:\n-            raise NotFittedError(\"Tree not initialized. Perform a fit first\")\n+            raise NotFittedError(\"Estimator not fitted, \"\n+                                 \"call `fit` before exploiting the model.\")\n \n         if check_input:\n             X \u003d check_array(X, dtype\u003dDTYPE, accept_sparse\u003d\"csr\")\n             if issparse(X) and (X.indices.dtype !\u003d np.intc or\n                                 X.indptr.dtype !\u003d np.intc):\n                 raise ValueError(\"No support for np.int64 index based \"\n                                  \"sparse matrices\")\n \n         n_features \u003d X.shape[1]\n         if self.n_features_ !\u003d n_features:\n             raise ValueError(\"Number of features of the model must \"\n                              \" match the input. Model n_features is %s and \"\n                              \" input n_features is %s \"\n                              % (self.n_features_, n_features))\n \n         return X\n",
      "extendedDetails": {}
    },
    "294a6219e28daffb505893e1ff9529dc86633a87": {
      "type": "Ybodychange",
      "commitMessage": "FIX properly raised not fitted error\n",
      "commitDate": "2015/4/20 下午11:27",
      "commitName": "294a6219e28daffb505893e1ff9529dc86633a87",
      "commitAuthor": "Arnaud Joly",
      "commitDateOld": "2015/4/20 下午11:27",
      "commitNameOld": "4ffbf34588e66d10a6ae79d7692c66c83f7edbab",
      "commitAuthorOld": "Arnaud Joly",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "    def _validate_X_predict(self, X, check_input):\n        \"\"\"Validate X whenever one tries to predict, apply, predict_proba\"\"\"\n        if self.tree_ is None:\n            raise NotFittedError(\"Tree not initialized. Perform a fit first\")\n\n        if check_input:\n            X \u003d check_array(X, dtype\u003dDTYPE, accept_sparse\u003d\"csr\")\n            if issparse(X) and (X.indices.dtype !\u003d np.intc or\n                                X.indptr.dtype !\u003d np.intc):\n                raise ValueError(\"No support for np.int64 index based \"\n                                 \"sparse matrices\")\n\n        n_features \u003d X.shape[1]\n        if self.n_features_ !\u003d n_features:\n            raise ValueError(\"Number of features of the model must \"\n                             \" match the input. Model n_features is %s and \"\n                             \" input n_features is %s \"\n                             % (self.n_features_, n_features))\n\n        return X\n",
      "path": "sklearn/tree/tree.py",
      "functionStartLine": 312,
      "functionName": "_validate_X_predict",
      "functionAnnotation": "",
      "diff": "@@ -1,20 +1,20 @@\n     def _validate_X_predict(self, X, check_input):\n-        \"\"\"Validate X whenever one try to predict, apply, predict_proba\"\"\"\n+        \"\"\"Validate X whenever one tries to predict, apply, predict_proba\"\"\"\n         if self.tree_ is None:\n             raise NotFittedError(\"Tree not initialized. Perform a fit first\")\n \n         if check_input:\n             X \u003d check_array(X, dtype\u003dDTYPE, accept_sparse\u003d\"csr\")\n             if issparse(X) and (X.indices.dtype !\u003d np.intc or\n                                 X.indptr.dtype !\u003d np.intc):\n                 raise ValueError(\"No support for np.int64 index based \"\n                                  \"sparse matrices\")\n \n         n_features \u003d X.shape[1]\n         if self.n_features_ !\u003d n_features:\n             raise ValueError(\"Number of features of the model must \"\n                              \" match the input. Model n_features is %s and \"\n                              \" input n_features is %s \"\n                              % (self.n_features_, n_features))\n \n         return X\n",
      "extendedDetails": {}
    },
    "4ffbf34588e66d10a6ae79d7692c66c83f7edbab": {
      "type": "Yintroduced",
      "commitMessage": "Factorize input validation\n",
      "commitDate": "2015/4/20 下午11:27",
      "commitName": "4ffbf34588e66d10a6ae79d7692c66c83f7edbab",
      "commitAuthor": "Arnaud Joly",
      "diff": "@@ -0,0 +1,20 @@\n+    def _validate_X_predict(self, X, check_input):\n+        \"\"\"Validate X whenever one try to predict, apply, predict_proba\"\"\"\n+        if self.tree_ is None:\n+            raise NotFittedError(\"Tree not initialized. Perform a fit first\")\n+\n+        if check_input:\n+            X \u003d check_array(X, dtype\u003dDTYPE, accept_sparse\u003d\"csr\")\n+            if issparse(X) and (X.indices.dtype !\u003d np.intc or\n+                                X.indptr.dtype !\u003d np.intc):\n+                raise ValueError(\"No support for np.int64 index based \"\n+                                 \"sparse matrices\")\n+\n+        n_features \u003d X.shape[1]\n+        if self.n_features_ !\u003d n_features:\n+            raise ValueError(\"Number of features of the model must \"\n+                             \" match the input. Model n_features is %s and \"\n+                             \" input n_features is %s \"\n+                             % (self.n_features_, n_features))\n+\n+        return X\n",
      "actualSource": "    def _validate_X_predict(self, X, check_input):\n        \"\"\"Validate X whenever one try to predict, apply, predict_proba\"\"\"\n        if self.tree_ is None:\n            raise NotFittedError(\"Tree not initialized. Perform a fit first\")\n\n        if check_input:\n            X \u003d check_array(X, dtype\u003dDTYPE, accept_sparse\u003d\"csr\")\n            if issparse(X) and (X.indices.dtype !\u003d np.intc or\n                                X.indptr.dtype !\u003d np.intc):\n                raise ValueError(\"No support for np.int64 index based \"\n                                 \"sparse matrices\")\n\n        n_features \u003d X.shape[1]\n        if self.n_features_ !\u003d n_features:\n            raise ValueError(\"Number of features of the model must \"\n                             \" match the input. Model n_features is %s and \"\n                             \" input n_features is %s \"\n                             % (self.n_features_, n_features))\n\n        return X\n",
      "path": "sklearn/tree/tree.py",
      "functionStartLine": 312,
      "functionName": "_validate_X_predict",
      "functionAnnotation": ""
    }
  }
}