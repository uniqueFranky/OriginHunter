{
  "origin": "codeshovel",
  "repositoryName": "httpie",
  "repositoryPath": "/Users/franky/Documents/Homework/毕业设计/testcase/httpie/.git",
  "startCommitName": "bece3c77bb51ecc55dcc4008375dc29ccd91575c",
  "sourceFileName": "sessions.py",
  "functionName": "update_headers",
  "functionId": "Session__update_headers___self__request_headers-RequestHeadersDict",
  "sourceFilePath": "httpie/sessions.py",
  "functionAnnotation": "",
  "functionStartLine": 69,
  "functionEndLine": 92,
  "numCommitsSeen": 148,
  "timeTaken": 654,
  "changeHistory": [
    "45e8e4e4ea001d80d76c202ccfa1aec06e71b809",
    "0f654388fc49c0ab7af4c45c7b5294117c435074",
    "589887939507ff26d36ec74bd2c045819cfa3d56",
    "467d126b6c67dd2ce6da703858cbe0cdf81782b3",
    "e09b74021c9c955fd7c3bab11f22801aaf9dc1b8"
  ],
  "changeHistoryShort": {
    "45e8e4e4ea001d80d76c202ccfa1aec06e71b809": "Ymultichange(Yparameterchange,Ybodychange)",
    "0f654388fc49c0ab7af4c45c7b5294117c435074": "Yparameterchange",
    "589887939507ff26d36ec74bd2c045819cfa3d56": "Ybodychange",
    "467d126b6c67dd2ce6da703858cbe0cdf81782b3": "Ybodychange",
    "e09b74021c9c955fd7c3bab11f22801aaf9dc1b8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "45e8e4e4ea001d80d76c202ccfa1aec06e71b809": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Sessions\n",
      "commitDate": "2019/9/2 上午3:15",
      "commitName": "45e8e4e4ea001d80d76c202ccfa1aec06e71b809",
      "commitAuthor": "Jakub Roztocil",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Sessions\n",
          "commitDate": "2019/9/2 上午3:15",
          "commitName": "45e8e4e4ea001d80d76c202ccfa1aec06e71b809",
          "commitAuthor": "Jakub Roztocil",
          "commitDateOld": "2019/9/1 下午5:38",
          "commitNameOld": "4dffac7a25e9c1098df553138114319a9fbf0531",
          "commitAuthorOld": "Jakub Roztocil",
          "daysBetweenCommits": 0.4,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "    def update_headers(self, request_headers: RequestHeadersDict):\n        \"\"\"\n        Update the session headers with the request ones while ignoring\n        certain name prefixes.\n\n        \"\"\"\n        headers \u003d self.headers\n        for name, value in request_headers.items():\n\n            if value is None:\n                continue  # Ignore explicitly unset headers\n\n            value \u003d value.decode(\u0027utf8\u0027)\n            if name \u003d\u003d \u0027User-Agent\u0027 and value.startswith(\u0027HTTPie/\u0027):\n                continue\n\n            for prefix in SESSION_IGNORED_HEADER_PREFIXES:\n                if name.lower().startswith(prefix.lower()):\n                    break\n            else:\n                headers[name] \u003d value\n\n        self[\u0027headers\u0027] \u003d dict(headers)\n",
          "path": "httpie/sessions.py",
          "functionStartLine": 105,
          "functionName": "update_headers",
          "functionAnnotation": "",
          "diff": "@@ -1,22 +1,23 @@\n-    def update_headers(self, request_headers: dict):\n+    def update_headers(self, request_headers: RequestHeadersDict):\n         \"\"\"\n         Update the session headers with the request ones while ignoring\n         certain name prefixes.\n \n-        :type request_headers: dict\n-\n         \"\"\"\n+        headers \u003d self.headers\n         for name, value in request_headers.items():\n \n             if value is None:\n                 continue  # Ignore explicitly unset headers\n \n             value \u003d value.decode(\u0027utf8\u0027)\n             if name \u003d\u003d \u0027User-Agent\u0027 and value.startswith(\u0027HTTPie/\u0027):\n                 continue\n \n             for prefix in SESSION_IGNORED_HEADER_PREFIXES:\n                 if name.lower().startswith(prefix.lower()):\n                     break\n             else:\n-                self[\u0027headers\u0027][name] \u003d value\n+                headers[name] \u003d value\n+\n+        self[\u0027headers\u0027] \u003d dict(headers)\n",
          "extendedDetails": {
            "oldValue": "[self, request_headers-dict]",
            "newValue": "[self, request_headers-RequestHeadersDict]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Sessions\n",
          "commitDate": "2019/9/2 上午3:15",
          "commitName": "45e8e4e4ea001d80d76c202ccfa1aec06e71b809",
          "commitAuthor": "Jakub Roztocil",
          "commitDateOld": "2019/9/1 下午5:38",
          "commitNameOld": "4dffac7a25e9c1098df553138114319a9fbf0531",
          "commitAuthorOld": "Jakub Roztocil",
          "daysBetweenCommits": 0.4,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "    def update_headers(self, request_headers: RequestHeadersDict):\n        \"\"\"\n        Update the session headers with the request ones while ignoring\n        certain name prefixes.\n\n        \"\"\"\n        headers \u003d self.headers\n        for name, value in request_headers.items():\n\n            if value is None:\n                continue  # Ignore explicitly unset headers\n\n            value \u003d value.decode(\u0027utf8\u0027)\n            if name \u003d\u003d \u0027User-Agent\u0027 and value.startswith(\u0027HTTPie/\u0027):\n                continue\n\n            for prefix in SESSION_IGNORED_HEADER_PREFIXES:\n                if name.lower().startswith(prefix.lower()):\n                    break\n            else:\n                headers[name] \u003d value\n\n        self[\u0027headers\u0027] \u003d dict(headers)\n",
          "path": "httpie/sessions.py",
          "functionStartLine": 105,
          "functionName": "update_headers",
          "functionAnnotation": "",
          "diff": "@@ -1,22 +1,23 @@\n-    def update_headers(self, request_headers: dict):\n+    def update_headers(self, request_headers: RequestHeadersDict):\n         \"\"\"\n         Update the session headers with the request ones while ignoring\n         certain name prefixes.\n \n-        :type request_headers: dict\n-\n         \"\"\"\n+        headers \u003d self.headers\n         for name, value in request_headers.items():\n \n             if value is None:\n                 continue  # Ignore explicitly unset headers\n \n             value \u003d value.decode(\u0027utf8\u0027)\n             if name \u003d\u003d \u0027User-Agent\u0027 and value.startswith(\u0027HTTPie/\u0027):\n                 continue\n \n             for prefix in SESSION_IGNORED_HEADER_PREFIXES:\n                 if name.lower().startswith(prefix.lower()):\n                     break\n             else:\n-                self[\u0027headers\u0027][name] \u003d value\n+                headers[name] \u003d value\n+\n+        self[\u0027headers\u0027] \u003d dict(headers)\n",
          "extendedDetails": {}
        }
      ]
    },
    "0f654388fc49c0ab7af4c45c7b5294117c435074": {
      "type": "Yparameterchange",
      "commitMessage": "Python 3 annotations, super(), pathlib, etc.\n",
      "commitDate": "2019/8/30 下午9:14",
      "commitName": "0f654388fc49c0ab7af4c45c7b5294117c435074",
      "commitAuthor": "Jakub Roztocil",
      "commitDateOld": "2019/8/30 下午4:07",
      "commitNameOld": "63df735fef1a100518550f89648c3491e22b745b",
      "commitAuthorOld": "Jakub Roztocil",
      "daysBetweenCommits": 0.21,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "    def update_headers(self, request_headers: dict):\n        \"\"\"\n        Update the session headers with the request ones while ignoring\n        certain name prefixes.\n\n        :type request_headers: dict\n\n        \"\"\"\n        for name, value in request_headers.items():\n\n            if value is None:\n                continue  # Ignore explicitly unset headers\n\n            value \u003d value.decode(\u0027utf8\u0027)\n            if name \u003d\u003d \u0027User-Agent\u0027 and value.startswith(\u0027HTTPie/\u0027):\n                continue\n\n            for prefix in SESSION_IGNORED_HEADER_PREFIXES:\n                if name.lower().startswith(prefix.lower()):\n                    break\n            else:\n                self[\u0027headers\u0027][name] \u003d value\n",
      "path": "httpie/sessions.py",
      "functionStartLine": 103,
      "functionName": "update_headers",
      "functionAnnotation": "",
      "diff": "@@ -1,22 +1,22 @@\n-    def update_headers(self, request_headers):\n+    def update_headers(self, request_headers: dict):\n         \"\"\"\n         Update the session headers with the request ones while ignoring\n         certain name prefixes.\n \n         :type request_headers: dict\n \n         \"\"\"\n         for name, value in request_headers.items():\n \n             if value is None:\n-                continue  # Ignore explicitely unset headers\n+                continue  # Ignore explicitly unset headers\n \n             value \u003d value.decode(\u0027utf8\u0027)\n             if name \u003d\u003d \u0027User-Agent\u0027 and value.startswith(\u0027HTTPie/\u0027):\n                 continue\n \n             for prefix in SESSION_IGNORED_HEADER_PREFIXES:\n                 if name.lower().startswith(prefix.lower()):\n                     break\n             else:\n                 self[\u0027headers\u0027][name] \u003d value\n",
      "extendedDetails": {
        "oldValue": "[self, request_headers]",
        "newValue": "[self, request_headers-dict]"
      }
    },
    "589887939507ff26d36ec74bd2c045819cfa3d56": {
      "type": "Ybodychange",
      "commitMessage": "Fixed --download with --session\n\nCloses #412\n",
      "commitDate": "2016/2/28 下午7:14",
      "commitName": "589887939507ff26d36ec74bd2c045819cfa3d56",
      "commitAuthor": "Jakub Roztocil",
      "commitDateOld": "2015/7/4 上午12:55",
      "commitNameOld": "2b51cb6687df037b94c901d5a3651296fd3cf07c",
      "commitAuthorOld": "Jakub Roztocil",
      "daysBetweenCommits": 239.76,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "actualSource": "    def update_headers(self, request_headers):\n        \"\"\"\n        Update the session headers with the request ones while ignoring\n        certain name prefixes.\n\n        :type request_headers: dict\n\n        \"\"\"\n        for name, value in request_headers.items():\n\n            if value is None:\n                continue  # Ignore explicitely unset headers\n\n            value \u003d value.decode(\u0027utf8\u0027)\n            if name \u003d\u003d \u0027User-Agent\u0027 and value.startswith(\u0027HTTPie/\u0027):\n                continue\n\n            for prefix in SESSION_IGNORED_HEADER_PREFIXES:\n                if name.lower().startswith(prefix.lower()):\n                    break\n            else:\n                self[\u0027headers\u0027][name] \u003d value\n",
      "path": "httpie/sessions.py",
      "functionStartLine": 95,
      "functionName": "update_headers",
      "functionAnnotation": "",
      "diff": "@@ -1,18 +1,22 @@\n     def update_headers(self, request_headers):\n         \"\"\"\n         Update the session headers with the request ones while ignoring\n         certain name prefixes.\n \n         :type request_headers: dict\n \n         \"\"\"\n         for name, value in request_headers.items():\n+\n+            if value is None:\n+                continue  # Ignore explicitely unset headers\n+\n             value \u003d value.decode(\u0027utf8\u0027)\n             if name \u003d\u003d \u0027User-Agent\u0027 and value.startswith(\u0027HTTPie/\u0027):\n                 continue\n \n             for prefix in SESSION_IGNORED_HEADER_PREFIXES:\n                 if name.lower().startswith(prefix.lower()):\n                     break\n             else:\n                 self[\u0027headers\u0027][name] \u003d value\n",
      "extendedDetails": {}
    },
    "467d126b6c67dd2ce6da703858cbe0cdf81782b3": {
      "type": "Ybodychange",
      "commitMessage": "Python 3 unicode fixes.\n",
      "commitDate": "2014/4/26 下午11:35",
      "commitName": "467d126b6c67dd2ce6da703858cbe0cdf81782b3",
      "commitAuthor": "Jakub Roztocil",
      "commitDateOld": "2014/4/26 下午9:18",
      "commitNameOld": "282cc455e322ad64685658f814b18bf0dae26292",
      "commitAuthorOld": "Jakub Roztocil",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "    def update_headers(self, request_headers):\n        \"\"\"\n        Update the session headers with the request ones while ignoring\n        certain name prefixes.\n\n        :type request_headers: dict\n\n        \"\"\"\n        for name, value in request_headers.items():\n            value \u003d value.decode(\u0027utf8\u0027)\n            if name \u003d\u003d \u0027User-Agent\u0027 and value.startswith(\u0027HTTPie/\u0027):\n                continue\n\n            for prefix in SESSION_IGNORED_HEADER_PREFIXES:\n                if name.lower().startswith(prefix.lower()):\n                    break\n            else:\n                self[\u0027headers\u0027][name] \u003d value\n",
      "path": "httpie/sessions.py",
      "functionStartLine": 99,
      "functionName": "update_headers",
      "functionAnnotation": "",
      "diff": "@@ -1,18 +1,18 @@\n     def update_headers(self, request_headers):\n         \"\"\"\n         Update the session headers with the request ones while ignoring\n         certain name prefixes.\n \n         :type request_headers: dict\n \n         \"\"\"\n         for name, value in request_headers.items():\n-\n+            value \u003d value.decode(\u0027utf8\u0027)\n             if name \u003d\u003d \u0027User-Agent\u0027 and value.startswith(\u0027HTTPie/\u0027):\n                 continue\n \n             for prefix in SESSION_IGNORED_HEADER_PREFIXES:\n                 if name.lower().startswith(prefix.lower()):\n                     break\n             else:\n                 self[\u0027headers\u0027][name] \u003d value\n",
      "extendedDetails": {}
    },
    "e09b74021c9c955fd7c3bab11f22801aaf9dc1b8": {
      "type": "Yintroduced",
      "commitMessage": "Ignore Content-* and If-* request headers.\n\nThose headers are not stored in sessions anymore.\n\nCloses #141.\n",
      "commitDate": "2013/5/13 下午5:54",
      "commitName": "e09b74021c9c955fd7c3bab11f22801aaf9dc1b8",
      "commitAuthor": "Jakub Roztocil",
      "diff": "@@ -0,0 +1,18 @@\n+    def update_headers(self, request_headers):\n+        \"\"\"\n+        Update the session headers with the request ones while ignoring\n+        certain name prefixes.\n+\n+        :type request_headers: dict\n+\n+        \"\"\"\n+        for name, value in request_headers.items():\n+\n+            if name \u003d\u003d \u0027User-Agent\u0027 and value.startswith(\u0027HTTPie/\u0027):\n+                continue\n+\n+            for prefix in SESSION_IGNORED_HEADER_PREFIXES:\n+                if name.lower().startswith(prefix.lower()):\n+                    break\n+            else:\n+                self[\u0027headers\u0027][name] \u003d value\n",
      "actualSource": "    def update_headers(self, request_headers):\n        \"\"\"\n        Update the session headers with the request ones while ignoring\n        certain name prefixes.\n\n        :type request_headers: dict\n\n        \"\"\"\n        for name, value in request_headers.items():\n\n            if name \u003d\u003d \u0027User-Agent\u0027 and value.startswith(\u0027HTTPie/\u0027):\n                continue\n\n            for prefix in SESSION_IGNORED_HEADER_PREFIXES:\n                if name.lower().startswith(prefix.lower()):\n                    break\n            else:\n                self[\u0027headers\u0027][name] \u003d value\n",
      "path": "httpie/sessions.py",
      "functionStartLine": 150,
      "functionName": "update_headers",
      "functionAnnotation": ""
    }
  }
}