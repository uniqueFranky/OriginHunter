{
  "origin": "codeshovel",
  "repositoryName": "pmd",
  "repositoryPath": "/Users/franky/Documents/Homework/毕业设计/testcase/pmd/.git",
  "startCommitName": "d528dcd5d45582229ab3410deb7c40b2143d015d",
  "sourceFileName": "SourceFileScope.java",
  "functionName": "getSubTypes",
  "functionId": "getSubTypes___qualifyingName-String__subType-Scope",
  "sourceFilePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable/SourceFileScope.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 150,
  "functionEndLine": 166,
  "numCommitsSeen": 18,
  "timeTaken": 546,
  "changeHistory": [
    "932ad7dd2b82feeeada8eaff815430b47de47795",
    "fd2dcddc447c8ae88fe5b1df9fca0326017309f8",
    "55a912e731236fc79025fd031734cc06d4c78aa5",
    "a8d7b594ab8ee3afbcf3390be2aa5c8dee1f06c7"
  ],
  "changeHistoryShort": {
    "932ad7dd2b82feeeada8eaff815430b47de47795": "Ybodychange",
    "fd2dcddc447c8ae88fe5b1df9fca0326017309f8": "Ybodychange",
    "55a912e731236fc79025fd031734cc06d4c78aa5": "Ymultichange(Yreturntypechange,Ybodychange)",
    "a8d7b594ab8ee3afbcf3390be2aa5c8dee1f06c7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "932ad7dd2b82feeeada8eaff815430b47de47795": {
      "type": "Ybodychange",
      "commitMessage": "Reduce memory allocations during symbol table\n",
      "commitDate": "2017/1/3 下午7:07",
      "commitName": "932ad7dd2b82feeeada8eaff815430b47de47795",
      "commitAuthor": "Juan Martín Sotuyo Dodero",
      "commitDateOld": "2017/1/3 下午6:22",
      "commitNameOld": "b950929b7cd224c32eef1b2d3afc32d4c6b53ab4",
      "commitAuthorOld": "Juan Martín Sotuyo Dodero",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "private Map\u003cString, Node\u003e getSubTypes(String qualifyingName, Scope subType) {\n    Set\u003cClassNameDeclaration\u003e classDeclarations \u003d subType.getDeclarations(ClassNameDeclaration.class).keySet();\n    if (classDeclarations.isEmpty()) {\n        return Collections.emptyMap();\n    }\n    Map\u003cString, Node\u003e types \u003d new HashMap\u003c\u003e((int) (classDeclarations.size() / 0.75f) + 1);\n    for (ClassNameDeclaration c : classDeclarations) {\n        String typeName \u003d c.getName();\n        if (qualifyingName !\u003d null) {\n            typeName \u003d qualifyingName + \".\" + typeName;\n        }\n        types.put(typeName, c.getNode());\n        types.putAll(getSubTypes(typeName, c.getScope()));\n    }\n    return types;\n}",
      "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable/SourceFileScope.java",
      "functionStartLine": 131,
      "functionName": "getSubTypes",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,16 @@\n private Map\u003cString, Node\u003e getSubTypes(String qualifyingName, Scope subType) {\n-    Map\u003cString, Node\u003e types \u003d new HashMap\u003c\u003e();\n-    for (ClassNameDeclaration c : subType.getDeclarations(ClassNameDeclaration.class).keySet()) {\n+    Set\u003cClassNameDeclaration\u003e classDeclarations \u003d subType.getDeclarations(ClassNameDeclaration.class).keySet();\n+    if (classDeclarations.isEmpty()) {\n+        return Collections.emptyMap();\n+    }\n+    Map\u003cString, Node\u003e types \u003d new HashMap\u003c\u003e((int) (classDeclarations.size() / 0.75f) + 1);\n+    for (ClassNameDeclaration c : classDeclarations) {\n         String typeName \u003d c.getName();\n         if (qualifyingName !\u003d null) {\n             typeName \u003d qualifyingName + \".\" + typeName;\n         }\n         types.put(typeName, c.getNode());\n         types.putAll(getSubTypes(typeName, c.getScope()));\n     }\n     return types;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "fd2dcddc447c8ae88fe5b1df9fca0326017309f8": {
      "type": "Ybodychange",
      "commitMessage": "Java 7 changes and some compiler warnings fixed\n",
      "commitDate": "2015/11/26 上午5:06",
      "commitName": "fd2dcddc447c8ae88fe5b1df9fca0326017309f8",
      "commitAuthor": "Andreas Dangel",
      "commitDateOld": "2015/9/23 上午3:55",
      "commitNameOld": "b965cf45b3c1d5c165514144d24fae132ed4cc7b",
      "commitAuthorOld": "Andreas Dangel",
      "daysBetweenCommits": 64.05,
      "commitsBetweenForRepo": 68,
      "commitsBetweenForFile": 1,
      "actualSource": "private Map\u003cString, Node\u003e getSubTypes(String qualifyingName, Scope subType) {\n    Map\u003cString, Node\u003e types \u003d new HashMap\u003c\u003e();\n    for (ClassNameDeclaration c : subType.getDeclarations(ClassNameDeclaration.class).keySet()) {\n        String typeName \u003d c.getName();\n        if (qualifyingName !\u003d null) {\n            typeName \u003d qualifyingName + \".\" + typeName;\n        }\n        types.put(typeName, c.getNode());\n        types.putAll(getSubTypes(typeName, c.getScope()));\n    }\n    return types;\n}",
      "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable/SourceFileScope.java",
      "functionStartLine": 136,
      "functionName": "getSubTypes",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,12 @@\n private Map\u003cString, Node\u003e getSubTypes(String qualifyingName, Scope subType) {\n-    Map\u003cString, Node\u003e types \u003d new HashMap\u003cString, Node\u003e();\n+    Map\u003cString, Node\u003e types \u003d new HashMap\u003c\u003e();\n     for (ClassNameDeclaration c : subType.getDeclarations(ClassNameDeclaration.class).keySet()) {\n         String typeName \u003d c.getName();\n         if (qualifyingName !\u003d null) {\n             typeName \u003d qualifyingName + \".\" + typeName;\n         }\n         types.put(typeName, c.getNode());\n         types.putAll(getSubTypes(typeName, c.getScope()));\n     }\n     return types;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "55a912e731236fc79025fd031734cc06d4c78aa5": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "#1281 UnusedPrivateMethod incorrectly flagged for methods nested private classes\n",
      "commitDate": "2014/11/15 下午11:51",
      "commitName": "55a912e731236fc79025fd031734cc06d4c78aa5",
      "commitAuthor": "Andreas Dangel",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "#1281 UnusedPrivateMethod incorrectly flagged for methods nested private classes\n",
          "commitDate": "2014/11/15 下午11:51",
          "commitName": "55a912e731236fc79025fd031734cc06d4c78aa5",
          "commitAuthor": "Andreas Dangel",
          "commitDateOld": "2014/11/15 下午7:55",
          "commitNameOld": "a8d7b594ab8ee3afbcf3390be2aa5c8dee1f06c7",
          "commitAuthorOld": "Andreas Dangel",
          "daysBetweenCommits": 0.16,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "private Map\u003cString, Node\u003e getSubTypes(String qualifyingName, Scope subType) {\n    Map\u003cString, Node\u003e types \u003d new HashMap\u003cString, Node\u003e();\n    for (ClassNameDeclaration c : subType.getDeclarations(ClassNameDeclaration.class).keySet()) {\n        String typeName \u003d c.getName();\n        if (qualifyingName !\u003d null) {\n            typeName \u003d qualifyingName + \".\" + typeName;\n        }\n        types.put(typeName, c.getNode());\n        types.putAll(getSubTypes(typeName, c.getScope()));\n    }\n    return types;\n}",
          "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable/SourceFileScope.java",
          "functionStartLine": 120,
          "functionName": "getSubTypes",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,12 +1,12 @@\n-private Set\u003cString\u003e getSubTypes(String qualifyingName, Scope subType) {\n-    Set\u003cString\u003e types \u003d new HashSet\u003cString\u003e();\n+private Map\u003cString, Node\u003e getSubTypes(String qualifyingName, Scope subType) {\n+    Map\u003cString, Node\u003e types \u003d new HashMap\u003cString, Node\u003e();\n     for (ClassNameDeclaration c : subType.getDeclarations(ClassNameDeclaration.class).keySet()) {\n         String typeName \u003d c.getName();\n         if (qualifyingName !\u003d null) {\n             typeName \u003d qualifyingName + \".\" + typeName;\n         }\n-        types.add(typeName);\n-        types.addAll(getSubTypes(typeName, c.getScope()));\n+        types.put(typeName, c.getNode());\n+        types.putAll(getSubTypes(typeName, c.getScope()));\n     }\n     return types;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Set\u003cString\u003e",
            "newValue": "Map\u003cString,Node\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "#1281 UnusedPrivateMethod incorrectly flagged for methods nested private classes\n",
          "commitDate": "2014/11/15 下午11:51",
          "commitName": "55a912e731236fc79025fd031734cc06d4c78aa5",
          "commitAuthor": "Andreas Dangel",
          "commitDateOld": "2014/11/15 下午7:55",
          "commitNameOld": "a8d7b594ab8ee3afbcf3390be2aa5c8dee1f06c7",
          "commitAuthorOld": "Andreas Dangel",
          "daysBetweenCommits": 0.16,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "private Map\u003cString, Node\u003e getSubTypes(String qualifyingName, Scope subType) {\n    Map\u003cString, Node\u003e types \u003d new HashMap\u003cString, Node\u003e();\n    for (ClassNameDeclaration c : subType.getDeclarations(ClassNameDeclaration.class).keySet()) {\n        String typeName \u003d c.getName();\n        if (qualifyingName !\u003d null) {\n            typeName \u003d qualifyingName + \".\" + typeName;\n        }\n        types.put(typeName, c.getNode());\n        types.putAll(getSubTypes(typeName, c.getScope()));\n    }\n    return types;\n}",
          "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable/SourceFileScope.java",
          "functionStartLine": 120,
          "functionName": "getSubTypes",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,12 +1,12 @@\n-private Set\u003cString\u003e getSubTypes(String qualifyingName, Scope subType) {\n-    Set\u003cString\u003e types \u003d new HashSet\u003cString\u003e();\n+private Map\u003cString, Node\u003e getSubTypes(String qualifyingName, Scope subType) {\n+    Map\u003cString, Node\u003e types \u003d new HashMap\u003cString, Node\u003e();\n     for (ClassNameDeclaration c : subType.getDeclarations(ClassNameDeclaration.class).keySet()) {\n         String typeName \u003d c.getName();\n         if (qualifyingName !\u003d null) {\n             typeName \u003d qualifyingName + \".\" + typeName;\n         }\n-        types.add(typeName);\n-        types.addAll(getSubTypes(typeName, c.getScope()));\n+        types.put(typeName, c.getNode());\n+        types.putAll(getSubTypes(typeName, c.getScope()));\n     }\n     return types;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "a8d7b594ab8ee3afbcf3390be2aa5c8dee1f06c7": {
      "type": "Yintroduced",
      "commitMessage": "#1276 False positive in UnusedPrivateMethod with inner enum\n",
      "commitDate": "2014/11/15 下午7:55",
      "commitName": "a8d7b594ab8ee3afbcf3390be2aa5c8dee1f06c7",
      "commitAuthor": "Andreas Dangel",
      "diff": "@@ -0,0 +1,12 @@\n+private Set\u003cString\u003e getSubTypes(String qualifyingName, Scope subType) {\n+    Set\u003cString\u003e types \u003d new HashSet\u003cString\u003e();\n+    for (ClassNameDeclaration c : subType.getDeclarations(ClassNameDeclaration.class).keySet()) {\n+        String typeName \u003d c.getName();\n+        if (qualifyingName !\u003d null) {\n+            typeName \u003d qualifyingName + \".\" + typeName;\n+        }\n+        types.add(typeName);\n+        types.addAll(getSubTypes(typeName, c.getScope()));\n+    }\n+    return types;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private Set\u003cString\u003e getSubTypes(String qualifyingName, Scope subType) {\n    Set\u003cString\u003e types \u003d new HashSet\u003cString\u003e();\n    for (ClassNameDeclaration c : subType.getDeclarations(ClassNameDeclaration.class).keySet()) {\n        String typeName \u003d c.getName();\n        if (qualifyingName !\u003d null) {\n            typeName \u003d qualifyingName + \".\" + typeName;\n        }\n        types.add(typeName);\n        types.addAll(getSubTypes(typeName, c.getScope()));\n    }\n    return types;\n}",
      "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable/SourceFileScope.java",
      "functionStartLine": 119,
      "functionName": "getSubTypes",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}