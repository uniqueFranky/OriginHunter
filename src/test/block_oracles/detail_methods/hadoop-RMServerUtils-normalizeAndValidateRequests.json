{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/Users/franky/Documents/Homework/毕业设计/testcase/hadoop/.git",
  "startCommitName": "9c3fc3ef2865164aa5f121793ac914cfeb21a181",
  "sourceFileName": "RMServerUtils.java",
  "functionName": "normalizeAndValidateRequests",
  "functionId": "normalizeAndValidateRequests___ask-List__ResourceRequest____maximumResource-Resource__queueName-String__scheduler-YarnScheduler__rmContext-RMContext",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMServerUtils.java",
  "functionAnnotation": "",
  "functionDoc": "Utility method to validate a list resource requests, by insuring that the\nrequested memory/vcore is non-negative and not greater than max\n",
  "functionStartLine": 237,
  "functionEndLine": 253,
  "numCommitsSeen": 88,
  "timeTaken": 4943,
  "changeHistory": [
    "821b0de4c59156d4a65112de03ba3e7e1c88e309",
    "d6f6741296639a73f5306e3ebefec84a40ca03e5",
    "f489a4ec969f3727d03c8e85d51af1018fc0b2a1",
    "f65eeb412d140a3808bcf99344a9f3a965918f70",
    "f2ea555ac6c06a3f2f6559731f48711fff05d3f1",
    "48264f1994c8b6002d5f1ac2fea46da28798df2d",
    "bc6777dd5bdcbaef09897b506bc6511ae456033d"
  ],
  "changeHistoryShort": {
    "821b0de4c59156d4a65112de03ba3e7e1c88e309": "Ybodychange",
    "d6f6741296639a73f5306e3ebefec84a40ca03e5": "Ybodychange",
    "f489a4ec969f3727d03c8e85d51af1018fc0b2a1": "Ymultichange(Yparameterchange,Ybodychange)",
    "f65eeb412d140a3808bcf99344a9f3a965918f70": "Ymultichange(Yrename,Ybodychange)",
    "f2ea555ac6c06a3f2f6559731f48711fff05d3f1": "Ymultichange(Yparameterchange,Ybodychange)",
    "48264f1994c8b6002d5f1ac2fea46da28798df2d": "Ymultichange(Ymovefromfile,Ybodychange)",
    "bc6777dd5bdcbaef09897b506bc6511ae456033d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "821b0de4c59156d4a65112de03ba3e7e1c88e309": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7574. Add support for Node Labels on Auto Created Leaf Queue Template. Contributed by Suma Shivaprasad.\n",
      "commitDate": "2018/4/9 下午11:47",
      "commitName": "821b0de4c59156d4a65112de03ba3e7e1c88e309",
      "commitAuthor": "Sunil G",
      "commitDateOld": "2018/2/16 下午3:07",
      "commitNameOld": "aae629913cee0157c945a2c7384c7bf398f10616",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 52.36,
      "commitsBetweenForRepo": 457,
      "commitsBetweenForFile": 1,
      "actualSource": "public static void normalizeAndValidateRequests(List\u003cResourceRequest\u003e ask, Resource maximumResource, String queueName, YarnScheduler scheduler, RMContext rmContext) throws InvalidResourceRequestException {\n    QueueInfo queueInfo \u003d null;\n    try {\n        queueInfo \u003d scheduler.getQueueInfo(queueName, false, false);\n    } catch (IOException e) {\n    }\n    for (ResourceRequest resReq : ask) {\n        SchedulerUtils.normalizeAndvalidateRequest(resReq, maximumResource, queueName, scheduler, rmContext, queueInfo);\n    }\n}",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMServerUtils.java",
      "functionStartLine": 237,
      "functionName": "normalizeAndValidateRequests",
      "functionAnnotation": "",
      "functionDoc": "Utility method to validate a list resource requests, by insuring that the\nrequested memory/vcore is non-negative and not greater than max\n",
      "diff": "",
      "extendedDetails": {}
    },
    "d6f6741296639a73f5306e3ebefec84a40ca03e5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3489. RMServerUtils.validateResourceRequests should only obtain queue info once. (Varun Saxena via wangda)\n",
      "commitDate": "2015/5/12 上午8:31",
      "commitName": "d6f6741296639a73f5306e3ebefec84a40ca03e5",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "2015/5/8 上午8:35",
      "commitNameOld": "f489a4ec969f3727d03c8e85d51af1018fc0b2a1",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 4.0,
      "commitsBetweenForRepo": 94,
      "commitsBetweenForFile": 1,
      "actualSource": "public static void normalizeAndValidateRequests(List\u003cResourceRequest\u003e ask, Resource maximumResource, String queueName, YarnScheduler scheduler, RMContext rmContext) throws InvalidResourceRequestException {\n    QueueInfo queueInfo \u003d null;\n    try {\n        queueInfo \u003d scheduler.getQueueInfo(queueName, false, false);\n    } catch (IOException e) {\n    }\n    for (ResourceRequest resReq : ask) {\n        SchedulerUtils.normalizeAndvalidateRequest(resReq, maximumResource, queueName, scheduler, rmContext, queueInfo);\n    }\n}",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMServerUtils.java",
      "functionStartLine": 94,
      "functionName": "normalizeAndValidateRequests",
      "functionAnnotation": "",
      "functionDoc": "Utility method to validate a list resource requests, by insuring that the\nrequested memory/vcore is non-negative and not greater than max\n",
      "diff": "@@ -1,5 +1,10 @@\n public static void normalizeAndValidateRequests(List\u003cResourceRequest\u003e ask, Resource maximumResource, String queueName, YarnScheduler scheduler, RMContext rmContext) throws InvalidResourceRequestException {\n+    QueueInfo queueInfo \u003d null;\n+    try {\n+        queueInfo \u003d scheduler.getQueueInfo(queueName, false, false);\n+    } catch (IOException e) {\n+    }\n     for (ResourceRequest resReq : ask) {\n-        SchedulerUtils.normalizeAndvalidateRequest(resReq, maximumResource, queueName, scheduler, rmContext);\n+        SchedulerUtils.normalizeAndvalidateRequest(resReq, maximumResource, queueName, scheduler, rmContext, queueInfo);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f489a4ec969f3727d03c8e85d51af1018fc0b2a1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-2918. RM should not fail on startup if queue\u0027s configured labels do not exist in cluster-node-labels. Contributed by Wangda Tan\n",
      "commitDate": "2015/5/8 上午8:35",
      "commitName": "f489a4ec969f3727d03c8e85d51af1018fc0b2a1",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-2918. RM should not fail on startup if queue\u0027s configured labels do not exist in cluster-node-labels. Contributed by Wangda Tan\n",
          "commitDate": "2015/5/8 上午8:35",
          "commitName": "f489a4ec969f3727d03c8e85d51af1018fc0b2a1",
          "commitAuthor": "Jian He",
          "commitDateOld": "2015/4/18 上午8:11",
          "commitNameOld": "f65eeb412d140a3808bcf99344a9f3a965918f70",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 20.02,
          "commitsBetweenForRepo": 188,
          "commitsBetweenForFile": 1,
          "actualSource": "public static void normalizeAndValidateRequests(List\u003cResourceRequest\u003e ask, Resource maximumResource, String queueName, YarnScheduler scheduler, RMContext rmContext) throws InvalidResourceRequestException {\n    for (ResourceRequest resReq : ask) {\n        SchedulerUtils.normalizeAndvalidateRequest(resReq, maximumResource, queueName, scheduler, rmContext);\n    }\n}",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMServerUtils.java",
          "functionStartLine": 93,
          "functionName": "normalizeAndValidateRequests",
          "functionAnnotation": "",
          "functionDoc": "Utility method to validate a list resource requests, by insuring that the\nrequested memory/vcore is non-negative and not greater than max\n",
          "diff": "@@ -1,5 +1,5 @@\n-public static void normalizeAndValidateRequests(List\u003cResourceRequest\u003e ask, Resource maximumResource, String queueName, YarnScheduler scheduler) throws InvalidResourceRequestException {\n+public static void normalizeAndValidateRequests(List\u003cResourceRequest\u003e ask, Resource maximumResource, String queueName, YarnScheduler scheduler, RMContext rmContext) throws InvalidResourceRequestException {\n     for (ResourceRequest resReq : ask) {\n-        SchedulerUtils.normalizeAndvalidateRequest(resReq, maximumResource, queueName, scheduler);\n+        SchedulerUtils.normalizeAndvalidateRequest(resReq, maximumResource, queueName, scheduler, rmContext);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[ask-List\u003cResourceRequest\u003e, maximumResource-Resource, queueName-String, scheduler-YarnScheduler]",
            "newValue": "[ask-List\u003cResourceRequest\u003e, maximumResource-Resource, queueName-String, scheduler-YarnScheduler, rmContext-RMContext]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-2918. RM should not fail on startup if queue\u0027s configured labels do not exist in cluster-node-labels. Contributed by Wangda Tan\n",
          "commitDate": "2015/5/8 上午8:35",
          "commitName": "f489a4ec969f3727d03c8e85d51af1018fc0b2a1",
          "commitAuthor": "Jian He",
          "commitDateOld": "2015/4/18 上午8:11",
          "commitNameOld": "f65eeb412d140a3808bcf99344a9f3a965918f70",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 20.02,
          "commitsBetweenForRepo": 188,
          "commitsBetweenForFile": 1,
          "actualSource": "public static void normalizeAndValidateRequests(List\u003cResourceRequest\u003e ask, Resource maximumResource, String queueName, YarnScheduler scheduler, RMContext rmContext) throws InvalidResourceRequestException {\n    for (ResourceRequest resReq : ask) {\n        SchedulerUtils.normalizeAndvalidateRequest(resReq, maximumResource, queueName, scheduler, rmContext);\n    }\n}",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMServerUtils.java",
          "functionStartLine": 93,
          "functionName": "normalizeAndValidateRequests",
          "functionAnnotation": "",
          "functionDoc": "Utility method to validate a list resource requests, by insuring that the\nrequested memory/vcore is non-negative and not greater than max\n",
          "diff": "@@ -1,5 +1,5 @@\n-public static void normalizeAndValidateRequests(List\u003cResourceRequest\u003e ask, Resource maximumResource, String queueName, YarnScheduler scheduler) throws InvalidResourceRequestException {\n+public static void normalizeAndValidateRequests(List\u003cResourceRequest\u003e ask, Resource maximumResource, String queueName, YarnScheduler scheduler, RMContext rmContext) throws InvalidResourceRequestException {\n     for (ResourceRequest resReq : ask) {\n-        SchedulerUtils.normalizeAndvalidateRequest(resReq, maximumResource, queueName, scheduler);\n+        SchedulerUtils.normalizeAndvalidateRequest(resReq, maximumResource, queueName, scheduler, rmContext);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "f65eeb412d140a3808bcf99344a9f3a965918f70": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "YARN-3493. RM fails to come up with error \"Failed to load/recover state\" when mem settings are changed. (Jian He via wangda)\n",
      "commitDate": "2015/4/18 上午8:11",
      "commitName": "f65eeb412d140a3808bcf99344a9f3a965918f70",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-3493. RM fails to come up with error \"Failed to load/recover state\" when mem settings are changed. (Jian He via wangda)\n",
          "commitDate": "2015/4/18 上午8:11",
          "commitName": "f65eeb412d140a3808bcf99344a9f3a965918f70",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "2015/2/10 下午12:34",
          "commitNameOld": "23bf6c72071782e3fd5a628e21495d6b974c7a9e",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 66.82,
          "commitsBetweenForRepo": 615,
          "commitsBetweenForFile": 1,
          "actualSource": "public static void normalizeAndValidateRequests(List\u003cResourceRequest\u003e ask, Resource maximumResource, String queueName, YarnScheduler scheduler) throws InvalidResourceRequestException {\n    for (ResourceRequest resReq : ask) {\n        SchedulerUtils.normalizeAndvalidateRequest(resReq, maximumResource, queueName, scheduler);\n    }\n}",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMServerUtils.java",
          "functionStartLine": 93,
          "functionName": "normalizeAndValidateRequests",
          "functionAnnotation": "",
          "functionDoc": "Utility method to validate a list resource requests, by insuring that the\nrequested memory/vcore is non-negative and not greater than max\n",
          "diff": "@@ -1,5 +1,5 @@\n-public static void validateResourceRequests(List\u003cResourceRequest\u003e ask, Resource maximumResource, String queueName, YarnScheduler scheduler) throws InvalidResourceRequestException {\n+public static void normalizeAndValidateRequests(List\u003cResourceRequest\u003e ask, Resource maximumResource, String queueName, YarnScheduler scheduler) throws InvalidResourceRequestException {\n     for (ResourceRequest resReq : ask) {\n-        SchedulerUtils.validateResourceRequest(resReq, maximumResource, queueName, scheduler);\n+        SchedulerUtils.normalizeAndvalidateRequest(resReq, maximumResource, queueName, scheduler);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "validateResourceRequests",
            "newValue": "normalizeAndValidateRequests"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3493. RM fails to come up with error \"Failed to load/recover state\" when mem settings are changed. (Jian He via wangda)\n",
          "commitDate": "2015/4/18 上午8:11",
          "commitName": "f65eeb412d140a3808bcf99344a9f3a965918f70",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "2015/2/10 下午12:34",
          "commitNameOld": "23bf6c72071782e3fd5a628e21495d6b974c7a9e",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 66.82,
          "commitsBetweenForRepo": 615,
          "commitsBetweenForFile": 1,
          "actualSource": "public static void normalizeAndValidateRequests(List\u003cResourceRequest\u003e ask, Resource maximumResource, String queueName, YarnScheduler scheduler) throws InvalidResourceRequestException {\n    for (ResourceRequest resReq : ask) {\n        SchedulerUtils.normalizeAndvalidateRequest(resReq, maximumResource, queueName, scheduler);\n    }\n}",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMServerUtils.java",
          "functionStartLine": 93,
          "functionName": "normalizeAndValidateRequests",
          "functionAnnotation": "",
          "functionDoc": "Utility method to validate a list resource requests, by insuring that the\nrequested memory/vcore is non-negative and not greater than max\n",
          "diff": "@@ -1,5 +1,5 @@\n-public static void validateResourceRequests(List\u003cResourceRequest\u003e ask, Resource maximumResource, String queueName, YarnScheduler scheduler) throws InvalidResourceRequestException {\n+public static void normalizeAndValidateRequests(List\u003cResourceRequest\u003e ask, Resource maximumResource, String queueName, YarnScheduler scheduler) throws InvalidResourceRequestException {\n     for (ResourceRequest resReq : ask) {\n-        SchedulerUtils.validateResourceRequest(resReq, maximumResource, queueName, scheduler);\n+        SchedulerUtils.normalizeAndvalidateRequest(resReq, maximumResource, queueName, scheduler);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "f2ea555ac6c06a3f2f6559731f48711fff05d3f1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-2496. Enhanced Capacity Scheduler to have basic support for allocating resources based on node-labels. Contributed by Wangda Tan.\nYARN-2500. Ehnaced ResourceManager to support schedulers allocating resources based on node-labels. Contributed by Wangda Tan.\n",
      "commitDate": "2014/10/16 上午9:33",
      "commitName": "f2ea555ac6c06a3f2f6559731f48711fff05d3f1",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-2496. Enhanced Capacity Scheduler to have basic support for allocating resources based on node-labels. Contributed by Wangda Tan.\nYARN-2500. Ehnaced ResourceManager to support schedulers allocating resources based on node-labels. Contributed by Wangda Tan.\n",
          "commitDate": "2014/10/16 上午9:33",
          "commitName": "f2ea555ac6c06a3f2f6559731f48711fff05d3f1",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "2014/9/11 上午9:20",
          "commitNameOld": "83be3ad44484bf8a24cb90de4b9c26ab59d226a8",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 35.01,
          "commitsBetweenForRepo": 369,
          "commitsBetweenForFile": 1,
          "actualSource": "public static void validateResourceRequests(List\u003cResourceRequest\u003e ask, Resource maximumResource, String queueName, YarnScheduler scheduler) throws InvalidResourceRequestException {\n    for (ResourceRequest resReq : ask) {\n        SchedulerUtils.validateResourceRequest(resReq, maximumResource, queueName, scheduler);\n    }\n}",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMServerUtils.java",
          "functionStartLine": 87,
          "functionName": "validateResourceRequests",
          "functionAnnotation": "",
          "functionDoc": "Utility method to validate a list resource requests, by insuring that the\nrequested memory/vcore is non-negative and not greater than max\n",
          "diff": "@@ -1,5 +1,5 @@\n-public static void validateResourceRequests(List\u003cResourceRequest\u003e ask, Resource maximumResource) throws InvalidResourceRequestException {\n+public static void validateResourceRequests(List\u003cResourceRequest\u003e ask, Resource maximumResource, String queueName, YarnScheduler scheduler) throws InvalidResourceRequestException {\n     for (ResourceRequest resReq : ask) {\n-        SchedulerUtils.validateResourceRequest(resReq, maximumResource);\n+        SchedulerUtils.validateResourceRequest(resReq, maximumResource, queueName, scheduler);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[ask-List\u003cResourceRequest\u003e, maximumResource-Resource]",
            "newValue": "[ask-List\u003cResourceRequest\u003e, maximumResource-Resource, queueName-String, scheduler-YarnScheduler]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-2496. Enhanced Capacity Scheduler to have basic support for allocating resources based on node-labels. Contributed by Wangda Tan.\nYARN-2500. Ehnaced ResourceManager to support schedulers allocating resources based on node-labels. Contributed by Wangda Tan.\n",
          "commitDate": "2014/10/16 上午9:33",
          "commitName": "f2ea555ac6c06a3f2f6559731f48711fff05d3f1",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "2014/9/11 上午9:20",
          "commitNameOld": "83be3ad44484bf8a24cb90de4b9c26ab59d226a8",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 35.01,
          "commitsBetweenForRepo": 369,
          "commitsBetweenForFile": 1,
          "actualSource": "public static void validateResourceRequests(List\u003cResourceRequest\u003e ask, Resource maximumResource, String queueName, YarnScheduler scheduler) throws InvalidResourceRequestException {\n    for (ResourceRequest resReq : ask) {\n        SchedulerUtils.validateResourceRequest(resReq, maximumResource, queueName, scheduler);\n    }\n}",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMServerUtils.java",
          "functionStartLine": 87,
          "functionName": "validateResourceRequests",
          "functionAnnotation": "",
          "functionDoc": "Utility method to validate a list resource requests, by insuring that the\nrequested memory/vcore is non-negative and not greater than max\n",
          "diff": "@@ -1,5 +1,5 @@\n-public static void validateResourceRequests(List\u003cResourceRequest\u003e ask, Resource maximumResource) throws InvalidResourceRequestException {\n+public static void validateResourceRequests(List\u003cResourceRequest\u003e ask, Resource maximumResource, String queueName, YarnScheduler scheduler) throws InvalidResourceRequestException {\n     for (ResourceRequest resReq : ask) {\n-        SchedulerUtils.validateResourceRequest(resReq, maximumResource);\n+        SchedulerUtils.validateResourceRequest(resReq, maximumResource, queueName, scheduler);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "48264f1994c8b6002d5f1ac2fea46da28798df2d": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "YARN-948. Changed ResourceManager to validate the release container list before actually releasing them. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1508609 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2013/7/31 上午4:30",
      "commitName": "48264f1994c8b6002d5f1ac2fea46da28798df2d",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-948. Changed ResourceManager to validate the release container list before actually releasing them. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1508609 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2013/7/31 上午4:30",
          "commitName": "48264f1994c8b6002d5f1ac2fea46da28798df2d",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "2013/7/31 上午4:04",
          "commitNameOld": "1d915238a6a06d09e1789532994f00f496bd969c",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static void validateResourceRequests(List\u003cResourceRequest\u003e ask, Resource maximumResource) throws InvalidResourceRequestException {\n    for (ResourceRequest resReq : ask) {\n        SchedulerUtils.validateResourceRequest(resReq, maximumResource);\n    }\n}",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMServerUtils.java",
          "functionStartLine": 72,
          "functionName": "validateResourceRequests",
          "functionAnnotation": "",
          "functionDoc": "Utility method to validate a list resource requests, by insuring that the\nrequested memory/vcore is non-negative and not greater than max\n",
          "diff": "@@ -1,5 +1,5 @@\n public static void validateResourceRequests(List\u003cResourceRequest\u003e ask, Resource maximumResource) throws InvalidResourceRequestException {\n     for (ResourceRequest resReq : ask) {\n-        validateResourceRequest(resReq, maximumResource);\n+        SchedulerUtils.validateResourceRequest(resReq, maximumResource);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerUtils.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMServerUtils.java",
            "oldMethodName": "validateResourceRequests",
            "newMethodName": "validateResourceRequests"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-948. Changed ResourceManager to validate the release container list before actually releasing them. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1508609 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2013/7/31 上午4:30",
          "commitName": "48264f1994c8b6002d5f1ac2fea46da28798df2d",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "2013/7/31 上午4:04",
          "commitNameOld": "1d915238a6a06d09e1789532994f00f496bd969c",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static void validateResourceRequests(List\u003cResourceRequest\u003e ask, Resource maximumResource) throws InvalidResourceRequestException {\n    for (ResourceRequest resReq : ask) {\n        SchedulerUtils.validateResourceRequest(resReq, maximumResource);\n    }\n}",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMServerUtils.java",
          "functionStartLine": 72,
          "functionName": "validateResourceRequests",
          "functionAnnotation": "",
          "functionDoc": "Utility method to validate a list resource requests, by insuring that the\nrequested memory/vcore is non-negative and not greater than max\n",
          "diff": "@@ -1,5 +1,5 @@\n public static void validateResourceRequests(List\u003cResourceRequest\u003e ask, Resource maximumResource) throws InvalidResourceRequestException {\n     for (ResourceRequest resReq : ask) {\n-        validateResourceRequest(resReq, maximumResource);\n+        SchedulerUtils.validateResourceRequest(resReq, maximumResource);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "bc6777dd5bdcbaef09897b506bc6511ae456033d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-193. Scheduler.normalizeRequest does not account for allocation requests that exceed maximumAllocation limits (Zhijie Shen via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1465067 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2013/4/6 上午1:45",
      "commitName": "bc6777dd5bdcbaef09897b506bc6511ae456033d",
      "commitAuthor": "Bikas Saha",
      "diff": "@@ -0,0 +1,5 @@\n+public static void validateResourceRequests(List\u003cResourceRequest\u003e ask, Resource maximumResource) throws InvalidResourceRequestException {\n+    for (ResourceRequest resReq : ask) {\n+        validateResourceRequest(resReq, maximumResource);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static void validateResourceRequests(List\u003cResourceRequest\u003e ask, Resource maximumResource) throws InvalidResourceRequestException {\n    for (ResourceRequest resReq : ask) {\n        validateResourceRequest(resReq, maximumResource);\n    }\n}",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerUtils.java",
      "functionStartLine": 148,
      "functionName": "validateResourceRequests",
      "functionAnnotation": "",
      "functionDoc": "Utility method to validate a list resource requests, by insuring that the\nrequested memory/vcore is non-negative and not greater than max\n"
    }
  }
}