{
  "origin": "codeshovel",
  "repositoryName": "jetty.project",
  "repositoryPath": "/Users/franky/Documents/Homework/毕业设计/testcase/jetty.project/.git",
  "startCommitName": "fc5dd874f3deda71e6cd42af994a5af5cb6be4af",
  "sourceFileName": "ServiceWebAppProvider.java",
  "functionName": "doStart",
  "functionId": "doStart",
  "sourceFilePath": "jetty-osgi/jetty-osgi-boot/src/main/java/org/eclipse/jetty/osgi/boot/ServiceWebAppProvider.java",
  "functionAnnotation": "@Override",
  "functionDoc": "\n@see org.eclipse.jetty.util.component.AbstractLifeCycle#doStart()\n",
  "functionStartLine": 267,
  "functionEndLine": 283,
  "numCommitsSeen": 17,
  "timeTaken": 1650,
  "changeHistory": [
    "96218e8bc42390c9ff6bb3c72f7deb6c5a0a7880",
    "05e2527b5c781db8c7179a134ac1bf800e830580",
    "a639ee9275e672ca21320f56f62f1648d24aa140",
    "37fa778ea03aba953712348426393136e2314658",
    "9af433473961dab9f5d534031fe0a6daa615a2a6"
  ],
  "changeHistoryShort": {
    "96218e8bc42390c9ff6bb3c72f7deb6c5a0a7880": "Ybodychange",
    "05e2527b5c781db8c7179a134ac1bf800e830580": "Ybodychange",
    "a639ee9275e672ca21320f56f62f1648d24aa140": "Yannotationchange",
    "37fa778ea03aba953712348426393136e2314658": "Ybodychange",
    "9af433473961dab9f5d534031fe0a6daa615a2a6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "96218e8bc42390c9ff6bb3c72f7deb6c5a0a7880": {
      "type": "Ybodychange",
      "commitMessage": "Fix typos detected by github.com/client9/misspell\n\nSigned-off-by: Kazuhiro Sera \u003cseratch@gmail.com\u003e\n",
      "commitDate": "2018/8/10 下午10:52",
      "commitName": "96218e8bc42390c9ff6bb3c72f7deb6c5a0a7880",
      "commitAuthor": "Kazuhiro Sera",
      "commitDateOld": "2018/3/1 下午2:35",
      "commitNameOld": "1ff2c691bae7cc47c0d8f386d311e03764cbf26c",
      "commitAuthorOld": "",
      "daysBetweenCommits": 162.35,
      "commitsBetweenForRepo": 507,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nprotected void doStart() throws Exception {\n    BundleContext bundleContext \u003d FrameworkUtil.getBundle(this.getClass()).getBundleContext();\n    webappTracker \u003d new WebAppTracker(bundleContext, Util.createFilter(bundleContext, WebAppContext.class.getName(), getServerInstanceWrapper().getManagedServerName()));\n    webappTracker.open();\n    Dictionary\u003cString, String\u003e properties \u003d new Hashtable\u003c\u003e();\n    properties.put(OSGiServerConstants.MANAGED_JETTY_SERVER_NAME, getServerInstanceWrapper().getManagedServerName());\n    _serviceRegForServices \u003d FrameworkUtil.getBundle(this.getClass()).getBundleContext().registerService(ServiceProvider.class.getName(), this, properties);\n    super.doStart();\n}",
      "path": "jetty-osgi/jetty-osgi-boot/src/main/java/org/eclipse/jetty/osgi/boot/ServiceWebAppProvider.java",
      "functionStartLine": 267,
      "functionName": "doStart",
      "functionAnnotation": "@Override",
      "functionDoc": "\n@see org.eclipse.jetty.util.component.AbstractLifeCycle#doStart()\n",
      "diff": "",
      "extendedDetails": {}
    },
    "05e2527b5c781db8c7179a134ac1bf800e830580": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2262 Sanitize osgi code\n\nSigned-off-by: Jan Bartel \u003cjanb@webtide.com\u003e\n",
      "commitDate": "2018/3/1 下午2:31",
      "commitName": "05e2527b5c781db8c7179a134ac1bf800e830580",
      "commitAuthor": "Jan Bartel",
      "commitDateOld": "2018/1/9 下午11:37",
      "commitNameOld": "41ed9f29f41263c9facede20bddfaafa669b43c5",
      "commitAuthorOld": "",
      "daysBetweenCommits": 50.62,
      "commitsBetweenForRepo": 150,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void doStart() throws Exception {\n    BundleContext bundleContext \u003d FrameworkUtil.getBundle(this.getClass()).getBundleContext();\n    webappTracker \u003d new WebAppTracker(bundleContext, Util.createFilter(bundleContext, WebAppContext.class.getName(), getServerInstanceWrapper().getManagedServerName()));\n    webappTracker.open();\n    Dictionary\u003cString, String\u003e properties \u003d new Hashtable\u003c\u003e();\n    properties.put(OSGiServerConstants.MANAGED_JETTY_SERVER_NAME, getServerInstanceWrapper().getManagedServerName());\n    _serviceRegForServices \u003d FrameworkUtil.getBundle(this.getClass()).getBundleContext().registerService(ServiceProvider.class.getName(), this, properties);\n    super.doStart();\n}",
      "path": "jetty-osgi/jetty-osgi-boot/src/main/java/org/eclipse/jetty/osgi/boot/ServiceWebAppProvider.java",
      "functionStartLine": 264,
      "functionName": "doStart",
      "functionAnnotation": "",
      "functionDoc": "\n@see org.eclipse.jetty.util.component.AbstractLifeCycle#doStart()\n",
      "diff": "@@ -1,9 +1,9 @@\n protected void doStart() throws Exception {\n     BundleContext bundleContext \u003d FrameworkUtil.getBundle(this.getClass()).getBundleContext();\n     webappTracker \u003d new WebAppTracker(bundleContext, Util.createFilter(bundleContext, WebAppContext.class.getName(), getServerInstanceWrapper().getManagedServerName()));\n     webappTracker.open();\n-    Dictionary\u003cString, String\u003e properties \u003d new Hashtable\u003cString, String\u003e();\n+    Dictionary\u003cString, String\u003e properties \u003d new Hashtable\u003c\u003e();\n     properties.put(OSGiServerConstants.MANAGED_JETTY_SERVER_NAME, getServerInstanceWrapper().getManagedServerName());\n     _serviceRegForServices \u003d FrameworkUtil.getBundle(this.getClass()).getBundleContext().registerService(ServiceProvider.class.getName(), this, properties);\n     super.doStart();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a639ee9275e672ca21320f56f62f1648d24aa140": {
      "type": "Yannotationchange",
      "commitMessage": "Resolved errorprone MissingOverride warnings #2206\n\n`@Override` was added to methods which were missing the annotation #2206\n\nSigned-off-by: Lachlan Roberts \u003clachlan@webtide.com\u003e\n",
      "commitDate": "2018/3/1 上午10:59",
      "commitName": "a639ee9275e672ca21320f56f62f1648d24aa140",
      "commitAuthor": "Lachlan Roberts",
      "commitDateOld": "2018/1/9 下午11:37",
      "commitNameOld": "41ed9f29f41263c9facede20bddfaafa669b43c5",
      "commitAuthorOld": "",
      "daysBetweenCommits": 50.47,
      "commitsBetweenForRepo": 148,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nprotected void doStart() throws Exception {\n    BundleContext bundleContext \u003d FrameworkUtil.getBundle(this.getClass()).getBundleContext();\n    webappTracker \u003d new WebAppTracker(bundleContext, Util.createFilter(bundleContext, WebAppContext.class.getName(), getServerInstanceWrapper().getManagedServerName()));\n    webappTracker.open();\n    Dictionary\u003cString, String\u003e properties \u003d new Hashtable\u003cString, String\u003e();\n    properties.put(OSGiServerConstants.MANAGED_JETTY_SERVER_NAME, getServerInstanceWrapper().getManagedServerName());\n    _serviceRegForServices \u003d FrameworkUtil.getBundle(this.getClass()).getBundleContext().registerService(ServiceProvider.class.getName(), this, properties);\n    super.doStart();\n}",
      "path": "jetty-osgi/jetty-osgi-boot/src/main/java/org/eclipse/jetty/osgi/boot/ServiceWebAppProvider.java",
      "functionStartLine": 268,
      "functionName": "doStart",
      "functionAnnotation": "@Override",
      "functionDoc": "\n@see org.eclipse.jetty.util.component.AbstractLifeCycle#doStart()\n",
      "diff": "@@ -1,9 +1,10 @@\n+@Override\n protected void doStart() throws Exception {\n     BundleContext bundleContext \u003d FrameworkUtil.getBundle(this.getClass()).getBundleContext();\n     webappTracker \u003d new WebAppTracker(bundleContext, Util.createFilter(bundleContext, WebAppContext.class.getName(), getServerInstanceWrapper().getManagedServerName()));\n     webappTracker.open();\n     Dictionary\u003cString, String\u003e properties \u003d new Hashtable\u003cString, String\u003e();\n     properties.put(OSGiServerConstants.MANAGED_JETTY_SERVER_NAME, getServerInstanceWrapper().getManagedServerName());\n     _serviceRegForServices \u003d FrameworkUtil.getBundle(this.getClass()).getBundleContext().registerService(ServiceProvider.class.getName(), this, properties);\n     super.doStart();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "@Override"
      }
    },
    "37fa778ea03aba953712348426393136e2314658": {
      "type": "Ybodychange",
      "commitMessage": "Issue #213\n",
      "commitDate": "2016/7/27 下午6:13",
      "commitName": "37fa778ea03aba953712348426393136e2314658",
      "commitAuthor": "Jan Bartel",
      "commitDateOld": "2016/1/5 上午5:31",
      "commitNameOld": "cd39fd84fe7c61267a5f652a79279b73a10e7f9c",
      "commitAuthorOld": "Joakim Erdfelt",
      "daysBetweenCommits": 204.53,
      "commitsBetweenForRepo": 803,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void doStart() throws Exception {\n    BundleContext bundleContext \u003d FrameworkUtil.getBundle(this.getClass()).getBundleContext();\n    webappTracker \u003d new WebAppTracker(bundleContext, Util.createFilter(bundleContext, WebAppContext.class.getName(), getServerInstanceWrapper().getManagedServerName()));\n    webappTracker.open();\n    Dictionary\u003cString, String\u003e properties \u003d new Hashtable\u003cString, String\u003e();\n    properties.put(OSGiServerConstants.MANAGED_JETTY_SERVER_NAME, getServerInstanceWrapper().getManagedServerName());\n    _serviceRegForServices \u003d FrameworkUtil.getBundle(this.getClass()).getBundleContext().registerService(ServiceProvider.class.getName(), this, properties);\n    super.doStart();\n}",
      "path": "jetty-osgi/jetty-osgi-boot/src/main/java/org/eclipse/jetty/osgi/boot/ServiceWebAppProvider.java",
      "functionStartLine": 265,
      "functionName": "doStart",
      "functionAnnotation": "",
      "functionDoc": "\n@see org.eclipse.jetty.util.component.AbstractLifeCycle#doStart()\n",
      "diff": "@@ -1,6 +1,9 @@\n protected void doStart() throws Exception {\n+    BundleContext bundleContext \u003d FrameworkUtil.getBundle(this.getClass()).getBundleContext();\n+    webappTracker \u003d new WebAppTracker(bundleContext, Util.createFilter(bundleContext, WebAppContext.class.getName(), getServerInstanceWrapper().getManagedServerName()));\n+    webappTracker.open();\n     Dictionary\u003cString, String\u003e properties \u003d new Hashtable\u003cString, String\u003e();\n     properties.put(OSGiServerConstants.MANAGED_JETTY_SERVER_NAME, getServerInstanceWrapper().getManagedServerName());\n     _serviceRegForServices \u003d FrameworkUtil.getBundle(this.getClass()).getBundleContext().registerService(ServiceProvider.class.getName(), this, properties);\n     super.doStart();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9af433473961dab9f5d534031fe0a6daa615a2a6": {
      "type": "Yintroduced",
      "commitMessage": "committing to save changes but does not yet compile\n",
      "commitDate": "2013/2/20 上午6:26",
      "commitName": "9af433473961dab9f5d534031fe0a6daa615a2a6",
      "commitAuthor": "Jan Bartel",
      "diff": "@@ -0,0 +1,6 @@\n+protected void doStart() throws Exception {\n+    Dictionary\u003cString, String\u003e properties \u003d new Hashtable\u003cString, String\u003e();\n+    properties.put(OSGiServerConstants.MANAGED_JETTY_SERVER_NAME, getServerInstanceWrapper().getManagedServerName());\n+    _serviceRegForServices \u003d FrameworkUtil.getBundle(this.getClass()).getBundleContext().registerService(ServiceProvider.class.getName(), this, properties);\n+    super.doStart();\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected void doStart() throws Exception {\n    Dictionary\u003cString, String\u003e properties \u003d new Hashtable\u003cString, String\u003e();\n    properties.put(OSGiServerConstants.MANAGED_JETTY_SERVER_NAME, getServerInstanceWrapper().getManagedServerName());\n    _serviceRegForServices \u003d FrameworkUtil.getBundle(this.getClass()).getBundleContext().registerService(ServiceProvider.class.getName(), this, properties);\n    super.doStart();\n}",
      "path": "jetty-osgi/jetty-osgi-boot/src/main/java/org/eclipse/jetty/osgi/boot/ServiceWebAppProvider.java",
      "functionStartLine": 215,
      "functionName": "doStart",
      "functionAnnotation": "",
      "functionDoc": "\n@see org.eclipse.jetty.util.component.AbstractLifeCycle#doStart()\n"
    }
  }
}