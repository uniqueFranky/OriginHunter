{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/Users/franky/Documents/Homework/毕业设计/testcase/hadoop/.git",
  "startCommitName": "9c3fc3ef2865164aa5f121793ac914cfeb21a181",
  "sourceFileName": "FifoScheduler.java",
  "functionName": "getAppsInQueue",
  "functionId": "getAppsInQueue___queueName-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 942,
  "functionEndLine": 953,
  "numCommitsSeen": 101,
  "timeTaken": 2403,
  "changeHistory": [
    "de3b4aac561258ad242a3c5ed1c919428893fd4c",
    "82f3454f5ac1f1c457e668e2cee12b4dcc800ee1",
    "1393581bceda234c88cafec00dbfc0ef2a402e83",
    "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
    "e1d3670f4c233696dc673c37b578ce46b44a6876"
  ],
  "changeHistoryShort": {
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": "Ybodychange",
    "82f3454f5ac1f1c457e668e2cee12b4dcc800ee1": "Ybodychange",
    "1393581bceda234c88cafec00dbfc0ef2a402e83": "Ybodychange",
    "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f": "Ybodychange",
    "e1d3670f4c233696dc673c37b578ce46b44a6876": "Yintroduced"
  },
  "changeHistoryDetails": {
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5716. Add global scheduler interface definition and update CapacityScheduler to use it. Contributed by Wangda Tan\n",
      "commitDate": "2016/11/8 上午2:14",
      "commitName": "de3b4aac561258ad242a3c5ed1c919428893fd4c",
      "commitAuthor": "Jian He",
      "commitDateOld": "2016/10/21 下午12:17",
      "commitNameOld": "754cb4e30fac1c5fe8d44626968c0ddbfe459335",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 17.58,
      "commitsBetweenForRepo": 196,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic synchronized List\u003cApplicationAttemptId\u003e getAppsInQueue(String queueName) {\n    if (queueName.equals(DEFAULT_QUEUE.getQueueName())) {\n        List\u003cApplicationAttemptId\u003e attempts \u003d new ArrayList\u003cApplicationAttemptId\u003e(applications.size());\n        for (SchedulerApplication\u003cFifoAppAttempt\u003e app : applications.values()) {\n            attempts.add(app.getCurrentAppAttempt().getApplicationAttemptId());\n        }\n        return attempts;\n    } else {\n        return null;\n    }\n}",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "functionStartLine": 935,
      "functionName": "getAppsInQueue",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,12 @@\n @Override\n public synchronized List\u003cApplicationAttemptId\u003e getAppsInQueue(String queueName) {\n     if (queueName.equals(DEFAULT_QUEUE.getQueueName())) {\n         List\u003cApplicationAttemptId\u003e attempts \u003d new ArrayList\u003cApplicationAttemptId\u003e(applications.size());\n-        for (SchedulerApplication\u003cFiCaSchedulerApp\u003e app : applications.values()) {\n+        for (SchedulerApplication\u003cFifoAppAttempt\u003e app : applications.values()) {\n             attempts.add(app.getCurrentAppAttempt().getApplicationAttemptId());\n         }\n         return attempts;\n     } else {\n         return null;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "82f3454f5ac1f1c457e668e2cee12b4dcc800ee1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2017. Merged some of the common scheduler code. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1596753 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2014/5/22 下午1:32",
      "commitName": "82f3454f5ac1f1c457e668e2cee12b4dcc800ee1",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "2014/5/14 下午2:41",
      "commitNameOld": "84dfae2f8a1c787380c65bf8de59bfd2d65901e3",
      "commitAuthorOld": "Sanford Ryza",
      "daysBetweenCommits": 7.95,
      "commitsBetweenForRepo": 46,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic synchronized List\u003cApplicationAttemptId\u003e getAppsInQueue(String queueName) {\n    if (queueName.equals(DEFAULT_QUEUE.getQueueName())) {\n        List\u003cApplicationAttemptId\u003e attempts \u003d new ArrayList\u003cApplicationAttemptId\u003e(applications.size());\n        for (SchedulerApplication\u003cFiCaSchedulerApp\u003e app : applications.values()) {\n            attempts.add(app.getCurrentAppAttempt().getApplicationAttemptId());\n        }\n        return attempts;\n    } else {\n        return null;\n    }\n}",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "functionStartLine": 891,
      "functionName": "getAppsInQueue",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,12 @@\n @Override\n public synchronized List\u003cApplicationAttemptId\u003e getAppsInQueue(String queueName) {\n     if (queueName.equals(DEFAULT_QUEUE.getQueueName())) {\n         List\u003cApplicationAttemptId\u003e attempts \u003d new ArrayList\u003cApplicationAttemptId\u003e(applications.size());\n-        for (SchedulerApplication app : applications.values()) {\n+        for (SchedulerApplication\u003cFiCaSchedulerApp\u003e app : applications.values()) {\n             attempts.add(app.getCurrentAppAttempt().getApplicationAttemptId());\n         }\n         return attempts;\n     } else {\n         return null;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1393581bceda234c88cafec00dbfc0ef2a402e83": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1490. Introduced the ability to make ResourceManager optionally not kill all containers when an ApplicationMaster exits. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1557143 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2014/1/10 下午11:04",
      "commitName": "1393581bceda234c88cafec00dbfc0ef2a402e83",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "2014/1/3 上午4:19",
      "commitNameOld": "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 7.78,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic synchronized List\u003cApplicationAttemptId\u003e getAppsInQueue(String queueName) {\n    if (queueName.equals(DEFAULT_QUEUE.getQueueName())) {\n        List\u003cApplicationAttemptId\u003e attempts \u003d new ArrayList\u003cApplicationAttemptId\u003e(applications.size());\n        for (SchedulerApplication app : applications.values()) {\n            attempts.add(app.getCurrentAppAttempt().getApplicationAttemptId());\n        }\n        return attempts;\n    } else {\n        return null;\n    }\n}",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "functionStartLine": 939,
      "functionName": "getAppsInQueue",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,12 @@\n @Override\n public synchronized List\u003cApplicationAttemptId\u003e getAppsInQueue(String queueName) {\n     if (queueName.equals(DEFAULT_QUEUE.getQueueName())) {\n-        List\u003cApplicationAttemptId\u003e apps \u003d new ArrayList\u003cApplicationAttemptId\u003e(appAttempts.size());\n-        for (FiCaSchedulerApp app : appAttempts.values()) {\n-            apps.add(app.getApplicationAttemptId());\n+        List\u003cApplicationAttemptId\u003e attempts \u003d new ArrayList\u003cApplicationAttemptId\u003e(applications.size());\n+        for (SchedulerApplication app : applications.values()) {\n+            attempts.add(app.getCurrentAppAttempt().getApplicationAttemptId());\n         }\n-        return apps;\n+        return attempts;\n     } else {\n         return null;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1493. Changed ResourceManager and Scheduler interfacing to recognize app-attempts separately from apps. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1554896 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2014/1/3 上午4:19",
      "commitName": "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "2013/12/13 上午9:44",
      "commitNameOld": "28db28d491b4e3e3ddf440db4cebab8c0ad6b7f3",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 20.77,
      "commitsBetweenForRepo": 83,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic synchronized List\u003cApplicationAttemptId\u003e getAppsInQueue(String queueName) {\n    if (queueName.equals(DEFAULT_QUEUE.getQueueName())) {\n        List\u003cApplicationAttemptId\u003e apps \u003d new ArrayList\u003cApplicationAttemptId\u003e(appAttempts.size());\n        for (FiCaSchedulerApp app : appAttempts.values()) {\n            apps.add(app.getApplicationAttemptId());\n        }\n        return apps;\n    } else {\n        return null;\n    }\n}",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "functionStartLine": 909,
      "functionName": "getAppsInQueue",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,12 @@\n @Override\n public synchronized List\u003cApplicationAttemptId\u003e getAppsInQueue(String queueName) {\n     if (queueName.equals(DEFAULT_QUEUE.getQueueName())) {\n-        List\u003cApplicationAttemptId\u003e apps \u003d new ArrayList\u003cApplicationAttemptId\u003e(applications.size());\n-        for (FiCaSchedulerApp app : applications.values()) {\n+        List\u003cApplicationAttemptId\u003e apps \u003d new ArrayList\u003cApplicationAttemptId\u003e(appAttempts.size());\n+        for (FiCaSchedulerApp app : appAttempts.values()) {\n             apps.add(app.getApplicationAttemptId());\n         }\n         return apps;\n     } else {\n         return null;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e1d3670f4c233696dc673c37b578ce46b44a6876": {
      "type": "Yintroduced",
      "commitMessage": "YARN-807. When querying apps by queue, iterating over all apps is inefficient and limiting (Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1548983 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2013/12/8 上午11:09",
      "commitName": "e1d3670f4c233696dc673c37b578ce46b44a6876",
      "commitAuthor": "Sanford Ryza",
      "diff": "@@ -0,0 +1,12 @@\n+@Override\n+public synchronized List\u003cApplicationAttemptId\u003e getAppsInQueue(String queueName) {\n+    if (queueName.equals(DEFAULT_QUEUE.getQueueName())) {\n+        List\u003cApplicationAttemptId\u003e apps \u003d new ArrayList\u003cApplicationAttemptId\u003e(applications.size());\n+        for (FiCaSchedulerApp app : applications.values()) {\n+            apps.add(app.getApplicationAttemptId());\n+        }\n+        return apps;\n+    } else {\n+        return null;\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic synchronized List\u003cApplicationAttemptId\u003e getAppsInQueue(String queueName) {\n    if (queueName.equals(DEFAULT_QUEUE.getQueueName())) {\n        List\u003cApplicationAttemptId\u003e apps \u003d new ArrayList\u003cApplicationAttemptId\u003e(applications.size());\n        for (FiCaSchedulerApp app : applications.values()) {\n            apps.add(app.getApplicationAttemptId());\n        }\n        return apps;\n    } else {\n        return null;\n    }\n}",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "functionStartLine": 856,
      "functionName": "getAppsInQueue",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}