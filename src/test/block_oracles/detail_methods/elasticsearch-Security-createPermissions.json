{
  "origin": "codeshovel",
  "repositoryName": "elasticsearch",
  "repositoryPath": "/Users/franky/Documents/Homework/毕业设计/testcase/elasticsearch/.git",
  "startCommitName": "767c69593c67befb843686de8ea51b7bc87728c9",
  "sourceFileName": "Security.java",
  "functionName": "createPermissions",
  "functionId": "createPermissions___environment-Environment",
  "sourceFilePath": "server/src/main/java/org/elasticsearch/bootstrap/Security.java",
  "functionAnnotation": "",
  "functionDoc": "returns dynamic Permissions to configured paths and bind ports\n",
  "functionStartLine": 249,
  "functionEndLine": 255,
  "numCommitsSeen": 144,
  "timeTaken": 7152,
  "changeHistory": [
    "99f88f15c5febbca2d13b5b5fda27b844153bf1a",
    "720ebe347d1410bce178e4f244237b9870403b84",
    "e06cae84f3ca9c43ddb1424268bf9a87a429fdc4",
    "d96af934db7a9ab25e8e76f01a2b5fe4c26f6ec1",
    "ff5ad39c7a5f8ea21d3ff86d3ce50668602d7a74",
    "d7d25fe6b595422c38426ed1b39ab8f93f5b5919",
    "2623ce7960b1720e06ea2ea2bfaad3621f5736f7",
    "be6f9a0196979ed02f64134013f3c9767e1f8296",
    "052cf1446f9caea16454e0db5860e8e694c61119",
    "15a62448343fd24f8e63f43b1e4b16f50005e4a5",
    "dd41c68741a6f2f8c296f41dcf58e2a6ae6b29b1",
    "51c71c235b1701bd5c25de91c53fa27d0894033f",
    "3976724882ed19e51eec9fd835a443ecfc42688c",
    "b889b3b437fd8a124ad8691d878d18339f20425b",
    "2ed2c4f884f01e51adf396aac3496bcc0a8f14c8",
    "86fc8ceac71fbcfe95d6675eeb6b2ffc2cb71d41"
  ],
  "changeHistoryShort": {
    "99f88f15c5febbca2d13b5b5fda27b844153bf1a": "Yfilerename",
    "720ebe347d1410bce178e4f244237b9870403b84": "Ybodychange",
    "e06cae84f3ca9c43ddb1424268bf9a87a429fdc4": "Ymultichange(Ybodychange,Ydocchange)",
    "d96af934db7a9ab25e8e76f01a2b5fe4c26f6ec1": "Ybodychange",
    "ff5ad39c7a5f8ea21d3ff86d3ce50668602d7a74": "Ybodychange",
    "d7d25fe6b595422c38426ed1b39ab8f93f5b5919": "Ybodychange",
    "2623ce7960b1720e06ea2ea2bfaad3621f5736f7": "Ybodychange",
    "be6f9a0196979ed02f64134013f3c9767e1f8296": "Ybodychange",
    "052cf1446f9caea16454e0db5860e8e694c61119": "Ybodychange",
    "15a62448343fd24f8e63f43b1e4b16f50005e4a5": "Yfilerename",
    "dd41c68741a6f2f8c296f41dcf58e2a6ae6b29b1": "Ybodychange",
    "51c71c235b1701bd5c25de91c53fa27d0894033f": "Ybodychange",
    "3976724882ed19e51eec9fd835a443ecfc42688c": "Ybodychange",
    "b889b3b437fd8a124ad8691d878d18339f20425b": "Ymultichange(Yparameterchange,Ybodychange)",
    "2ed2c4f884f01e51adf396aac3496bcc0a8f14c8": "Ymultichange(Yparameterchange,Ybodychange)",
    "86fc8ceac71fbcfe95d6675eeb6b2ffc2cb71d41": "Yintroduced"
  },
  "changeHistoryDetails": {
    "99f88f15c5febbca2d13b5b5fda27b844153bf1a": {
      "type": "Yfilerename",
      "commitMessage": "Rename core module to server (#28180)\n\nThis is related to #27933. It renames the core module to server. This is\r\nthe first step towards introducing an elasticsearch-core jar.",
      "commitDate": "2018/1/12 上午2:30",
      "commitName": "99f88f15c5febbca2d13b5b5fda27b844153bf1a",
      "commitAuthor": "Tim Brooks",
      "commitDateOld": "2018/1/12 上午12:31",
      "commitNameOld": "7d0eb3292b8f8ba27ef50dbbf38783dc68c70728",
      "commitAuthorOld": "Martijn van Groningen",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "static Permissions createPermissions(Environment environment) throws IOException {\n    Permissions policy \u003d new Permissions();\n    addClasspathPermissions(policy);\n    addFilePermissions(policy, environment);\n    addBindPermissions(policy, environment.settings());\n    return policy;\n}",
      "path": "server/src/main/java/org/elasticsearch/bootstrap/Security.java",
      "functionStartLine": 259,
      "functionName": "createPermissions",
      "functionAnnotation": "",
      "functionDoc": "returns dynamic Permissions to configured paths and bind ports\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "core/src/main/java/org/elasticsearch/bootstrap/Security.java",
        "newPath": "server/src/main/java/org/elasticsearch/bootstrap/Security.java"
      }
    },
    "720ebe347d1410bce178e4f244237b9870403b84": {
      "type": "Ybodychange",
      "commitMessage": "Handle system policy correctly.\n\nJust suck in the system policy, so its compatible with any version of java.\nIt means it also respects configuration (e.g. for monitoring agents)\n\nCloses #14704\n",
      "commitDate": "2015/11/13 上午7:08",
      "commitName": "720ebe347d1410bce178e4f244237b9870403b84",
      "commitAuthor": "Robert Muir",
      "commitDateOld": "2015/11/8 上午1:22",
      "commitNameOld": "e06cae84f3ca9c43ddb1424268bf9a87a429fdc4",
      "commitAuthorOld": "Robert Muir",
      "daysBetweenCommits": 5.24,
      "commitsBetweenForRepo": 83,
      "commitsBetweenForFile": 1,
      "actualSource": "static Permissions createPermissions(Environment environment) throws IOException {\n    Permissions policy \u003d new Permissions();\n    addClasspathPermissions(policy);\n    addFilePermissions(policy, environment);\n    addBindPermissions(policy, environment.settings());\n    return policy;\n}",
      "path": "core/src/main/java/org/elasticsearch/bootstrap/Security.java",
      "functionStartLine": 195,
      "functionName": "createPermissions",
      "functionAnnotation": "",
      "functionDoc": "returns dynamic Permissions to configured paths and bind ports\n",
      "diff": "@@ -1,6 +1,7 @@\n static Permissions createPermissions(Environment environment) throws IOException {\n     Permissions policy \u003d new Permissions();\n+    addClasspathPermissions(policy);\n     addFilePermissions(policy, environment);\n     addBindPermissions(policy, environment.settings());\n     return policy;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e06cae84f3ca9c43ddb1424268bf9a87a429fdc4": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "only allow code to bind to the user\u0027s configured port numbers/ranges\n\nRandom code shouldn\u0027t be listening on sockets elsewhere.\n\nToday its the wild west, but we only need to grant access to what the user configured.\n\nThis means e.g. multicast plugin has to declare its intentions in its security.policy\n\nCloses #14549\n",
      "commitDate": "2015/11/8 上午1:22",
      "commitName": "e06cae84f3ca9c43ddb1424268bf9a87a429fdc4",
      "commitAuthor": "Robert Muir",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "only allow code to bind to the user\u0027s configured port numbers/ranges\n\nRandom code shouldn\u0027t be listening on sockets elsewhere.\n\nToday its the wild west, but we only need to grant access to what the user configured.\n\nThis means e.g. multicast plugin has to declare its intentions in its security.policy\n\nCloses #14549\n",
          "commitDate": "2015/11/8 上午1:22",
          "commitName": "e06cae84f3ca9c43ddb1424268bf9a87a429fdc4",
          "commitAuthor": "Robert Muir",
          "commitDateOld": "2015/10/30 上午2:14",
          "commitNameOld": "1194cd0bdc22bc598a936480437951e7b130b1d7",
          "commitAuthorOld": "Robert Muir",
          "daysBetweenCommits": 8.96,
          "commitsBetweenForRepo": 109,
          "commitsBetweenForFile": 1,
          "actualSource": "static Permissions createPermissions(Environment environment) throws IOException {\n    Permissions policy \u003d new Permissions();\n    addFilePermissions(policy, environment);\n    addBindPermissions(policy, environment.settings());\n    return policy;\n}",
          "path": "core/src/main/java/org/elasticsearch/bootstrap/Security.java",
          "functionStartLine": 193,
          "functionName": "createPermissions",
          "functionAnnotation": "",
          "functionDoc": "returns dynamic Permissions to configured paths and bind ports\n",
          "diff": "@@ -1,26 +1,6 @@\n static Permissions createPermissions(Environment environment) throws IOException {\n     Permissions policy \u003d new Permissions();\n-    addPath(policy, \"path.home\", environment.binFile(), \"read,readlink\");\n-    addPath(policy, \"path.home\", environment.libFile(), \"read,readlink\");\n-    addPath(policy, \"path.plugins\", environment.pluginsFile(), \"read,readlink\");\n-    addPath(policy, \"path.conf\", environment.configFile(), \"read,readlink\");\n-    addPath(policy, \"path.scripts\", environment.scriptsFile(), \"read,readlink\");\n-    addPath(policy, \"java.io.tmpdir\", environment.tmpFile(), \"read,readlink,write,delete\");\n-    addPath(policy, \"path.logs\", environment.logsFile(), \"read,readlink,write,delete\");\n-    if (environment.sharedDataFile() !\u003d null) {\n-        addPath(policy, \"path.shared_data\", environment.sharedDataFile(), \"read,readlink,write,delete\");\n-    }\n-    for (Path path : environment.dataFiles()) {\n-        addPath(policy, \"path.data\", path, \"read,readlink,write,delete\");\n-    }\n-    for (Path path : environment.dataWithClusterFiles()) {\n-        addPath(policy, \"path.data\", path, \"read,readlink,write,delete\");\n-    }\n-    for (Path path : environment.repoFiles()) {\n-        addPath(policy, \"path.repo\", path, \"read,readlink,write,delete\");\n-    }\n-    if (environment.pidFile() !\u003d null) {\n-        policy.add(new FilePermission(environment.pidFile().toString(), \"delete\"));\n-    }\n+    addFilePermissions(policy, environment);\n+    addBindPermissions(policy, environment.settings());\n     return policy;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "only allow code to bind to the user\u0027s configured port numbers/ranges\n\nRandom code shouldn\u0027t be listening on sockets elsewhere.\n\nToday its the wild west, but we only need to grant access to what the user configured.\n\nThis means e.g. multicast plugin has to declare its intentions in its security.policy\n\nCloses #14549\n",
          "commitDate": "2015/11/8 上午1:22",
          "commitName": "e06cae84f3ca9c43ddb1424268bf9a87a429fdc4",
          "commitAuthor": "Robert Muir",
          "commitDateOld": "2015/10/30 上午2:14",
          "commitNameOld": "1194cd0bdc22bc598a936480437951e7b130b1d7",
          "commitAuthorOld": "Robert Muir",
          "daysBetweenCommits": 8.96,
          "commitsBetweenForRepo": 109,
          "commitsBetweenForFile": 1,
          "actualSource": "static Permissions createPermissions(Environment environment) throws IOException {\n    Permissions policy \u003d new Permissions();\n    addFilePermissions(policy, environment);\n    addBindPermissions(policy, environment.settings());\n    return policy;\n}",
          "path": "core/src/main/java/org/elasticsearch/bootstrap/Security.java",
          "functionStartLine": 193,
          "functionName": "createPermissions",
          "functionAnnotation": "",
          "functionDoc": "returns dynamic Permissions to configured paths and bind ports\n",
          "diff": "@@ -1,26 +1,6 @@\n static Permissions createPermissions(Environment environment) throws IOException {\n     Permissions policy \u003d new Permissions();\n-    addPath(policy, \"path.home\", environment.binFile(), \"read,readlink\");\n-    addPath(policy, \"path.home\", environment.libFile(), \"read,readlink\");\n-    addPath(policy, \"path.plugins\", environment.pluginsFile(), \"read,readlink\");\n-    addPath(policy, \"path.conf\", environment.configFile(), \"read,readlink\");\n-    addPath(policy, \"path.scripts\", environment.scriptsFile(), \"read,readlink\");\n-    addPath(policy, \"java.io.tmpdir\", environment.tmpFile(), \"read,readlink,write,delete\");\n-    addPath(policy, \"path.logs\", environment.logsFile(), \"read,readlink,write,delete\");\n-    if (environment.sharedDataFile() !\u003d null) {\n-        addPath(policy, \"path.shared_data\", environment.sharedDataFile(), \"read,readlink,write,delete\");\n-    }\n-    for (Path path : environment.dataFiles()) {\n-        addPath(policy, \"path.data\", path, \"read,readlink,write,delete\");\n-    }\n-    for (Path path : environment.dataWithClusterFiles()) {\n-        addPath(policy, \"path.data\", path, \"read,readlink,write,delete\");\n-    }\n-    for (Path path : environment.repoFiles()) {\n-        addPath(policy, \"path.repo\", path, \"read,readlink,write,delete\");\n-    }\n-    if (environment.pidFile() !\u003d null) {\n-        policy.add(new FilePermission(environment.pidFile().toString(), \"delete\"));\n-    }\n+    addFilePermissions(policy, environment);\n+    addBindPermissions(policy, environment.settings());\n     return policy;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "returns dynamic Permissions to configured paths\n",
            "newValue": "returns dynamic Permissions to configured paths and bind ports\n"
          }
        }
      ]
    },
    "d96af934db7a9ab25e8e76f01a2b5fe4c26f6ec1": {
      "type": "Ybodychange",
      "commitMessage": "Improve startup exceptions (especially file permissions etc)\n\nSquashed commit of the following:\n\ncommit 0014d31c1c478977cc8c50eb635eab0fb91449e4\nAuthor: Robert Muir \u003crmuir@apache.org\u003e\nDate:   Fri Aug 21 18:20:35 2015 -0400\n\n    Add missing paren to javadocs\n\ncommit bb46142785c67b849cfa5aa08fe5a3877a550b3d\nAuthor: Robert Muir \u003crmuir@apache.org\u003e\nDate:   Fri Aug 21 18:08:45 2015 -0400\n\n    Improve startup exceptions (especially file permissions etc)\n",
      "commitDate": "2015/8/22 上午6:21",
      "commitName": "d96af934db7a9ab25e8e76f01a2b5fe4c26f6ec1",
      "commitAuthor": "Robert Muir",
      "commitDateOld": "2015/8/13 上午12:51",
      "commitNameOld": "ff5ad39c7a5f8ea21d3ff86d3ce50668602d7a74",
      "commitAuthorOld": "Lee Hinman",
      "daysBetweenCommits": 9.23,
      "commitsBetweenForRepo": 205,
      "commitsBetweenForFile": 1,
      "actualSource": "static Permissions createPermissions(Environment environment) throws IOException {\n    Permissions policy \u003d new Permissions();\n    addPath(policy, \"path.home\", environment.binFile(), \"read,readlink\");\n    addPath(policy, \"path.home\", environment.libFile(), \"read,readlink\");\n    addPath(policy, \"path.plugins\", environment.pluginsFile(), \"read,readlink\");\n    addPath(policy, \"path.conf\", environment.configFile(), \"read,readlink\");\n    addPath(policy, \"path.scripts\", environment.scriptsFile(), \"read,readlink\");\n    addPath(policy, \"java.io.tmpdir\", environment.tmpFile(), \"read,readlink,write,delete\");\n    addPath(policy, \"path.logs\", environment.logsFile(), \"read,readlink,write,delete\");\n    if (environment.sharedDataFile() !\u003d null) {\n        addPath(policy, \"path.shared_data\", environment.sharedDataFile(), \"read,readlink,write,delete\");\n    }\n    for (Path path : environment.dataFiles()) {\n        addPath(policy, \"path.data\", path, \"read,readlink,write,delete\");\n    }\n    for (Path path : environment.dataWithClusterFiles()) {\n        addPath(policy, \"path.data\", path, \"read,readlink,write,delete\");\n    }\n    for (Path path : environment.repoFiles()) {\n        addPath(policy, \"path.repo\", path, \"read,readlink,write,delete\");\n    }\n    if (environment.pidFile() !\u003d null) {\n        policy.add(new FilePermission(environment.pidFile().toString(), \"delete\"));\n    }\n    return policy;\n}",
      "path": "core/src/main/java/org/elasticsearch/bootstrap/Security.java",
      "functionStartLine": 118,
      "functionName": "createPermissions",
      "functionAnnotation": "",
      "functionDoc": "returns dynamic Permissions to configured paths\n",
      "diff": "@@ -1,26 +1,26 @@\n static Permissions createPermissions(Environment environment) throws IOException {\n     Permissions policy \u003d new Permissions();\n-    addPath(policy, environment.binFile(), \"read,readlink\");\n-    addPath(policy, environment.libFile(), \"read,readlink\");\n-    addPath(policy, environment.pluginsFile(), \"read,readlink\");\n-    addPath(policy, environment.configFile(), \"read,readlink\");\n-    addPath(policy, environment.scriptsFile(), \"read,readlink\");\n-    addPath(policy, environment.tmpFile(), \"read,readlink,write,delete\");\n-    addPath(policy, environment.logsFile(), \"read,readlink,write,delete\");\n+    addPath(policy, \"path.home\", environment.binFile(), \"read,readlink\");\n+    addPath(policy, \"path.home\", environment.libFile(), \"read,readlink\");\n+    addPath(policy, \"path.plugins\", environment.pluginsFile(), \"read,readlink\");\n+    addPath(policy, \"path.conf\", environment.configFile(), \"read,readlink\");\n+    addPath(policy, \"path.scripts\", environment.scriptsFile(), \"read,readlink\");\n+    addPath(policy, \"java.io.tmpdir\", environment.tmpFile(), \"read,readlink,write,delete\");\n+    addPath(policy, \"path.logs\", environment.logsFile(), \"read,readlink,write,delete\");\n     if (environment.sharedDataFile() !\u003d null) {\n-        addPath(policy, environment.sharedDataFile(), \"read,readlink,write,delete\");\n+        addPath(policy, \"path.shared_data\", environment.sharedDataFile(), \"read,readlink,write,delete\");\n     }\n     for (Path path : environment.dataFiles()) {\n-        addPath(policy, path, \"read,readlink,write,delete\");\n+        addPath(policy, \"path.data\", path, \"read,readlink,write,delete\");\n     }\n     for (Path path : environment.dataWithClusterFiles()) {\n-        addPath(policy, path, \"read,readlink,write,delete\");\n+        addPath(policy, \"path.data\", path, \"read,readlink,write,delete\");\n     }\n     for (Path path : environment.repoFiles()) {\n-        addPath(policy, path, \"read,readlink,write,delete\");\n+        addPath(policy, \"path.repo\", path, \"read,readlink,write,delete\");\n     }\n     if (environment.pidFile() !\u003d null) {\n         policy.add(new FilePermission(environment.pidFile().toString(), \"delete\"));\n     }\n     return policy;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ff5ad39c7a5f8ea21d3ff86d3ce50668602d7a74": {
      "type": "Ybodychange",
      "commitMessage": "Add `path.shared_data`\n\nThis allows `path.shared_data` to be added to the security manager while\nstill allowing a custom `data_path` for indices using shadow replicas.\n\nFor example, configuring `path.shared_data: /tmp/foo`, then created an\nindex with:\n\n```\nPOST /myindex\n{\n  \"index\": {\n    \"number_of_shards\": 1,\n    \"number_of_replicas\": 1,\n    \"data_path\": \"/tmp/foo/bar/baz\",\n    \"shadow_replicas\": true\n  }\n}\n```\n\nThe index will then reside in `/tmp/foo/bar/baz`.\n\n`path.shared_data` defaults to `null` if not specified.\n\nResolves #12714\nRelates to #11065\n",
      "commitDate": "2015/8/13 上午12:51",
      "commitName": "ff5ad39c7a5f8ea21d3ff86d3ce50668602d7a74",
      "commitAuthor": "Lee Hinman",
      "commitDateOld": "2015/8/5 下午6:45",
      "commitNameOld": "d7d25fe6b595422c38426ed1b39ab8f93f5b5919",
      "commitAuthorOld": "Robert Muir",
      "daysBetweenCommits": 7.25,
      "commitsBetweenForRepo": 119,
      "commitsBetweenForFile": 1,
      "actualSource": "static Permissions createPermissions(Environment environment) throws IOException {\n    Permissions policy \u003d new Permissions();\n    addPath(policy, environment.binFile(), \"read,readlink\");\n    addPath(policy, environment.libFile(), \"read,readlink\");\n    addPath(policy, environment.pluginsFile(), \"read,readlink\");\n    addPath(policy, environment.configFile(), \"read,readlink\");\n    addPath(policy, environment.scriptsFile(), \"read,readlink\");\n    addPath(policy, environment.tmpFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.logsFile(), \"read,readlink,write,delete\");\n    if (environment.sharedDataFile() !\u003d null) {\n        addPath(policy, environment.sharedDataFile(), \"read,readlink,write,delete\");\n    }\n    for (Path path : environment.dataFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    for (Path path : environment.dataWithClusterFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    for (Path path : environment.repoFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    if (environment.pidFile() !\u003d null) {\n        policy.add(new FilePermission(environment.pidFile().toString(), \"delete\"));\n    }\n    return policy;\n}",
      "path": "core/src/main/java/org/elasticsearch/bootstrap/Security.java",
      "functionStartLine": 118,
      "functionName": "createPermissions",
      "functionAnnotation": "",
      "functionDoc": "returns dynamic Permissions to configured paths\n",
      "diff": "@@ -1,23 +1,26 @@\n static Permissions createPermissions(Environment environment) throws IOException {\n     Permissions policy \u003d new Permissions();\n     addPath(policy, environment.binFile(), \"read,readlink\");\n     addPath(policy, environment.libFile(), \"read,readlink\");\n     addPath(policy, environment.pluginsFile(), \"read,readlink\");\n     addPath(policy, environment.configFile(), \"read,readlink\");\n     addPath(policy, environment.scriptsFile(), \"read,readlink\");\n     addPath(policy, environment.tmpFile(), \"read,readlink,write,delete\");\n     addPath(policy, environment.logsFile(), \"read,readlink,write,delete\");\n+    if (environment.sharedDataFile() !\u003d null) {\n+        addPath(policy, environment.sharedDataFile(), \"read,readlink,write,delete\");\n+    }\n     for (Path path : environment.dataFiles()) {\n         addPath(policy, path, \"read,readlink,write,delete\");\n     }\n     for (Path path : environment.dataWithClusterFiles()) {\n         addPath(policy, path, \"read,readlink,write,delete\");\n     }\n     for (Path path : environment.repoFiles()) {\n         addPath(policy, path, \"read,readlink,write,delete\");\n     }\n     if (environment.pidFile() !\u003d null) {\n         policy.add(new FilePermission(environment.pidFile().toString(), \"delete\"));\n     }\n     return policy;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d7d25fe6b595422c38426ed1b39ab8f93f5b5919": {
      "type": "Ybodychange",
      "commitMessage": "Add path.scripts directory\n\nToday this is \"unofficial\" as conf/scripts, but some people\nwant to share scripts across different nodes and so on. Because\nthey cannot configure it, they are forced to use dirty hacks\nlike symbolic links, which isnt going to work: we aren\u0027t going\nto recursively scan conf/ and add permissions to all link targets\nunderneath it, thats crazy.\n\nI really hate adding yet another configuration knob here, but\nusers resorting to using symlinks are going to be frustrated,\nand do things in a more insecure way.\n",
      "commitDate": "2015/8/5 下午6:45",
      "commitName": "d7d25fe6b595422c38426ed1b39ab8f93f5b5919",
      "commitAuthor": "Robert Muir",
      "commitDateOld": "2015/8/4 上午4:58",
      "commitNameOld": "2623ce7960b1720e06ea2ea2bfaad3621f5736f7",
      "commitAuthorOld": "Robert Muir",
      "daysBetweenCommits": 1.57,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "actualSource": "static Permissions createPermissions(Environment environment) throws IOException {\n    Permissions policy \u003d new Permissions();\n    addPath(policy, environment.binFile(), \"read,readlink\");\n    addPath(policy, environment.libFile(), \"read,readlink\");\n    addPath(policy, environment.pluginsFile(), \"read,readlink\");\n    addPath(policy, environment.configFile(), \"read,readlink\");\n    addPath(policy, environment.scriptsFile(), \"read,readlink\");\n    addPath(policy, environment.tmpFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.logsFile(), \"read,readlink,write,delete\");\n    for (Path path : environment.dataFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    for (Path path : environment.dataWithClusterFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    for (Path path : environment.repoFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    if (environment.pidFile() !\u003d null) {\n        policy.add(new FilePermission(environment.pidFile().toString(), \"delete\"));\n    }\n    return policy;\n}",
      "path": "core/src/main/java/org/elasticsearch/bootstrap/Security.java",
      "functionStartLine": 118,
      "functionName": "createPermissions",
      "functionAnnotation": "",
      "functionDoc": "returns dynamic Permissions to configured paths\n",
      "diff": "@@ -1,22 +1,23 @@\n static Permissions createPermissions(Environment environment) throws IOException {\n     Permissions policy \u003d new Permissions();\n     addPath(policy, environment.binFile(), \"read,readlink\");\n     addPath(policy, environment.libFile(), \"read,readlink\");\n     addPath(policy, environment.pluginsFile(), \"read,readlink\");\n     addPath(policy, environment.configFile(), \"read,readlink\");\n+    addPath(policy, environment.scriptsFile(), \"read,readlink\");\n     addPath(policy, environment.tmpFile(), \"read,readlink,write,delete\");\n     addPath(policy, environment.logsFile(), \"read,readlink,write,delete\");\n     for (Path path : environment.dataFiles()) {\n         addPath(policy, path, \"read,readlink,write,delete\");\n     }\n     for (Path path : environment.dataWithClusterFiles()) {\n         addPath(policy, path, \"read,readlink,write,delete\");\n     }\n     for (Path path : environment.repoFiles()) {\n         addPath(policy, path, \"read,readlink,write,delete\");\n     }\n     if (environment.pidFile() !\u003d null) {\n         policy.add(new FilePermission(environment.pidFile().toString(), \"delete\"));\n     }\n     return policy;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2623ce7960b1720e06ea2ea2bfaad3621f5736f7": {
      "type": "Ybodychange",
      "commitMessage": "Improve permissions checking in security tests and fix crazy pidfile parent permissions\n",
      "commitDate": "2015/8/4 上午4:58",
      "commitName": "2623ce7960b1720e06ea2ea2bfaad3621f5736f7",
      "commitAuthor": "Robert Muir",
      "commitDateOld": "2015/8/4 上午2:43",
      "commitNameOld": "be6f9a0196979ed02f64134013f3c9767e1f8296",
      "commitAuthorOld": "Robert Muir",
      "daysBetweenCommits": 0.09,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "static Permissions createPermissions(Environment environment) throws IOException {\n    Permissions policy \u003d new Permissions();\n    addPath(policy, environment.binFile(), \"read,readlink\");\n    addPath(policy, environment.libFile(), \"read,readlink\");\n    addPath(policy, environment.pluginsFile(), \"read,readlink\");\n    addPath(policy, environment.configFile(), \"read,readlink\");\n    addPath(policy, environment.tmpFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.logsFile(), \"read,readlink,write,delete\");\n    for (Path path : environment.dataFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    for (Path path : environment.dataWithClusterFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    for (Path path : environment.repoFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    if (environment.pidFile() !\u003d null) {\n        policy.add(new FilePermission(environment.pidFile().toString(), \"delete\"));\n    }\n    return policy;\n}",
      "path": "core/src/main/java/org/elasticsearch/bootstrap/Security.java",
      "functionStartLine": 118,
      "functionName": "createPermissions",
      "functionAnnotation": "",
      "functionDoc": "returns dynamic Permissions to configured paths\n",
      "diff": "@@ -1,22 +1,22 @@\n static Permissions createPermissions(Environment environment) throws IOException {\n     Permissions policy \u003d new Permissions();\n     addPath(policy, environment.binFile(), \"read,readlink\");\n     addPath(policy, environment.libFile(), \"read,readlink\");\n     addPath(policy, environment.pluginsFile(), \"read,readlink\");\n     addPath(policy, environment.configFile(), \"read,readlink\");\n     addPath(policy, environment.tmpFile(), \"read,readlink,write,delete\");\n     addPath(policy, environment.logsFile(), \"read,readlink,write,delete\");\n     for (Path path : environment.dataFiles()) {\n         addPath(policy, path, \"read,readlink,write,delete\");\n     }\n     for (Path path : environment.dataWithClusterFiles()) {\n         addPath(policy, path, \"read,readlink,write,delete\");\n     }\n     for (Path path : environment.repoFiles()) {\n         addPath(policy, path, \"read,readlink,write,delete\");\n     }\n     if (environment.pidFile() !\u003d null) {\n-        addPath(policy, environment.pidFile().getParent(), \"read,readlink,write,delete\");\n+        policy.add(new FilePermission(environment.pidFile().toString(), \"delete\"));\n     }\n     return policy;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "be6f9a0196979ed02f64134013f3c9767e1f8296": {
      "type": "Ybodychange",
      "commitMessage": "improve sanity of securitymanager file permissions\n\nconf/ and plugins/ do not need read-write access: this prevents a lot\nof bad possibilities.\n",
      "commitDate": "2015/8/4 上午2:43",
      "commitName": "be6f9a0196979ed02f64134013f3c9767e1f8296",
      "commitAuthor": "Robert Muir",
      "commitDateOld": "2015/8/4 上午1:20",
      "commitNameOld": "e472cbed09cb6a4020a2ff4114e546abe8476252",
      "commitAuthorOld": "",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "static Permissions createPermissions(Environment environment) throws IOException {\n    Permissions policy \u003d new Permissions();\n    addPath(policy, environment.binFile(), \"read,readlink\");\n    addPath(policy, environment.libFile(), \"read,readlink\");\n    addPath(policy, environment.pluginsFile(), \"read,readlink\");\n    addPath(policy, environment.configFile(), \"read,readlink\");\n    addPath(policy, environment.tmpFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.logsFile(), \"read,readlink,write,delete\");\n    for (Path path : environment.dataFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    for (Path path : environment.dataWithClusterFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    for (Path path : environment.repoFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    if (environment.pidFile() !\u003d null) {\n        addPath(policy, environment.pidFile().getParent(), \"read,readlink,write,delete\");\n    }\n    return policy;\n}",
      "path": "core/src/main/java/org/elasticsearch/bootstrap/Security.java",
      "functionStartLine": 118,
      "functionName": "createPermissions",
      "functionAnnotation": "",
      "functionDoc": "returns dynamic Permissions to configured paths\n",
      "diff": "@@ -1,22 +1,22 @@\n static Permissions createPermissions(Environment environment) throws IOException {\n     Permissions policy \u003d new Permissions();\n     addPath(policy, environment.binFile(), \"read,readlink\");\n     addPath(policy, environment.libFile(), \"read,readlink\");\n+    addPath(policy, environment.pluginsFile(), \"read,readlink\");\n+    addPath(policy, environment.configFile(), \"read,readlink\");\n     addPath(policy, environment.tmpFile(), \"read,readlink,write,delete\");\n-    addPath(policy, environment.configFile(), \"read,readlink,write,delete\");\n     addPath(policy, environment.logsFile(), \"read,readlink,write,delete\");\n-    addPath(policy, environment.pluginsFile(), \"read,readlink,write,delete\");\n     for (Path path : environment.dataFiles()) {\n         addPath(policy, path, \"read,readlink,write,delete\");\n     }\n     for (Path path : environment.dataWithClusterFiles()) {\n         addPath(policy, path, \"read,readlink,write,delete\");\n     }\n     for (Path path : environment.repoFiles()) {\n         addPath(policy, path, \"read,readlink,write,delete\");\n     }\n     if (environment.pidFile() !\u003d null) {\n         addPath(policy, environment.pidFile().getParent(), \"read,readlink,write,delete\");\n     }\n     return policy;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "052cf1446f9caea16454e0db5860e8e694c61119": {
      "type": "Ybodychange",
      "commitMessage": "Remove Environment.homeFile()\n\nToday we grant read+write+delete access to any files underneath the home.\nBut we have to remove this, if we want to have improved security of files\nunderneath elasticsearch.\n",
      "commitDate": "2015/7/21 上午8:27",
      "commitName": "052cf1446f9caea16454e0db5860e8e694c61119",
      "commitAuthor": "Robert Muir",
      "commitDateOld": "2015/7/8 上午5:43",
      "commitNameOld": "46c89f006d16e5b36dedd9ff36651ea4efa3a557",
      "commitAuthorOld": "Robert Muir",
      "daysBetweenCommits": 13.11,
      "commitsBetweenForRepo": 206,
      "commitsBetweenForFile": 1,
      "actualSource": "static Permissions createPermissions(Environment environment) throws IOException {\n    Permissions policy \u003d new Permissions();\n    addPath(policy, environment.binFile(), \"read,readlink\");\n    addPath(policy, environment.libFile(), \"read,readlink\");\n    addPath(policy, environment.tmpFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.configFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.logsFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.pluginsFile(), \"read,readlink,write,delete\");\n    for (Path path : environment.dataFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    for (Path path : environment.dataWithClusterFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    for (Path path : environment.repoFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    if (environment.pidFile() !\u003d null) {\n        addPath(policy, environment.pidFile().getParent(), \"read,readlink,write,delete\");\n    }\n    return policy;\n}",
      "path": "core/src/main/java/org/elasticsearch/bootstrap/Security.java",
      "functionStartLine": 119,
      "functionName": "createPermissions",
      "functionAnnotation": "",
      "functionDoc": "returns dynamic Permissions to configured paths\n",
      "diff": "@@ -1,21 +1,22 @@\n static Permissions createPermissions(Environment environment) throws IOException {\n     Permissions policy \u003d new Permissions();\n+    addPath(policy, environment.binFile(), \"read,readlink\");\n+    addPath(policy, environment.libFile(), \"read,readlink\");\n     addPath(policy, environment.tmpFile(), \"read,readlink,write,delete\");\n-    addPath(policy, environment.homeFile(), \"read,readlink,write,delete\");\n     addPath(policy, environment.configFile(), \"read,readlink,write,delete\");\n     addPath(policy, environment.logsFile(), \"read,readlink,write,delete\");\n     addPath(policy, environment.pluginsFile(), \"read,readlink,write,delete\");\n     for (Path path : environment.dataFiles()) {\n         addPath(policy, path, \"read,readlink,write,delete\");\n     }\n     for (Path path : environment.dataWithClusterFiles()) {\n         addPath(policy, path, \"read,readlink,write,delete\");\n     }\n     for (Path path : environment.repoFiles()) {\n         addPath(policy, path, \"read,readlink,write,delete\");\n     }\n     if (environment.pidFile() !\u003d null) {\n         addPath(policy, environment.pidFile().getParent(), \"read,readlink,write,delete\");\n     }\n     return policy;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "15a62448343fd24f8e63f43b1e4b16f50005e4a5": {
      "type": "Yfilerename",
      "commitMessage": "create core module\n",
      "commitDate": "2015/6/5 下午7:12",
      "commitName": "15a62448343fd24f8e63f43b1e4b16f50005e4a5",
      "commitAuthor": "Simon Willnauer",
      "commitDateOld": "2015/6/5 下午7:11",
      "commitNameOld": "7ccc193a666e2ae888e7ac93d677a2143e5e07c3",
      "commitAuthorOld": "Simon Willnauer",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "static Permissions createPermissions(Environment environment) throws IOException {\n    Permissions policy \u003d new Permissions();\n    addPath(policy, environment.tmpFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.homeFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.configFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.logsFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.pluginsFile(), \"read,readlink,write,delete\");\n    for (Path path : environment.dataFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    for (Path path : environment.dataWithClusterFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    for (Path path : environment.repoFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    if (environment.pidFile() !\u003d null) {\n        addPath(policy, environment.pidFile().getParent(), \"read,readlink,write,delete\");\n    }\n    return policy;\n}",
      "path": "core/src/main/java/org/elasticsearch/bootstrap/Security.java",
      "functionStartLine": 58,
      "functionName": "createPermissions",
      "functionAnnotation": "",
      "functionDoc": "returns dynamic Permissions to configured paths\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/org/elasticsearch/bootstrap/Security.java",
        "newPath": "core/src/main/java/org/elasticsearch/bootstrap/Security.java"
      }
    },
    "dd41c68741a6f2f8c296f41dcf58e2a6ae6b29b1": {
      "type": "Ybodychange",
      "commitMessage": "Snapshot/Restore: fix FSRepository location configuration\n\nCloses #11068\n",
      "commitDate": "2015/5/21 上午10:14",
      "commitName": "dd41c68741a6f2f8c296f41dcf58e2a6ae6b29b1",
      "commitAuthor": "Igor Motov",
      "commitDateOld": "2015/5/12 下午12:34",
      "commitNameOld": "019a9410a355f085b28a03ef623a0cb5c9ab06b3",
      "commitAuthorOld": "Robert Muir",
      "daysBetweenCommits": 8.9,
      "commitsBetweenForRepo": 152,
      "commitsBetweenForFile": 1,
      "actualSource": "static Permissions createPermissions(Environment environment) throws IOException {\n    Permissions policy \u003d new Permissions();\n    addPath(policy, environment.tmpFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.homeFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.configFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.logsFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.pluginsFile(), \"read,readlink,write,delete\");\n    for (Path path : environment.dataFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    for (Path path : environment.dataWithClusterFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    for (Path path : environment.repoFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    if (environment.pidFile() !\u003d null) {\n        addPath(policy, environment.pidFile().getParent(), \"read,readlink,write,delete\");\n    }\n    return policy;\n}",
      "path": "src/main/java/org/elasticsearch/bootstrap/Security.java",
      "functionStartLine": 58,
      "functionName": "createPermissions",
      "functionAnnotation": "",
      "functionDoc": "returns dynamic Permissions to configured paths\n",
      "diff": "@@ -1,18 +1,21 @@\n static Permissions createPermissions(Environment environment) throws IOException {\n     Permissions policy \u003d new Permissions();\n     addPath(policy, environment.tmpFile(), \"read,readlink,write,delete\");\n     addPath(policy, environment.homeFile(), \"read,readlink,write,delete\");\n     addPath(policy, environment.configFile(), \"read,readlink,write,delete\");\n     addPath(policy, environment.logsFile(), \"read,readlink,write,delete\");\n     addPath(policy, environment.pluginsFile(), \"read,readlink,write,delete\");\n     for (Path path : environment.dataFiles()) {\n         addPath(policy, path, \"read,readlink,write,delete\");\n     }\n     for (Path path : environment.dataWithClusterFiles()) {\n         addPath(policy, path, \"read,readlink,write,delete\");\n     }\n+    for (Path path : environment.repoFiles()) {\n+        addPath(policy, path, \"read,readlink,write,delete\");\n+    }\n     if (environment.pidFile() !\u003d null) {\n         addPath(policy, environment.pidFile().getParent(), \"read,readlink,write,delete\");\n     }\n     return policy;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "51c71c235b1701bd5c25de91c53fa27d0894033f": {
      "type": "Ybodychange",
      "commitMessage": "Ban PathUtils.get (for now, until we fix the two remaining issues)\n",
      "commitDate": "2015/5/9 上午2:42",
      "commitName": "51c71c235b1701bd5c25de91c53fa27d0894033f",
      "commitAuthor": "Robert Muir",
      "commitDateOld": "2015/5/6 上午12:39",
      "commitNameOld": "3976724882ed19e51eec9fd835a443ecfc42688c",
      "commitAuthorOld": "Tanguy Leroux",
      "daysBetweenCommits": 3.09,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "actualSource": "static Permissions createPermissions(Environment environment) throws IOException {\n    Permissions policy \u003d new Permissions();\n    addPath(policy, environment.tmpFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.homeFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.configFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.logsFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.pluginsFile(), \"read,readlink,write,delete\");\n    for (Path path : environment.dataFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    for (Path path : environment.dataWithClusterFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    if (environment.pidFile() !\u003d null) {\n        addPath(policy, environment.pidFile().getParent(), \"read,readlink,write,delete\");\n    }\n    return policy;\n}",
      "path": "src/main/java/org/elasticsearch/bootstrap/Security.java",
      "functionStartLine": 54,
      "functionName": "createPermissions",
      "functionAnnotation": "",
      "functionDoc": "returns dynamic Permissions to configured paths\n",
      "diff": "@@ -1,18 +1,18 @@\n static Permissions createPermissions(Environment environment) throws IOException {\n     Permissions policy \u003d new Permissions();\n-    addPath(policy, PathUtils.get(System.getProperty(\"java.io.tmpdir\")), \"read,readlink,write,delete\");\n+    addPath(policy, environment.tmpFile(), \"read,readlink,write,delete\");\n     addPath(policy, environment.homeFile(), \"read,readlink,write,delete\");\n     addPath(policy, environment.configFile(), \"read,readlink,write,delete\");\n     addPath(policy, environment.logsFile(), \"read,readlink,write,delete\");\n     addPath(policy, environment.pluginsFile(), \"read,readlink,write,delete\");\n     for (Path path : environment.dataFiles()) {\n         addPath(policy, path, \"read,readlink,write,delete\");\n     }\n     for (Path path : environment.dataWithClusterFiles()) {\n         addPath(policy, path, \"read,readlink,write,delete\");\n     }\n     if (environment.pidFile() !\u003d null) {\n         addPath(policy, environment.pidFile().getParent(), \"read,readlink,write,delete\");\n     }\n     return policy;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "3976724882ed19e51eec9fd835a443ecfc42688c": {
      "type": "Ybodychange",
      "commitMessage": "Add pid file to Environment\n\nThis commit adds the path of the PID file to the Environment. It also add it to the Security Manager since the PID file is deleted by a shutdown hook when the JVM is exited.\n",
      "commitDate": "2015/5/6 上午12:39",
      "commitName": "3976724882ed19e51eec9fd835a443ecfc42688c",
      "commitAuthor": "Tanguy Leroux",
      "commitDateOld": "2015/5/5 上午6:28",
      "commitNameOld": "b889b3b437fd8a124ad8691d878d18339f20425b",
      "commitAuthorOld": "Ryan Ernst",
      "daysBetweenCommits": 0.76,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "actualSource": "static Permissions createPermissions(Environment environment) throws IOException {\n    Permissions policy \u003d new Permissions();\n    addPath(policy, PathUtils.get(System.getProperty(\"java.io.tmpdir\")), \"read,readlink,write,delete\");\n    addPath(policy, environment.homeFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.configFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.logsFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.pluginsFile(), \"read,readlink,write,delete\");\n    for (Path path : environment.dataFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    for (Path path : environment.dataWithClusterFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    if (environment.pidFile() !\u003d null) {\n        addPath(policy, environment.pidFile().getParent(), \"read,readlink,write,delete\");\n    }\n    return policy;\n}",
      "path": "src/main/java/org/elasticsearch/bootstrap/Security.java",
      "functionStartLine": 55,
      "functionName": "createPermissions",
      "functionAnnotation": "",
      "functionDoc": "returns dynamic Permissions to configured paths\n",
      "diff": "@@ -1,15 +1,18 @@\n static Permissions createPermissions(Environment environment) throws IOException {\n     Permissions policy \u003d new Permissions();\n     addPath(policy, PathUtils.get(System.getProperty(\"java.io.tmpdir\")), \"read,readlink,write,delete\");\n     addPath(policy, environment.homeFile(), \"read,readlink,write,delete\");\n     addPath(policy, environment.configFile(), \"read,readlink,write,delete\");\n     addPath(policy, environment.logsFile(), \"read,readlink,write,delete\");\n     addPath(policy, environment.pluginsFile(), \"read,readlink,write,delete\");\n     for (Path path : environment.dataFiles()) {\n         addPath(policy, path, \"read,readlink,write,delete\");\n     }\n     for (Path path : environment.dataWithClusterFiles()) {\n         addPath(policy, path, \"read,readlink,write,delete\");\n     }\n+    if (environment.pidFile() !\u003d null) {\n+        addPath(policy, environment.pidFile().getParent(), \"read,readlink,write,delete\");\n+    }\n     return policy;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b889b3b437fd8a124ad8691d878d18339f20425b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Use java sys prop override in tests instead of flag to createPermissions\n",
      "commitDate": "2015/5/5 上午6:28",
      "commitName": "b889b3b437fd8a124ad8691d878d18339f20425b",
      "commitAuthor": "Ryan Ernst",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Use java sys prop override in tests instead of flag to createPermissions\n",
          "commitDate": "2015/5/5 上午6:28",
          "commitName": "b889b3b437fd8a124ad8691d878d18339f20425b",
          "commitAuthor": "Ryan Ernst",
          "commitDateOld": "2015/5/5 上午4:27",
          "commitNameOld": "2ed2c4f884f01e51adf396aac3496bcc0a8f14c8",
          "commitAuthorOld": "Robert Muir",
          "daysBetweenCommits": 0.08,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "actualSource": "static Permissions createPermissions(Environment environment) throws IOException {\n    Permissions policy \u003d new Permissions();\n    addPath(policy, PathUtils.get(System.getProperty(\"java.io.tmpdir\")), \"read,readlink,write,delete\");\n    addPath(policy, environment.homeFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.configFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.logsFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.pluginsFile(), \"read,readlink,write,delete\");\n    for (Path path : environment.dataFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    for (Path path : environment.dataWithClusterFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    return policy;\n}",
          "path": "src/main/java/org/elasticsearch/bootstrap/Security.java",
          "functionStartLine": 55,
          "functionName": "createPermissions",
          "functionAnnotation": "",
          "functionDoc": "returns dynamic Permissions to configured paths\n",
          "diff": "@@ -1,17 +1,15 @@\n-static Permissions createPermissions(Environment environment, boolean addTempDir) throws IOException {\n+static Permissions createPermissions(Environment environment) throws IOException {\n     Permissions policy \u003d new Permissions();\n-    if (addTempDir) {\n-        addPath(policy, PathUtils.get(System.getProperty(\"java.io.tmpdir\")), \"read,readlink,write,delete\");\n-    }\n+    addPath(policy, PathUtils.get(System.getProperty(\"java.io.tmpdir\")), \"read,readlink,write,delete\");\n     addPath(policy, environment.homeFile(), \"read,readlink,write,delete\");\n     addPath(policy, environment.configFile(), \"read,readlink,write,delete\");\n     addPath(policy, environment.logsFile(), \"read,readlink,write,delete\");\n     addPath(policy, environment.pluginsFile(), \"read,readlink,write,delete\");\n     for (Path path : environment.dataFiles()) {\n         addPath(policy, path, \"read,readlink,write,delete\");\n     }\n     for (Path path : environment.dataWithClusterFiles()) {\n         addPath(policy, path, \"read,readlink,write,delete\");\n     }\n     return policy;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[environment-Environment, addTempDir-boolean]",
            "newValue": "[environment-Environment]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Use java sys prop override in tests instead of flag to createPermissions\n",
          "commitDate": "2015/5/5 上午6:28",
          "commitName": "b889b3b437fd8a124ad8691d878d18339f20425b",
          "commitAuthor": "Ryan Ernst",
          "commitDateOld": "2015/5/5 上午4:27",
          "commitNameOld": "2ed2c4f884f01e51adf396aac3496bcc0a8f14c8",
          "commitAuthorOld": "Robert Muir",
          "daysBetweenCommits": 0.08,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "actualSource": "static Permissions createPermissions(Environment environment) throws IOException {\n    Permissions policy \u003d new Permissions();\n    addPath(policy, PathUtils.get(System.getProperty(\"java.io.tmpdir\")), \"read,readlink,write,delete\");\n    addPath(policy, environment.homeFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.configFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.logsFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.pluginsFile(), \"read,readlink,write,delete\");\n    for (Path path : environment.dataFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    for (Path path : environment.dataWithClusterFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    return policy;\n}",
          "path": "src/main/java/org/elasticsearch/bootstrap/Security.java",
          "functionStartLine": 55,
          "functionName": "createPermissions",
          "functionAnnotation": "",
          "functionDoc": "returns dynamic Permissions to configured paths\n",
          "diff": "@@ -1,17 +1,15 @@\n-static Permissions createPermissions(Environment environment, boolean addTempDir) throws IOException {\n+static Permissions createPermissions(Environment environment) throws IOException {\n     Permissions policy \u003d new Permissions();\n-    if (addTempDir) {\n-        addPath(policy, PathUtils.get(System.getProperty(\"java.io.tmpdir\")), \"read,readlink,write,delete\");\n-    }\n+    addPath(policy, PathUtils.get(System.getProperty(\"java.io.tmpdir\")), \"read,readlink,write,delete\");\n     addPath(policy, environment.homeFile(), \"read,readlink,write,delete\");\n     addPath(policy, environment.configFile(), \"read,readlink,write,delete\");\n     addPath(policy, environment.logsFile(), \"read,readlink,write,delete\");\n     addPath(policy, environment.pluginsFile(), \"read,readlink,write,delete\");\n     for (Path path : environment.dataFiles()) {\n         addPath(policy, path, \"read,readlink,write,delete\");\n     }\n     for (Path path : environment.dataWithClusterFiles()) {\n         addPath(policy, path, \"read,readlink,write,delete\");\n     }\n     return policy;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "2ed2c4f884f01e51adf396aac3496bcc0a8f14c8": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "fix permissions bugs\n",
      "commitDate": "2015/5/5 上午4:27",
      "commitName": "2ed2c4f884f01e51adf396aac3496bcc0a8f14c8",
      "commitAuthor": "Robert Muir",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "fix permissions bugs\n",
          "commitDate": "2015/5/5 上午4:27",
          "commitName": "2ed2c4f884f01e51adf396aac3496bcc0a8f14c8",
          "commitAuthor": "Robert Muir",
          "commitDateOld": "2015/5/5 上午3:38",
          "commitNameOld": "fe046df12589dd4477637f26c0ca255d70aba169",
          "commitAuthorOld": "Robert Muir",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "static Permissions createPermissions(Environment environment, boolean addTempDir) throws IOException {\n    Permissions policy \u003d new Permissions();\n    if (addTempDir) {\n        addPath(policy, PathUtils.get(System.getProperty(\"java.io.tmpdir\")), \"read,readlink,write,delete\");\n    }\n    addPath(policy, environment.homeFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.configFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.logsFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.pluginsFile(), \"read,readlink,write,delete\");\n    for (Path path : environment.dataFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    for (Path path : environment.dataWithClusterFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    return policy;\n}",
          "path": "src/main/java/org/elasticsearch/bootstrap/Security.java",
          "functionStartLine": 55,
          "functionName": "createPermissions",
          "functionAnnotation": "",
          "functionDoc": "returns dynamic Permissions to configured paths\n",
          "diff": "@@ -1,14 +1,17 @@\n-static Permissions createPermissions(Environment environment) throws IOException {\n+static Permissions createPermissions(Environment environment, boolean addTempDir) throws IOException {\n     Permissions policy \u003d new Permissions();\n+    if (addTempDir) {\n+        addPath(policy, PathUtils.get(System.getProperty(\"java.io.tmpdir\")), \"read,readlink,write,delete\");\n+    }\n     addPath(policy, environment.homeFile(), \"read,readlink,write,delete\");\n     addPath(policy, environment.configFile(), \"read,readlink,write,delete\");\n     addPath(policy, environment.logsFile(), \"read,readlink,write,delete\");\n     addPath(policy, environment.pluginsFile(), \"read,readlink,write,delete\");\n     for (Path path : environment.dataFiles()) {\n         addPath(policy, path, \"read,readlink,write,delete\");\n     }\n     for (Path path : environment.dataWithClusterFiles()) {\n         addPath(policy, path, \"read,readlink,write,delete\");\n     }\n     return policy;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[environment-Environment]",
            "newValue": "[environment-Environment, addTempDir-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "fix permissions bugs\n",
          "commitDate": "2015/5/5 上午4:27",
          "commitName": "2ed2c4f884f01e51adf396aac3496bcc0a8f14c8",
          "commitAuthor": "Robert Muir",
          "commitDateOld": "2015/5/5 上午3:38",
          "commitNameOld": "fe046df12589dd4477637f26c0ca255d70aba169",
          "commitAuthorOld": "Robert Muir",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "static Permissions createPermissions(Environment environment, boolean addTempDir) throws IOException {\n    Permissions policy \u003d new Permissions();\n    if (addTempDir) {\n        addPath(policy, PathUtils.get(System.getProperty(\"java.io.tmpdir\")), \"read,readlink,write,delete\");\n    }\n    addPath(policy, environment.homeFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.configFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.logsFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.pluginsFile(), \"read,readlink,write,delete\");\n    for (Path path : environment.dataFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    for (Path path : environment.dataWithClusterFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    return policy;\n}",
          "path": "src/main/java/org/elasticsearch/bootstrap/Security.java",
          "functionStartLine": 55,
          "functionName": "createPermissions",
          "functionAnnotation": "",
          "functionDoc": "returns dynamic Permissions to configured paths\n",
          "diff": "@@ -1,14 +1,17 @@\n-static Permissions createPermissions(Environment environment) throws IOException {\n+static Permissions createPermissions(Environment environment, boolean addTempDir) throws IOException {\n     Permissions policy \u003d new Permissions();\n+    if (addTempDir) {\n+        addPath(policy, PathUtils.get(System.getProperty(\"java.io.tmpdir\")), \"read,readlink,write,delete\");\n+    }\n     addPath(policy, environment.homeFile(), \"read,readlink,write,delete\");\n     addPath(policy, environment.configFile(), \"read,readlink,write,delete\");\n     addPath(policy, environment.logsFile(), \"read,readlink,write,delete\");\n     addPath(policy, environment.pluginsFile(), \"read,readlink,write,delete\");\n     for (Path path : environment.dataFiles()) {\n         addPath(policy, path, \"read,readlink,write,delete\");\n     }\n     for (Path path : environment.dataWithClusterFiles()) {\n         addPath(policy, path, \"read,readlink,write,delete\");\n     }\n     return policy;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "86fc8ceac71fbcfe95d6675eeb6b2ffc2cb71d41": {
      "type": "Yintroduced",
      "commitMessage": "simplify security rules\n",
      "commitDate": "2015/5/3 上午2:42",
      "commitName": "86fc8ceac71fbcfe95d6675eeb6b2ffc2cb71d41",
      "commitAuthor": "Robert Muir",
      "diff": "@@ -0,0 +1,14 @@\n+static Permissions createPermissions(Environment environment) throws IOException {\n+    Permissions policy \u003d new Permissions();\n+    addPath(policy, environment.homeFile(), \"read,readlink,write,delete\");\n+    addPath(policy, environment.configFile(), \"read,readlink,write,delete\");\n+    addPath(policy, environment.logsFile(), \"read,readlink,write,delete\");\n+    addPath(policy, environment.pluginsFile(), \"read,readlink,write,delete\");\n+    for (Path path : environment.dataFiles()) {\n+        addPath(policy, path, \"read,readlink,write,delete\");\n+    }\n+    for (Path path : environment.dataWithClusterFiles()) {\n+        addPath(policy, path, \"read,readlink,write,delete\");\n+    }\n+    return policy;\n+}\n\\ No newline at end of file\n",
      "actualSource": "static Permissions createPermissions(Environment environment) throws IOException {\n    Permissions policy \u003d new Permissions();\n    addPath(policy, environment.homeFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.configFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.logsFile(), \"read,readlink,write,delete\");\n    addPath(policy, environment.pluginsFile(), \"read,readlink,write,delete\");\n    for (Path path : environment.dataFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    for (Path path : environment.dataWithClusterFiles()) {\n        addPath(policy, path, \"read,readlink,write,delete\");\n    }\n    return policy;\n}",
      "path": "src/main/java/org/elasticsearch/bootstrap/Security.java",
      "functionStartLine": 67,
      "functionName": "createPermissions",
      "functionAnnotation": "",
      "functionDoc": "returns dynamic Permissions to configured paths\n"
    }
  }
}