{
  "origin": "codeshovel",
  "repositoryName": "pmd",
  "repositoryPath": "/Users/franky/Documents/Homework/毕业设计/testcase/pmd/.git",
  "startCommitName": "d528dcd5d45582229ab3410deb7c40b2143d015d",
  "sourceFileName": "FormalComment.java",
  "functionName": "findJavadocs",
  "functionId": "findJavadocs",
  "sourceFilePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/FormalComment.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 30,
  "functionEndLine": 45,
  "numCommitsSeen": 25,
  "timeTaken": 2231,
  "changeHistory": [
    "913fe67db10cc4d93587ad55b40d0edfeb662ebe",
    "7221903f73dff36842abe6a024d2090021117fe1",
    "8bd1e3b486de39438d9412335742ea4aa01e6483",
    "9e2bade8c24e9b2bdc2ef4a29421922faf569d85",
    "2680c33d84306aed438baeedaca115fe1b6f2d05",
    "fd2dcddc447c8ae88fe5b1df9fca0326017309f8",
    "10ae0fb999e53a911c1847ebfdb2e563fcd80861",
    "ad88b4784d78bf1698fac72cad3825144caf6863",
    "75daf38ed303bcdbfe1034fd3a070a4306402c2d",
    "4ffa5c453f41ca0b8ae9f317570453064ed48f3d"
  ],
  "changeHistoryShort": {
    "913fe67db10cc4d93587ad55b40d0edfeb662ebe": "Ymultichange(Yparameterchange,Ybodychange)",
    "7221903f73dff36842abe6a024d2090021117fe1": "Ymovefromfile",
    "8bd1e3b486de39438d9412335742ea4aa01e6483": "Ybodychange",
    "9e2bade8c24e9b2bdc2ef4a29421922faf569d85": "Ybodychange",
    "2680c33d84306aed438baeedaca115fe1b6f2d05": "Ybodychange",
    "fd2dcddc447c8ae88fe5b1df9fca0326017309f8": "Ybodychange",
    "10ae0fb999e53a911c1847ebfdb2e563fcd80861": "Ybodychange",
    "ad88b4784d78bf1698fac72cad3825144caf6863": "Yfilerename",
    "75daf38ed303bcdbfe1034fd3a070a4306402c2d": "Yfilerename",
    "4ffa5c453f41ca0b8ae9f317570453064ed48f3d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "913fe67db10cc4d93587ad55b40d0edfeb662ebe": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Corrections for PR review\n",
      "commitDate": "2018/6/24 下午4:15",
      "commitName": "913fe67db10cc4d93587ad55b40d0edfeb662ebe",
      "commitAuthor": "Andreas Dangel",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Corrections for PR review\n",
          "commitDate": "2018/6/24 下午4:15",
          "commitName": "913fe67db10cc4d93587ad55b40d0edfeb662ebe",
          "commitAuthor": "Andreas Dangel",
          "commitDateOld": "2018/6/23 上午4:37",
          "commitNameOld": "b82e56158af895dd4f658a265ce33b0c50fcf496",
          "commitAuthorOld": "Andreas Dangel",
          "daysBetweenCommits": 1.48,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "private void findJavadocs() {\n    Collection\u003cJavadocElement\u003e kids \u003d new ArrayList\u003c\u003e();\n    Matcher javadocTagMatcher \u003d JAVADOC_TAG.matcher(getFilteredComment());\n    while (javadocTagMatcher.find()) {\n        JavadocTag tag \u003d JavadocTag.tagFor(javadocTagMatcher.group(1));\n        int tagStartIndex \u003d javadocTagMatcher.start(1);\n        if (tag !\u003d null) {\n            kids.add(new JavadocElement(getBeginLine(), getBeginLine(), tagStartIndex, tagStartIndex + tag.label.length() + 1, tag));\n        }\n    }\n    children \u003d kids.toArray(new Node[0]);\n}",
          "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/FormalComment.java",
          "functionStartLine": 30,
          "functionName": "findJavadocs",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,12 +1,12 @@\n-private void findJavadocs(String commentText) {\n+private void findJavadocs() {\n     Collection\u003cJavadocElement\u003e kids \u003d new ArrayList\u003c\u003e();\n-    Map\u003cString, Integer\u003e tags \u003d CommentUtil.javadocTagsIn(commentText);\n-    for (Map.Entry\u003cString, Integer\u003e entry : tags.entrySet()) {\n-        JavadocTag tag \u003d JavadocTag.tagFor(entry.getKey());\n-        if (tag \u003d\u003d null) {\n-            continue;\n+    Matcher javadocTagMatcher \u003d JAVADOC_TAG.matcher(getFilteredComment());\n+    while (javadocTagMatcher.find()) {\n+        JavadocTag tag \u003d JavadocTag.tagFor(javadocTagMatcher.group(1));\n+        int tagStartIndex \u003d javadocTagMatcher.start(1);\n+        if (tag !\u003d null) {\n+            kids.add(new JavadocElement(getBeginLine(), getBeginLine(), tagStartIndex, tagStartIndex + tag.label.length() + 1, tag));\n         }\n-        kids.add(new JavadocElement(getBeginLine(), getBeginLine(), entry.getValue() + 1, entry.getValue() + tag.label.length() + 1, tag));\n     }\n     children \u003d kids.toArray(new Node[0]);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[commentText-String]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Corrections for PR review\n",
          "commitDate": "2018/6/24 下午4:15",
          "commitName": "913fe67db10cc4d93587ad55b40d0edfeb662ebe",
          "commitAuthor": "Andreas Dangel",
          "commitDateOld": "2018/6/23 上午4:37",
          "commitNameOld": "b82e56158af895dd4f658a265ce33b0c50fcf496",
          "commitAuthorOld": "Andreas Dangel",
          "daysBetweenCommits": 1.48,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "private void findJavadocs() {\n    Collection\u003cJavadocElement\u003e kids \u003d new ArrayList\u003c\u003e();\n    Matcher javadocTagMatcher \u003d JAVADOC_TAG.matcher(getFilteredComment());\n    while (javadocTagMatcher.find()) {\n        JavadocTag tag \u003d JavadocTag.tagFor(javadocTagMatcher.group(1));\n        int tagStartIndex \u003d javadocTagMatcher.start(1);\n        if (tag !\u003d null) {\n            kids.add(new JavadocElement(getBeginLine(), getBeginLine(), tagStartIndex, tagStartIndex + tag.label.length() + 1, tag));\n        }\n    }\n    children \u003d kids.toArray(new Node[0]);\n}",
          "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/FormalComment.java",
          "functionStartLine": 30,
          "functionName": "findJavadocs",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,12 +1,12 @@\n-private void findJavadocs(String commentText) {\n+private void findJavadocs() {\n     Collection\u003cJavadocElement\u003e kids \u003d new ArrayList\u003c\u003e();\n-    Map\u003cString, Integer\u003e tags \u003d CommentUtil.javadocTagsIn(commentText);\n-    for (Map.Entry\u003cString, Integer\u003e entry : tags.entrySet()) {\n-        JavadocTag tag \u003d JavadocTag.tagFor(entry.getKey());\n-        if (tag \u003d\u003d null) {\n-            continue;\n+    Matcher javadocTagMatcher \u003d JAVADOC_TAG.matcher(getFilteredComment());\n+    while (javadocTagMatcher.find()) {\n+        JavadocTag tag \u003d JavadocTag.tagFor(javadocTagMatcher.group(1));\n+        int tagStartIndex \u003d javadocTagMatcher.start(1);\n+        if (tag !\u003d null) {\n+            kids.add(new JavadocElement(getBeginLine(), getBeginLine(), tagStartIndex, tagStartIndex + tag.label.length() + 1, tag));\n         }\n-        kids.add(new JavadocElement(getBeginLine(), getBeginLine(), entry.getValue() + 1, entry.getValue() + tag.label.length() + 1, tag));\n     }\n     children \u003d kids.toArray(new Node[0]);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "7221903f73dff36842abe6a024d2090021117fe1": {
      "type": "Ymovefromfile",
      "commitMessage": "[java] Deprecated CommentUtil, move parts to AST Comment, fix FormalComment\n",
      "commitDate": "2018/6/23 上午4:23",
      "commitName": "7221903f73dff36842abe6a024d2090021117fe1",
      "commitAuthor": "Andreas Dangel",
      "commitDateOld": "2018/6/23 上午3:18",
      "commitNameOld": "908d65f8c9063ba0571e7614da3a531e2974a901",
      "commitAuthorOld": "Andreas Dangel",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void findJavadocs(String commentText) {\n    Collection\u003cJavadocElement\u003e kids \u003d new ArrayList\u003c\u003e();\n    Map\u003cString, Integer\u003e tags \u003d CommentUtil.javadocTagsIn(commentText);\n    for (Map.Entry\u003cString, Integer\u003e entry : tags.entrySet()) {\n        JavadocTag tag \u003d JavadocTag.tagFor(entry.getKey());\n        if (tag \u003d\u003d null) {\n            continue;\n        }\n        kids.add(new JavadocElement(getBeginLine(), getBeginLine(), entry.getValue() + 1, entry.getValue() + tag.label.length() + 1, tag));\n    }\n    children \u003d kids.toArray(new Node[0]);\n}",
      "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/FormalComment.java",
      "functionStartLine": 29,
      "functionName": "findJavadocs",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/Comment.java",
        "newPath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/FormalComment.java",
        "oldMethodName": "findJavadocs",
        "newMethodName": "findJavadocs"
      }
    },
    "8bd1e3b486de39438d9412335742ea4aa01e6483": {
      "type": "Ybodychange",
      "commitMessage": "Fix PMD dogfood: UncommentedEmptyMethodBody, SimplifyBooleanReturns,\nUnnecessaryLocalBeforeReturn, OptimizableToArrayCall,\nClassWithOnlyPrivateConstructorsShouldBeFinal,\nUseLocaleWithCaseConversions, NonStaticInitializer, UseCollectionIsEmpty\n",
      "commitDate": "2018/3/10 下午7:04",
      "commitName": "8bd1e3b486de39438d9412335742ea4aa01e6483",
      "commitAuthor": "Andreas Dangel",
      "commitDateOld": "2016/12/2 下午7:42",
      "commitNameOld": "9e2bade8c24e9b2bdc2ef4a29421922faf569d85",
      "commitAuthorOld": "Andreas Dangel",
      "daysBetweenCommits": 462.97,
      "commitsBetweenForRepo": 2334,
      "commitsBetweenForFile": 1,
      "actualSource": "private void findJavadocs(String commentText) {\n    Collection\u003cJavadocElement\u003e kids \u003d new ArrayList\u003c\u003e();\n    Map\u003cString, Integer\u003e tags \u003d CommentUtil.javadocTagsIn(commentText);\n    for (Map.Entry\u003cString, Integer\u003e entry : tags.entrySet()) {\n        JavadocTag tag \u003d JavadocTag.tagFor(entry.getKey());\n        if (tag \u003d\u003d null) {\n            continue;\n        }\n        kids.add(new JavadocElement(getBeginLine(), getBeginLine(), entry.getValue() + 1, entry.getValue() + tag.label.length() + 1, tag));\n    }\n    children \u003d kids.toArray(new Node[0]);\n}",
      "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/Comment.java",
      "functionStartLine": 30,
      "functionName": "findJavadocs",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,12 @@\n private void findJavadocs(String commentText) {\n     Collection\u003cJavadocElement\u003e kids \u003d new ArrayList\u003c\u003e();\n     Map\u003cString, Integer\u003e tags \u003d CommentUtil.javadocTagsIn(commentText);\n     for (Map.Entry\u003cString, Integer\u003e entry : tags.entrySet()) {\n         JavadocTag tag \u003d JavadocTag.tagFor(entry.getKey());\n         if (tag \u003d\u003d null) {\n             continue;\n         }\n         kids.add(new JavadocElement(getBeginLine(), getBeginLine(), entry.getValue() + 1, entry.getValue() + tag.label.length() + 1, tag));\n     }\n-    children \u003d kids.toArray(new Node[kids.size()]);\n+    children \u003d kids.toArray(new Node[0]);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9e2bade8c24e9b2bdc2ef4a29421922faf569d85": {
      "type": "Ybodychange",
      "commitMessage": "pmd-java: checkstyle fixes\n",
      "commitDate": "2016/12/2 下午7:42",
      "commitName": "9e2bade8c24e9b2bdc2ef4a29421922faf569d85",
      "commitAuthor": "Andreas Dangel",
      "commitDateOld": "2016/12/2 下午6:32",
      "commitNameOld": "2680c33d84306aed438baeedaca115fe1b6f2d05",
      "commitAuthorOld": "Andreas Dangel",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void findJavadocs(String commentText) {\n    Collection\u003cJavadocElement\u003e kids \u003d new ArrayList\u003c\u003e();\n    Map\u003cString, Integer\u003e tags \u003d CommentUtil.javadocTagsIn(commentText);\n    for (Map.Entry\u003cString, Integer\u003e entry : tags.entrySet()) {\n        JavadocTag tag \u003d JavadocTag.tagFor(entry.getKey());\n        if (tag \u003d\u003d null) {\n            continue;\n        }\n        kids.add(new JavadocElement(getBeginLine(), getBeginLine(), entry.getValue() + 1, entry.getValue() + tag.label.length() + 1, tag));\n    }\n    children \u003d kids.toArray(new Node[kids.size()]);\n}",
      "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/Comment.java",
      "functionStartLine": 30,
      "functionName": "findJavadocs",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "2680c33d84306aed438baeedaca115fe1b6f2d05": {
      "type": "Ybodychange",
      "commitMessage": "pmd-java: checkstyle fixes\n",
      "commitDate": "2016/12/2 下午6:32",
      "commitName": "2680c33d84306aed438baeedaca115fe1b6f2d05",
      "commitAuthor": "Andreas Dangel",
      "commitDateOld": "2015/11/26 上午5:06",
      "commitNameOld": "fd2dcddc447c8ae88fe5b1df9fca0326017309f8",
      "commitAuthorOld": "Andreas Dangel",
      "daysBetweenCommits": 372.56,
      "commitsBetweenForRepo": 477,
      "commitsBetweenForFile": 1,
      "actualSource": "private void findJavadocs(String commentText) {\n    Collection\u003cJavadocElement\u003e kids \u003d new ArrayList\u003c\u003e();\n    Map\u003cString, Integer\u003e tags \u003d CommentUtil.javadocTagsIn(commentText);\n    for (Map.Entry\u003cString, Integer\u003e entry : tags.entrySet()) {\n        JavadocTag tag \u003d JavadocTag.tagFor(entry.getKey());\n        if (tag \u003d\u003d null) {\n            continue;\n        }\n        kids.add(new JavadocElement(getBeginLine(), getBeginLine(), entry.getValue() + 1, entry.getValue() + tag.label.length() + 1, tag));\n    }\n    children \u003d kids.toArray(new Node[kids.size()]);\n}",
      "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/Comment.java",
      "functionStartLine": 30,
      "functionName": "findJavadocs",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "fd2dcddc447c8ae88fe5b1df9fca0326017309f8": {
      "type": "Ybodychange",
      "commitMessage": "Java 7 changes and some compiler warnings fixed\n",
      "commitDate": "2015/11/26 上午5:06",
      "commitName": "fd2dcddc447c8ae88fe5b1df9fca0326017309f8",
      "commitAuthor": "Andreas Dangel",
      "commitDateOld": "2015/3/22 上午6:30",
      "commitNameOld": "10ae0fb999e53a911c1847ebfdb2e563fcd80861",
      "commitAuthorOld": "Andreas Dangel",
      "daysBetweenCommits": 248.94,
      "commitsBetweenForRepo": 257,
      "commitsBetweenForFile": 1,
      "actualSource": "private void findJavadocs(String commentText) {\n    Collection\u003cJavadocElement\u003e kids \u003d new ArrayList\u003c\u003e();\n    Map\u003cString, Integer\u003e tags \u003d CommentUtil.javadocTagsIn(commentText);\n    for (Map.Entry\u003cString, Integer\u003e entry : tags.entrySet()) {\n        JavadocTag tag \u003d JavadocTag.tagFor(entry.getKey());\n        if (tag \u003d\u003d null) {\n            continue;\n        }\n        kids.add(new JavadocElement(getBeginLine(), getBeginLine(), entry.getValue() + 1, entry.getValue() + tag.label.length() + 1, tag));\n    }\n    children \u003d kids.toArray(new Node[kids.size()]);\n}",
      "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/Comment.java",
      "functionStartLine": 29,
      "functionName": "findJavadocs",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,12 @@\n private void findJavadocs(String commentText) {\n-    Collection\u003cJavadocElement\u003e kids \u003d new ArrayList\u003cJavadocElement\u003e();\n+    Collection\u003cJavadocElement\u003e kids \u003d new ArrayList\u003c\u003e();\n     Map\u003cString, Integer\u003e tags \u003d CommentUtil.javadocTagsIn(commentText);\n     for (Map.Entry\u003cString, Integer\u003e entry : tags.entrySet()) {\n         JavadocTag tag \u003d JavadocTag.tagFor(entry.getKey());\n         if (tag \u003d\u003d null) {\n             continue;\n         }\n         kids.add(new JavadocElement(getBeginLine(), getBeginLine(), entry.getValue() + 1, entry.getValue() + tag.label.length() + 1, tag));\n     }\n     children \u003d kids.toArray(new Node[kids.size()]);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "10ae0fb999e53a911c1847ebfdb2e563fcd80861": {
      "type": "Ybodychange",
      "commitMessage": "dogfood, whitespaces\n",
      "commitDate": "2015/3/22 上午6:30",
      "commitName": "10ae0fb999e53a911c1847ebfdb2e563fcd80861",
      "commitAuthor": "Andreas Dangel",
      "commitDateOld": "2014/10/4 下午11:36",
      "commitNameOld": "ad88b4784d78bf1698fac72cad3825144caf6863",
      "commitAuthorOld": "Andreas Dangel",
      "daysBetweenCommits": 168.29,
      "commitsBetweenForRepo": 250,
      "commitsBetweenForFile": 1,
      "actualSource": "private void findJavadocs(String commentText) {\n    Collection\u003cJavadocElement\u003e kids \u003d new ArrayList\u003cJavadocElement\u003e();\n    Map\u003cString, Integer\u003e tags \u003d CommentUtil.javadocTagsIn(commentText);\n    for (Map.Entry\u003cString, Integer\u003e entry : tags.entrySet()) {\n        JavadocTag tag \u003d JavadocTag.tagFor(entry.getKey());\n        if (tag \u003d\u003d null) {\n            continue;\n        }\n        kids.add(new JavadocElement(getBeginLine(), getBeginLine(), entry.getValue() + 1, entry.getValue() + tag.label.length() + 1, tag));\n    }\n    children \u003d kids.toArray(new Node[kids.size()]);\n}",
      "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/Comment.java",
      "functionStartLine": 29,
      "functionName": "findJavadocs",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,11 +1,12 @@\n private void findJavadocs(String commentText) {\n     Collection\u003cJavadocElement\u003e kids \u003d new ArrayList\u003cJavadocElement\u003e();\n     Map\u003cString, Integer\u003e tags \u003d CommentUtil.javadocTagsIn(commentText);\n     for (Map.Entry\u003cString, Integer\u003e entry : tags.entrySet()) {\n         JavadocTag tag \u003d JavadocTag.tagFor(entry.getKey());\n-        if (tag \u003d\u003d null)\n+        if (tag \u003d\u003d null) {\n             continue;\n+        }\n         kids.add(new JavadocElement(getBeginLine(), getBeginLine(), entry.getValue() + 1, entry.getValue() + tag.label.length() + 1, tag));\n     }\n     children \u003d kids.toArray(new Node[kids.size()]);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ad88b4784d78bf1698fac72cad3825144caf6863": {
      "type": "Yfilerename",
      "commitMessage": "Move java into own sub-module pmd-java\n",
      "commitDate": "2014/10/4 下午11:36",
      "commitName": "ad88b4784d78bf1698fac72cad3825144caf6863",
      "commitAuthor": "Andreas Dangel",
      "commitDateOld": "2014/10/4 下午10:59",
      "commitNameOld": "fa950a82960993c7a7d70e276553b85174eec8b2",
      "commitAuthorOld": "Andreas Dangel",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void findJavadocs(String commentText) {\n    Collection\u003cJavadocElement\u003e kids \u003d new ArrayList\u003cJavadocElement\u003e();\n    Map\u003cString, Integer\u003e tags \u003d CommentUtil.javadocTagsIn(commentText);\n    for (Map.Entry\u003cString, Integer\u003e entry : tags.entrySet()) {\n        JavadocTag tag \u003d JavadocTag.tagFor(entry.getKey());\n        if (tag \u003d\u003d null)\n            continue;\n        kids.add(new JavadocElement(getBeginLine(), getBeginLine(), entry.getValue() + 1, entry.getValue() + tag.label.length() + 1, tag));\n    }\n    children \u003d kids.toArray(new Node[kids.size()]);\n}",
      "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/Comment.java",
      "functionStartLine": 29,
      "functionName": "findJavadocs",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "pmd/src/main/java/net/sourceforge/pmd/lang/java/ast/Comment.java",
        "newPath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/Comment.java"
      }
    },
    "75daf38ed303bcdbfe1034fd3a070a4306402c2d": {
      "type": "Yfilerename",
      "commitMessage": "pmd: Move all java sources to src/main/java, adapt pom.xml, test and other files accordingly\n\ngit-svn-id: https://pmd.svn.sourceforge.net/svnroot/pmd/trunk@7476 51baf565-9d33-0410-a72c-fc3788e3496d\n",
      "commitDate": "2011/11/22 上午4:45",
      "commitName": "75daf38ed303bcdbfe1034fd3a070a4306402c2d",
      "commitAuthor": "Romain Pelisse",
      "commitDateOld": "2011/11/22 上午2:10",
      "commitNameOld": "821f452f692c1497e2849302b5d9417c90edc054",
      "commitAuthorOld": "Brian Remedios",
      "daysBetweenCommits": 0.11,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void findJavadocs(String commentText) {\n    Collection\u003cJavadocElement\u003e kids \u003d new ArrayList\u003cJavadocElement\u003e();\n    Map\u003cString, Integer\u003e tags \u003d CommentUtil.javadocTagsIn(commentText);\n    for (Map.Entry\u003cString, Integer\u003e entry : tags.entrySet()) {\n        JavadocTag tag \u003d JavadocTag.tagFor(entry.getKey());\n        if (tag \u003d\u003d null)\n            continue;\n        kids.add(new JavadocElement(getBeginLine(), getBeginLine(), entry.getValue() + 1, entry.getValue() + tag.label.length() + 1, tag));\n    }\n    children \u003d kids.toArray(new Node[kids.size()]);\n}",
      "path": "pmd/src/main/java/net/sourceforge/pmd/lang/java/ast/Comment.java",
      "functionStartLine": 26,
      "functionName": "findJavadocs",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "pmd/src/net/sourceforge/pmd/lang/java/ast/Comment.java",
        "newPath": "pmd/src/main/java/net/sourceforge/pmd/lang/java/ast/Comment.java"
      }
    },
    "4ffa5c453f41ca0b8ae9f317570453064ed48f3d": {
      "type": "Yintroduced",
      "commitMessage": "refactored comment-related AST classes, updated rules\n\ngit-svn-id: https://pmd.svn.sourceforge.net/svnroot/pmd/trunk@7183 51baf565-9d33-0410-a72c-fc3788e3496d\n",
      "commitDate": "2011/1/29 下午6:13",
      "commitName": "4ffa5c453f41ca0b8ae9f317570453064ed48f3d",
      "commitAuthor": "Brian Remedios",
      "diff": "@@ -0,0 +1,11 @@\n+private void findJavadocs(String commentText) {\n+    Collection\u003cJavadocElement\u003e kids \u003d new ArrayList\u003cJavadocElement\u003e();\n+    Map\u003cString, Integer\u003e tags \u003d CommentUtil.javadocTagsIn(commentText);\n+    for (Map.Entry\u003cString, Integer\u003e entry : tags.entrySet()) {\n+        JavadocTag tag \u003d JavadocTag.tagFor(entry.getKey());\n+        if (tag \u003d\u003d null)\n+            continue;\n+        kids.add(new JavadocElement(getBeginLine(), getBeginLine(), entry.getValue() + 1, entry.getValue() + tag.label.length() + 1, tag));\n+    }\n+    children \u003d kids.toArray(new Node[kids.size()]);\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void findJavadocs(String commentText) {\n    Collection\u003cJavadocElement\u003e kids \u003d new ArrayList\u003cJavadocElement\u003e();\n    Map\u003cString, Integer\u003e tags \u003d CommentUtil.javadocTagsIn(commentText);\n    for (Map.Entry\u003cString, Integer\u003e entry : tags.entrySet()) {\n        JavadocTag tag \u003d JavadocTag.tagFor(entry.getKey());\n        if (tag \u003d\u003d null)\n            continue;\n        kids.add(new JavadocElement(getBeginLine(), getBeginLine(), entry.getValue() + 1, entry.getValue() + tag.label.length() + 1, tag));\n    }\n    children \u003d kids.toArray(new Node[kids.size()]);\n}",
      "path": "pmd/src/net/sourceforge/pmd/lang/java/ast/Comment.java",
      "functionStartLine": 24,
      "functionName": "findJavadocs",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}