{
  "origin": "codeshovel",
  "repositoryName": "keras",
  "repositoryPath": "/Users/franky/Documents/Homework/毕业设计/testcase/keras/.git",
  "startCommitName": "7a39b6c62d43c25472b2c2476bd2a8983ae4f682",
  "sourceFileName": "optimizers.py",
  "functionName": "__init__",
  "functionId": "RMSprop____init_____self__learning_rate(default-0.001)__rho(default-0.9)__**kwargs",
  "sourceFilePath": "keras/optimizers.py",
  "functionAnnotation": "",
  "functionStartLine": 245,
  "functionEndLine": 255,
  "numCommitsSeen": 479,
  "timeTaken": 4073,
  "changeHistory": [
    "544625545afe2e9c2b358e356c11bb8be53ceb51",
    "36098bf0d7ca1e8285f63963130877746dc2809d",
    "321d838ba880c3c3529997354617963bb501eaec",
    "2d8739dda9859b91bf2b7da5402d242555c48d7d",
    "2afe0b0054694045aff3dd7e263b5c44f04c323a",
    "a164addd8d5d1642d613100226a94398d929804d",
    "ea47e6de279397cb1adf953ae971cf884587447d",
    "b2e8d5ab7c476fbed088ebee27ec3373e508af47",
    "b581eb3f27a49c57f861ae64a3dfdd6f8fba53b3",
    "5f7e78df65a865084a34fc54a6cb4f78c1592137",
    "33ed943ad59fc99f469c0d9d52bfd8462542bf74",
    "cdbbdce9341b34a1f9b3fbceaf9d76ac11a580f8",
    "347e6d01ffa324b6a2c548c171eaae1569cbb6ea",
    "6fc8660a5148c1693e2c02874ffdb6a7d8f1a2c8",
    "3653f906ebf7d249bb7e0a07f991f495f56f13b7",
    "af46ab0d4dc981b899fe6c82c1712e95f251a118",
    "e5844deadccf77aef650b6af263453a2e2d83e09",
    "37a1db225420851cc668600c49697d9a2057f098"
  ],
  "changeHistoryShort": {
    "544625545afe2e9c2b358e356c11bb8be53ceb51": "Ymultichange(Yparameterchange,Ybodychange)",
    "36098bf0d7ca1e8285f63963130877746dc2809d": "Ymultichange(Yparameterchange,Ybodychange)",
    "321d838ba880c3c3529997354617963bb501eaec": "Ymultichange(Yparametermetachange,Ybodychange)",
    "2d8739dda9859b91bf2b7da5402d242555c48d7d": "Ybodychange",
    "2afe0b0054694045aff3dd7e263b5c44f04c323a": "Ybodychange",
    "a164addd8d5d1642d613100226a94398d929804d": "Ybodychange",
    "ea47e6de279397cb1adf953ae971cf884587447d": "Ybodychange",
    "b2e8d5ab7c476fbed088ebee27ec3373e508af47": "Ymultichange(Yparameterchange,Ybodychange)",
    "b581eb3f27a49c57f861ae64a3dfdd6f8fba53b3": "Yparametermetachange",
    "5f7e78df65a865084a34fc54a6cb4f78c1592137": "Yparameterchange",
    "33ed943ad59fc99f469c0d9d52bfd8462542bf74": "Ybodychange",
    "cdbbdce9341b34a1f9b3fbceaf9d76ac11a580f8": "Ybodychange",
    "347e6d01ffa324b6a2c548c171eaae1569cbb6ea": "Ybodychange",
    "6fc8660a5148c1693e2c02874ffdb6a7d8f1a2c8": "Ybodychange",
    "3653f906ebf7d249bb7e0a07f991f495f56f13b7": "Ybodychange",
    "af46ab0d4dc981b899fe6c82c1712e95f251a118": "Ybodychange",
    "e5844deadccf77aef650b6af263453a2e2d83e09": "Yfilerename",
    "37a1db225420851cc668600c49697d9a2057f098": "Yintroduced"
  },
  "changeHistoryDetails": {
    "544625545afe2e9c2b358e356c11bb8be53ceb51": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Update optimizers for TF2. (#13246)\n\n1. remove epsilon and decay for all optimizers\r\n2. add iterations into weight list into RMSProp, Adagrad, Adadelta,\r\nNadam",
      "commitDate": "2019/8/26 下午12:02",
      "commitName": "544625545afe2e9c2b358e356c11bb8be53ceb51",
      "commitAuthor": "tanzhenyu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Update optimizers for TF2. (#13246)\n\n1. remove epsilon and decay for all optimizers\r\n2. add iterations into weight list into RMSProp, Adagrad, Adadelta,\r\nNadam",
          "commitDate": "2019/8/26 下午12:02",
          "commitName": "544625545afe2e9c2b358e356c11bb8be53ceb51",
          "commitAuthor": "tanzhenyu",
          "commitDateOld": "2019/6/26 上午8:45",
          "commitNameOld": "979b636c08f1372f95bdf334cd95ab953d8ac54c",
          "commitAuthorOld": "François Chollet",
          "daysBetweenCommits": 61.14,
          "commitsBetweenForRepo": 25,
          "commitsBetweenForFile": 1,
          "actualSource": "    def __init__(self, learning_rate\u003d0.001, rho\u003d0.9, **kwargs):\n        self.initial_decay \u003d kwargs.pop(\u0027decay\u0027, 0.0)\n        self.epsilon \u003d kwargs.pop(\u0027epsilon\u0027, K.epsilon())\n        learning_rate \u003d kwargs.pop(\u0027lr\u0027, learning_rate)\n        super(RMSprop, self).__init__(**kwargs)\n        with K.name_scope(self.__class__.__name__):\n            self.learning_rate \u003d K.variable(learning_rate, name\u003d\u0027learning_rate\u0027)\n            self.rho \u003d K.variable(rho, name\u003d\u0027rho\u0027)\n            self.decay \u003d K.variable(self.initial_decay, name\u003d\u0027decay\u0027)\n            self.iterations \u003d K.variable(0, dtype\u003d\u0027int64\u0027, name\u003d\u0027iterations\u0027)\n",
          "path": "keras/optimizers.py",
          "functionStartLine": 245,
          "functionName": "__init__",
          "functionAnnotation": "",
          "diff": "@@ -1,13 +1,10 @@\n-    def __init__(self, learning_rate\u003d0.001, rho\u003d0.9, epsilon\u003dNone, decay\u003d0.,\n-                 **kwargs):\n-        learning_rate \u003d kwargs.pop(\u0027lr\u0027, None) or learning_rate\n+    def __init__(self, learning_rate\u003d0.001, rho\u003d0.9, **kwargs):\n+        self.initial_decay \u003d kwargs.pop(\u0027decay\u0027, 0.0)\n+        self.epsilon \u003d kwargs.pop(\u0027epsilon\u0027, K.epsilon())\n+        learning_rate \u003d kwargs.pop(\u0027lr\u0027, learning_rate)\n         super(RMSprop, self).__init__(**kwargs)\n         with K.name_scope(self.__class__.__name__):\n             self.learning_rate \u003d K.variable(learning_rate, name\u003d\u0027learning_rate\u0027)\n             self.rho \u003d K.variable(rho, name\u003d\u0027rho\u0027)\n-            self.decay \u003d K.variable(decay, name\u003d\u0027decay\u0027)\n+            self.decay \u003d K.variable(self.initial_decay, name\u003d\u0027decay\u0027)\n             self.iterations \u003d K.variable(0, dtype\u003d\u0027int64\u0027, name\u003d\u0027iterations\u0027)\n-        if epsilon is None:\n-            epsilon \u003d K.epsilon()\n-        self.epsilon \u003d epsilon\n-        self.initial_decay \u003d decay\n",
          "extendedDetails": {
            "oldValue": "[self, learning_rate(default-0.001), rho(default-0.9), epsilon(default-None), decay(default-0.), **kwargs]",
            "newValue": "[self, learning_rate(default-0.001), rho(default-0.9), **kwargs]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Update optimizers for TF2. (#13246)\n\n1. remove epsilon and decay for all optimizers\r\n2. add iterations into weight list into RMSProp, Adagrad, Adadelta,\r\nNadam",
          "commitDate": "2019/8/26 下午12:02",
          "commitName": "544625545afe2e9c2b358e356c11bb8be53ceb51",
          "commitAuthor": "tanzhenyu",
          "commitDateOld": "2019/6/26 上午8:45",
          "commitNameOld": "979b636c08f1372f95bdf334cd95ab953d8ac54c",
          "commitAuthorOld": "François Chollet",
          "daysBetweenCommits": 61.14,
          "commitsBetweenForRepo": 25,
          "commitsBetweenForFile": 1,
          "actualSource": "    def __init__(self, learning_rate\u003d0.001, rho\u003d0.9, **kwargs):\n        self.initial_decay \u003d kwargs.pop(\u0027decay\u0027, 0.0)\n        self.epsilon \u003d kwargs.pop(\u0027epsilon\u0027, K.epsilon())\n        learning_rate \u003d kwargs.pop(\u0027lr\u0027, learning_rate)\n        super(RMSprop, self).__init__(**kwargs)\n        with K.name_scope(self.__class__.__name__):\n            self.learning_rate \u003d K.variable(learning_rate, name\u003d\u0027learning_rate\u0027)\n            self.rho \u003d K.variable(rho, name\u003d\u0027rho\u0027)\n            self.decay \u003d K.variable(self.initial_decay, name\u003d\u0027decay\u0027)\n            self.iterations \u003d K.variable(0, dtype\u003d\u0027int64\u0027, name\u003d\u0027iterations\u0027)\n",
          "path": "keras/optimizers.py",
          "functionStartLine": 245,
          "functionName": "__init__",
          "functionAnnotation": "",
          "diff": "@@ -1,13 +1,10 @@\n-    def __init__(self, learning_rate\u003d0.001, rho\u003d0.9, epsilon\u003dNone, decay\u003d0.,\n-                 **kwargs):\n-        learning_rate \u003d kwargs.pop(\u0027lr\u0027, None) or learning_rate\n+    def __init__(self, learning_rate\u003d0.001, rho\u003d0.9, **kwargs):\n+        self.initial_decay \u003d kwargs.pop(\u0027decay\u0027, 0.0)\n+        self.epsilon \u003d kwargs.pop(\u0027epsilon\u0027, K.epsilon())\n+        learning_rate \u003d kwargs.pop(\u0027lr\u0027, learning_rate)\n         super(RMSprop, self).__init__(**kwargs)\n         with K.name_scope(self.__class__.__name__):\n             self.learning_rate \u003d K.variable(learning_rate, name\u003d\u0027learning_rate\u0027)\n             self.rho \u003d K.variable(rho, name\u003d\u0027rho\u0027)\n-            self.decay \u003d K.variable(decay, name\u003d\u0027decay\u0027)\n+            self.decay \u003d K.variable(self.initial_decay, name\u003d\u0027decay\u0027)\n             self.iterations \u003d K.variable(0, dtype\u003d\u0027int64\u0027, name\u003d\u0027iterations\u0027)\n-        if epsilon is None:\n-            epsilon \u003d K.epsilon()\n-        self.epsilon \u003d epsilon\n-        self.initial_decay \u003d decay\n",
          "extendedDetails": {}
        }
      ]
    },
    "36098bf0d7ca1e8285f63963130877746dc2809d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Rename lr to learning_rate in optimizers\n",
      "commitDate": "2019/6/26 上午1:28",
      "commitName": "36098bf0d7ca1e8285f63963130877746dc2809d",
      "commitAuthor": "François Chollet",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Rename lr to learning_rate in optimizers\n",
          "commitDate": "2019/6/26 上午1:28",
          "commitName": "36098bf0d7ca1e8285f63963130877746dc2809d",
          "commitAuthor": "François Chollet",
          "commitDateOld": "2019/3/22 下午3:02",
          "commitNameOld": "b1fbc247ad6bc5a433762b5818533fb4562f195d",
          "commitAuthorOld": "",
          "daysBetweenCommits": 95.43,
          "commitsBetweenForRepo": 77,
          "commitsBetweenForFile": 1,
          "actualSource": "    def __init__(self, learning_rate\u003d0.001, rho\u003d0.9, epsilon\u003dNone, decay\u003d0.,\n                 **kwargs):\n        learning_rate \u003d kwargs.pop(\u0027lr\u0027, None) or learning_rate\n        super(RMSprop, self).__init__(**kwargs)\n        with K.name_scope(self.__class__.__name__):\n            self.learning_rate \u003d K.variable(learning_rate, name\u003d\u0027learning_rate\u0027)\n            self.rho \u003d K.variable(rho, name\u003d\u0027rho\u0027)\n            self.decay \u003d K.variable(decay, name\u003d\u0027decay\u0027)\n            self.iterations \u003d K.variable(0, dtype\u003d\u0027int64\u0027, name\u003d\u0027iterations\u0027)\n        if epsilon is None:\n            epsilon \u003d K.epsilon()\n        self.epsilon \u003d epsilon\n        self.initial_decay \u003d decay\n",
          "path": "keras/optimizers.py",
          "functionStartLine": 242,
          "functionName": "__init__",
          "functionAnnotation": "",
          "diff": "@@ -1,12 +1,13 @@\n-    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003dNone, decay\u003d0.,\n+    def __init__(self, learning_rate\u003d0.001, rho\u003d0.9, epsilon\u003dNone, decay\u003d0.,\n                  **kwargs):\n+        learning_rate \u003d kwargs.pop(\u0027lr\u0027, None) or learning_rate\n         super(RMSprop, self).__init__(**kwargs)\n         with K.name_scope(self.__class__.__name__):\n-            self.lr \u003d K.variable(lr, name\u003d\u0027lr\u0027)\n+            self.learning_rate \u003d K.variable(learning_rate, name\u003d\u0027learning_rate\u0027)\n             self.rho \u003d K.variable(rho, name\u003d\u0027rho\u0027)\n             self.decay \u003d K.variable(decay, name\u003d\u0027decay\u0027)\n             self.iterations \u003d K.variable(0, dtype\u003d\u0027int64\u0027, name\u003d\u0027iterations\u0027)\n         if epsilon is None:\n             epsilon \u003d K.epsilon()\n         self.epsilon \u003d epsilon\n         self.initial_decay \u003d decay\n",
          "extendedDetails": {
            "oldValue": "[self, lr(default-0.001), rho(default-0.9), epsilon(default-None), decay(default-0.), **kwargs]",
            "newValue": "[self, learning_rate(default-0.001), rho(default-0.9), epsilon(default-None), decay(default-0.), **kwargs]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Rename lr to learning_rate in optimizers\n",
          "commitDate": "2019/6/26 上午1:28",
          "commitName": "36098bf0d7ca1e8285f63963130877746dc2809d",
          "commitAuthor": "François Chollet",
          "commitDateOld": "2019/3/22 下午3:02",
          "commitNameOld": "b1fbc247ad6bc5a433762b5818533fb4562f195d",
          "commitAuthorOld": "",
          "daysBetweenCommits": 95.43,
          "commitsBetweenForRepo": 77,
          "commitsBetweenForFile": 1,
          "actualSource": "    def __init__(self, learning_rate\u003d0.001, rho\u003d0.9, epsilon\u003dNone, decay\u003d0.,\n                 **kwargs):\n        learning_rate \u003d kwargs.pop(\u0027lr\u0027, None) or learning_rate\n        super(RMSprop, self).__init__(**kwargs)\n        with K.name_scope(self.__class__.__name__):\n            self.learning_rate \u003d K.variable(learning_rate, name\u003d\u0027learning_rate\u0027)\n            self.rho \u003d K.variable(rho, name\u003d\u0027rho\u0027)\n            self.decay \u003d K.variable(decay, name\u003d\u0027decay\u0027)\n            self.iterations \u003d K.variable(0, dtype\u003d\u0027int64\u0027, name\u003d\u0027iterations\u0027)\n        if epsilon is None:\n            epsilon \u003d K.epsilon()\n        self.epsilon \u003d epsilon\n        self.initial_decay \u003d decay\n",
          "path": "keras/optimizers.py",
          "functionStartLine": 242,
          "functionName": "__init__",
          "functionAnnotation": "",
          "diff": "@@ -1,12 +1,13 @@\n-    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003dNone, decay\u003d0.,\n+    def __init__(self, learning_rate\u003d0.001, rho\u003d0.9, epsilon\u003dNone, decay\u003d0.,\n                  **kwargs):\n+        learning_rate \u003d kwargs.pop(\u0027lr\u0027, None) or learning_rate\n         super(RMSprop, self).__init__(**kwargs)\n         with K.name_scope(self.__class__.__name__):\n-            self.lr \u003d K.variable(lr, name\u003d\u0027lr\u0027)\n+            self.learning_rate \u003d K.variable(learning_rate, name\u003d\u0027learning_rate\u0027)\n             self.rho \u003d K.variable(rho, name\u003d\u0027rho\u0027)\n             self.decay \u003d K.variable(decay, name\u003d\u0027decay\u0027)\n             self.iterations \u003d K.variable(0, dtype\u003d\u0027int64\u0027, name\u003d\u0027iterations\u0027)\n         if epsilon is None:\n             epsilon \u003d K.epsilon()\n         self.epsilon \u003d epsilon\n         self.initial_decay \u003d decay\n",
          "extendedDetails": {}
        }
      ]
    },
    "321d838ba880c3c3529997354617963bb501eaec": {
      "type": "Ymultichange(Yparametermetachange,Ybodychange)",
      "commitMessage": "Replace literals with K.epsilon() (#8710)\n\n* Replace literal 1e-7 with K.epsilon()\r\n\r\n* Replace literal 1e-3 with K.epsilon()\r\n\r\n* Replace literals 1e-8 with K.epsilon()\r\n\r\n* Revert using K.epsilon() for BatchNormalization\r\n\r\n* Replace literals with K.epsilon()\r\n\r\n* Don\u0027t call K.epsilon() in signatures\r\n\r\n* Add default epsilon to docstrings\r\n",
      "commitDate": "2017/12/12 上午4:21",
      "commitName": "321d838ba880c3c3529997354617963bb501eaec",
      "commitAuthor": "Oleg Zabluda",
      "subchanges": [
        {
          "type": "Yparametermetachange",
          "commitMessage": "Replace literals with K.epsilon() (#8710)\n\n* Replace literal 1e-7 with K.epsilon()\r\n\r\n* Replace literal 1e-3 with K.epsilon()\r\n\r\n* Replace literals 1e-8 with K.epsilon()\r\n\r\n* Revert using K.epsilon() for BatchNormalization\r\n\r\n* Replace literals with K.epsilon()\r\n\r\n* Don\u0027t call K.epsilon() in signatures\r\n\r\n* Add default epsilon to docstrings\r\n",
          "commitDate": "2017/12/12 上午4:21",
          "commitName": "321d838ba880c3c3529997354617963bb501eaec",
          "commitAuthor": "Oleg Zabluda",
          "commitDateOld": "2017/12/11 上午9:27",
          "commitNameOld": "7b2ca432cd237d708eff74ec78bea5240aae24fd",
          "commitAuthorOld": "Dr. Kashif Rasul",
          "daysBetweenCommits": 0.79,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "actualSource": "    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003dNone, decay\u003d0.,\n                 **kwargs):\n        super(RMSprop, self).__init__(**kwargs)\n        with K.name_scope(self.__class__.__name__):\n            self.lr \u003d K.variable(lr, name\u003d\u0027lr\u0027)\n            self.rho \u003d K.variable(rho, name\u003d\u0027rho\u0027)\n            self.decay \u003d K.variable(decay, name\u003d\u0027decay\u0027)\n            self.iterations \u003d K.variable(0, dtype\u003d\u0027int64\u0027, name\u003d\u0027iterations\u0027)\n        if epsilon is None:\n            epsilon \u003d K.epsilon()\n        self.epsilon \u003d epsilon\n        self.initial_decay \u003d decay\n",
          "path": "keras/optimizers.py",
          "functionStartLine": 213,
          "functionName": "__init__",
          "functionAnnotation": "",
          "diff": "@@ -1,10 +1,12 @@\n-    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-8, decay\u003d0.,\n+    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003dNone, decay\u003d0.,\n                  **kwargs):\n         super(RMSprop, self).__init__(**kwargs)\n         with K.name_scope(self.__class__.__name__):\n             self.lr \u003d K.variable(lr, name\u003d\u0027lr\u0027)\n             self.rho \u003d K.variable(rho, name\u003d\u0027rho\u0027)\n             self.decay \u003d K.variable(decay, name\u003d\u0027decay\u0027)\n             self.iterations \u003d K.variable(0, dtype\u003d\u0027int64\u0027, name\u003d\u0027iterations\u0027)\n+        if epsilon is None:\n+            epsilon \u003d K.epsilon()\n         self.epsilon \u003d epsilon\n         self.initial_decay \u003d decay\n",
          "extendedDetails": {
            "oldValue": "[self, lr(default-0.001), rho(default-0.9), epsilon(default-1e-8), decay(default-0.), **kwargs]",
            "newValue": "[self, lr(default-0.001), rho(default-0.9), epsilon(default-None), decay(default-0.), **kwargs]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Replace literals with K.epsilon() (#8710)\n\n* Replace literal 1e-7 with K.epsilon()\r\n\r\n* Replace literal 1e-3 with K.epsilon()\r\n\r\n* Replace literals 1e-8 with K.epsilon()\r\n\r\n* Revert using K.epsilon() for BatchNormalization\r\n\r\n* Replace literals with K.epsilon()\r\n\r\n* Don\u0027t call K.epsilon() in signatures\r\n\r\n* Add default epsilon to docstrings\r\n",
          "commitDate": "2017/12/12 上午4:21",
          "commitName": "321d838ba880c3c3529997354617963bb501eaec",
          "commitAuthor": "Oleg Zabluda",
          "commitDateOld": "2017/12/11 上午9:27",
          "commitNameOld": "7b2ca432cd237d708eff74ec78bea5240aae24fd",
          "commitAuthorOld": "Dr. Kashif Rasul",
          "daysBetweenCommits": 0.79,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "actualSource": "    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003dNone, decay\u003d0.,\n                 **kwargs):\n        super(RMSprop, self).__init__(**kwargs)\n        with K.name_scope(self.__class__.__name__):\n            self.lr \u003d K.variable(lr, name\u003d\u0027lr\u0027)\n            self.rho \u003d K.variable(rho, name\u003d\u0027rho\u0027)\n            self.decay \u003d K.variable(decay, name\u003d\u0027decay\u0027)\n            self.iterations \u003d K.variable(0, dtype\u003d\u0027int64\u0027, name\u003d\u0027iterations\u0027)\n        if epsilon is None:\n            epsilon \u003d K.epsilon()\n        self.epsilon \u003d epsilon\n        self.initial_decay \u003d decay\n",
          "path": "keras/optimizers.py",
          "functionStartLine": 213,
          "functionName": "__init__",
          "functionAnnotation": "",
          "diff": "@@ -1,10 +1,12 @@\n-    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-8, decay\u003d0.,\n+    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003dNone, decay\u003d0.,\n                  **kwargs):\n         super(RMSprop, self).__init__(**kwargs)\n         with K.name_scope(self.__class__.__name__):\n             self.lr \u003d K.variable(lr, name\u003d\u0027lr\u0027)\n             self.rho \u003d K.variable(rho, name\u003d\u0027rho\u0027)\n             self.decay \u003d K.variable(decay, name\u003d\u0027decay\u0027)\n             self.iterations \u003d K.variable(0, dtype\u003d\u0027int64\u0027, name\u003d\u0027iterations\u0027)\n+        if epsilon is None:\n+            epsilon \u003d K.epsilon()\n         self.epsilon \u003d epsilon\n         self.initial_decay \u003d decay\n",
          "extendedDetails": {}
        }
      ]
    },
    "2d8739dda9859b91bf2b7da5402d242555c48d7d": {
      "type": "Ybodychange",
      "commitMessage": "Minor optimizer consistency fixes.\n\n",
      "commitDate": "2017/8/25 上午6:06",
      "commitName": "2d8739dda9859b91bf2b7da5402d242555c48d7d",
      "commitAuthor": "François Chollet",
      "commitDateOld": "2017/8/13 上午9:01",
      "commitNameOld": "2afe0b0054694045aff3dd7e263b5c44f04c323a",
      "commitAuthorOld": "François Chollet",
      "daysBetweenCommits": 11.88,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "actualSource": "    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-8, decay\u003d0.,\n                 **kwargs):\n        super(RMSprop, self).__init__(**kwargs)\n        with K.name_scope(self.__class__.__name__):\n            self.lr \u003d K.variable(lr, name\u003d\u0027lr\u0027)\n            self.rho \u003d K.variable(rho, name\u003d\u0027rho\u0027)\n            self.decay \u003d K.variable(decay, name\u003d\u0027decay\u0027)\n            self.iterations \u003d K.variable(0, dtype\u003d\u0027int64\u0027, name\u003d\u0027iterations\u0027)\n        self.epsilon \u003d epsilon\n        self.initial_decay \u003d decay\n",
      "path": "keras/optimizers.py",
      "functionStartLine": 212,
      "functionName": "__init__",
      "functionAnnotation": "",
      "diff": "@@ -1,10 +1,10 @@\n     def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-8, decay\u003d0.,\n                  **kwargs):\n         super(RMSprop, self).__init__(**kwargs)\n         with K.name_scope(self.__class__.__name__):\n             self.lr \u003d K.variable(lr, name\u003d\u0027lr\u0027)\n             self.rho \u003d K.variable(rho, name\u003d\u0027rho\u0027)\n             self.decay \u003d K.variable(decay, name\u003d\u0027decay\u0027)\n-            self.iterations \u003d K.variable(0., name\u003d\u0027iterations\u0027)\n+            self.iterations \u003d K.variable(0, dtype\u003d\u0027int64\u0027, name\u003d\u0027iterations\u0027)\n         self.epsilon \u003d epsilon\n         self.initial_decay \u003d decay\n",
      "extendedDetails": {}
    },
    "2afe0b0054694045aff3dd7e263b5c44f04c323a": {
      "type": "Ybodychange",
      "commitMessage": "Improve TB UX by grouping `compile` logic into name scopes. (#7584)\n\n* Move constraint management to be based on variable attributes (like TF).\r\n\r\n* Add correctness tests for constraint support in all optimizers.\r\n\r\n* Add `constraint` in `variable` docstring.\r\n\r\n* Skip TF opt test if backend isn’t TF\r\n\r\n* Fix Theano backend support.\r\n\r\n* Improve TensorBoard UX by grouping `compile` logic into name scopes.\r\n\r\n* Improve name scoping in optimizers.\r\n\r\n* Fix issue with saving duplicate variable names in optimizers for Theano/CNTK\r\n\r\n* Name update\r\n",
      "commitDate": "2017/8/13 上午9:01",
      "commitName": "2afe0b0054694045aff3dd7e263b5c44f04c323a",
      "commitAuthor": "François Chollet",
      "commitDateOld": "2017/8/9 上午5:54",
      "commitNameOld": "2382f788b4f14646fa8b6b2d8d65f1fc138b35c4",
      "commitAuthorOld": "François Chollet",
      "daysBetweenCommits": 4.13,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-8, decay\u003d0.,\n                 **kwargs):\n        super(RMSprop, self).__init__(**kwargs)\n        with K.name_scope(self.__class__.__name__):\n            self.lr \u003d K.variable(lr, name\u003d\u0027lr\u0027)\n            self.rho \u003d K.variable(rho, name\u003d\u0027rho\u0027)\n            self.decay \u003d K.variable(decay, name\u003d\u0027decay\u0027)\n            self.iterations \u003d K.variable(0., name\u003d\u0027iterations\u0027)\n        self.epsilon \u003d epsilon\n        self.initial_decay \u003d decay\n",
      "path": "keras/optimizers.py",
      "functionStartLine": 213,
      "functionName": "__init__",
      "functionAnnotation": "",
      "diff": "@@ -1,9 +1,10 @@\n     def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-8, decay\u003d0.,\n                  **kwargs):\n         super(RMSprop, self).__init__(**kwargs)\n-        self.lr \u003d K.variable(lr, name\u003d\u0027lr\u0027)\n-        self.rho \u003d K.variable(rho, name\u003d\u0027rho\u0027)\n+        with K.name_scope(self.__class__.__name__):\n+            self.lr \u003d K.variable(lr, name\u003d\u0027lr\u0027)\n+            self.rho \u003d K.variable(rho, name\u003d\u0027rho\u0027)\n+            self.decay \u003d K.variable(decay, name\u003d\u0027decay\u0027)\n+            self.iterations \u003d K.variable(0., name\u003d\u0027iterations\u0027)\n         self.epsilon \u003d epsilon\n-        self.decay \u003d K.variable(decay, name\u003d\u0027decay\u0027)\n         self.initial_decay \u003d decay\n-        self.iterations \u003d K.variable(0., name\u003d\u0027iterations\u0027)\n",
      "extendedDetails": {}
    },
    "a164addd8d5d1642d613100226a94398d929804d": {
      "type": "Ybodychange",
      "commitMessage": "Add names in optimizer variables.",
      "commitDate": "2017/2/27 上午3:18",
      "commitName": "a164addd8d5d1642d613100226a94398d929804d",
      "commitAuthor": "Francois Chollet",
      "commitDateOld": "2017/2/22 上午6:30",
      "commitNameOld": "fb21b1bad8a7e6f5cf5bb7843aa9037b6213e35a",
      "commitAuthorOld": "Francois Chollet",
      "daysBetweenCommits": 4.87,
      "commitsBetweenForRepo": 54,
      "commitsBetweenForFile": 1,
      "actualSource": "    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-8, decay\u003d0.,\n                 **kwargs):\n        super(RMSprop, self).__init__(**kwargs)\n        self.lr \u003d K.variable(lr, name\u003d\u0027lr\u0027)\n        self.rho \u003d K.variable(rho, name\u003d\u0027rho\u0027)\n        self.epsilon \u003d epsilon\n        self.decay \u003d K.variable(decay, name\u003d\u0027decay\u0027)\n        self.initial_decay \u003d decay\n        self.iterations \u003d K.variable(0., name\u003d\u0027iterations\u0027)\n",
      "path": "keras/optimizers.py",
      "functionStartLine": 186,
      "functionName": "__init__",
      "functionAnnotation": "",
      "diff": "@@ -1,9 +1,9 @@\n     def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-8, decay\u003d0.,\n                  **kwargs):\n         super(RMSprop, self).__init__(**kwargs)\n-        self.lr \u003d K.variable(lr)\n-        self.rho \u003d K.variable(rho)\n+        self.lr \u003d K.variable(lr, name\u003d\u0027lr\u0027)\n+        self.rho \u003d K.variable(rho, name\u003d\u0027rho\u0027)\n         self.epsilon \u003d epsilon\n-        self.decay \u003d K.variable(decay)\n+        self.decay \u003d K.variable(decay, name\u003d\u0027decay\u0027)\n         self.initial_decay \u003d decay\n-        self.iterations \u003d K.variable(0.)\n+        self.iterations \u003d K.variable(0., name\u003d\u0027iterations\u0027)\n",
      "extendedDetails": {}
    },
    "ea47e6de279397cb1adf953ae971cf884587447d": {
      "type": "Ybodychange",
      "commitMessage": "Style fixes in optimizers.",
      "commitDate": "2017/1/11 上午6:44",
      "commitName": "ea47e6de279397cb1adf953ae971cf884587447d",
      "commitAuthor": "Francois Chollet",
      "commitDateOld": "2016/12/21 上午7:08",
      "commitNameOld": "497cff977298768530bfcd9992688731c0fa54b3",
      "commitAuthorOld": "Francois Chollet",
      "daysBetweenCommits": 20.98,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "actualSource": "    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-8, decay\u003d0.,\n                 **kwargs):\n        super(RMSprop, self).__init__(**kwargs)\n        self.lr \u003d K.variable(lr)\n        self.rho \u003d K.variable(rho)\n        self.epsilon \u003d epsilon\n        self.decay \u003d K.variable(decay)\n        self.initial_decay \u003d decay\n        self.iterations \u003d K.variable(0.)\n",
      "path": "keras/optimizers.py",
      "functionStartLine": 200,
      "functionName": "__init__",
      "functionAnnotation": "",
      "diff": "@@ -1,9 +1,9 @@\n     def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-8, decay\u003d0.,\n                  **kwargs):\n         super(RMSprop, self).__init__(**kwargs)\n-        self.__dict__.update(locals())\n         self.lr \u003d K.variable(lr)\n         self.rho \u003d K.variable(rho)\n+        self.epsilon \u003d epsilon\n         self.decay \u003d K.variable(decay)\n-        self.inital_decay \u003d decay\n+        self.initial_decay \u003d decay\n         self.iterations \u003d K.variable(0.)\n",
      "extendedDetails": {}
    },
    "b2e8d5ab7c476fbed088ebee27ec3373e508af47": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Add support for LR decay in all optimizers",
      "commitDate": "2016/9/11 上午3:34",
      "commitName": "b2e8d5ab7c476fbed088ebee27ec3373e508af47",
      "commitAuthor": "fchollet",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Add support for LR decay in all optimizers",
          "commitDate": "2016/9/11 上午3:34",
          "commitName": "b2e8d5ab7c476fbed088ebee27ec3373e508af47",
          "commitAuthor": "fchollet",
          "commitDateOld": "2016/8/25 上午7:15",
          "commitNameOld": "c0b27108d00a5c8711bb778eef6f8a3ddf90bc1c",
          "commitAuthorOld": "Francois Chollet",
          "daysBetweenCommits": 16.85,
          "commitsBetweenForRepo": 53,
          "commitsBetweenForFile": 1,
          "actualSource": "    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-8, decay\u003d0.,\n                 **kwargs):\n        super(RMSprop, self).__init__(**kwargs)\n        self.__dict__.update(locals())\n        self.lr \u003d K.variable(lr)\n        self.rho \u003d K.variable(rho)\n        self.decay \u003d K.variable(decay)\n        self.inital_decay \u003d decay\n        self.iterations \u003d K.variable(0.)\n",
          "path": "keras/optimizers.py",
          "functionStartLine": 195,
          "functionName": "__init__",
          "functionAnnotation": "",
          "diff": "@@ -1,5 +1,9 @@\n-    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-8, **kwargs):\n+    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-8, decay\u003d0.,\n+                 **kwargs):\n         super(RMSprop, self).__init__(**kwargs)\n         self.__dict__.update(locals())\n         self.lr \u003d K.variable(lr)\n         self.rho \u003d K.variable(rho)\n+        self.decay \u003d K.variable(decay)\n+        self.inital_decay \u003d decay\n+        self.iterations \u003d K.variable(0.)\n",
          "extendedDetails": {
            "oldValue": "[self, lr(default-0.001), rho(default-0.9), epsilon(default-1e-8), **kwargs]",
            "newValue": "[self, lr(default-0.001), rho(default-0.9), epsilon(default-1e-8), decay(default-0.), **kwargs]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Add support for LR decay in all optimizers",
          "commitDate": "2016/9/11 上午3:34",
          "commitName": "b2e8d5ab7c476fbed088ebee27ec3373e508af47",
          "commitAuthor": "fchollet",
          "commitDateOld": "2016/8/25 上午7:15",
          "commitNameOld": "c0b27108d00a5c8711bb778eef6f8a3ddf90bc1c",
          "commitAuthorOld": "Francois Chollet",
          "daysBetweenCommits": 16.85,
          "commitsBetweenForRepo": 53,
          "commitsBetweenForFile": 1,
          "actualSource": "    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-8, decay\u003d0.,\n                 **kwargs):\n        super(RMSprop, self).__init__(**kwargs)\n        self.__dict__.update(locals())\n        self.lr \u003d K.variable(lr)\n        self.rho \u003d K.variable(rho)\n        self.decay \u003d K.variable(decay)\n        self.inital_decay \u003d decay\n        self.iterations \u003d K.variable(0.)\n",
          "path": "keras/optimizers.py",
          "functionStartLine": 195,
          "functionName": "__init__",
          "functionAnnotation": "",
          "diff": "@@ -1,5 +1,9 @@\n-    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-8, **kwargs):\n+    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-8, decay\u003d0.,\n+                 **kwargs):\n         super(RMSprop, self).__init__(**kwargs)\n         self.__dict__.update(locals())\n         self.lr \u003d K.variable(lr)\n         self.rho \u003d K.variable(rho)\n+        self.decay \u003d K.variable(decay)\n+        self.inital_decay \u003d decay\n+        self.iterations \u003d K.variable(0.)\n",
          "extendedDetails": {}
        }
      ]
    },
    "b581eb3f27a49c57f861ae64a3dfdd6f8fba53b3": {
      "type": "Yparametermetachange",
      "commitMessage": "Update RMSprop",
      "commitDate": "2016/5/12 下午12:35",
      "commitName": "b581eb3f27a49c57f861ae64a3dfdd6f8fba53b3",
      "commitAuthor": "fchollet",
      "commitDateOld": "2016/5/12 上午8:20",
      "commitNameOld": "5308033936aa05bec65f11a6769ffbc904d0cac3",
      "commitAuthorOld": "Francois Chollet",
      "daysBetweenCommits": 0.18,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-8, **kwargs):\n        super(RMSprop, self).__init__(**kwargs)\n        self.__dict__.update(locals())\n        self.lr \u003d K.variable(lr)\n        self.rho \u003d K.variable(rho)\n",
      "path": "keras/optimizers.py",
      "functionStartLine": 171,
      "functionName": "__init__",
      "functionAnnotation": "",
      "diff": "@@ -1,5 +1,5 @@\n-    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-6, **kwargs):\n+    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-8, **kwargs):\n         super(RMSprop, self).__init__(**kwargs)\n         self.__dict__.update(locals())\n         self.lr \u003d K.variable(lr)\n         self.rho \u003d K.variable(rho)\n",
      "extendedDetails": {
        "oldValue": "[self, lr(default-0.001), rho(default-0.9), epsilon(default-1e-6), **kwargs]",
        "newValue": "[self, lr(default-0.001), rho(default-0.9), epsilon(default-1e-8), **kwargs]"
      }
    },
    "5f7e78df65a865084a34fc54a6cb4f78c1592137": {
      "type": "Yparameterchange",
      "commitMessage": "Improve optimizer configuration",
      "commitDate": "2016/5/5 上午5:18",
      "commitName": "5f7e78df65a865084a34fc54a6cb4f78c1592137",
      "commitAuthor": "Francois Chollet",
      "commitDateOld": "2016/4/26 上午9:48",
      "commitNameOld": "de8d0defcde21ef35571d4641f22d6fd38bf7f0a",
      "commitAuthorOld": "Francois Chollet",
      "daysBetweenCommits": 8.81,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "actualSource": "    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-6, **kwargs):\n        super(RMSprop, self).__init__(**kwargs)\n        self.__dict__.update(locals())\n        self.lr \u003d K.variable(lr)\n        self.rho \u003d K.variable(rho)\n",
      "path": "keras/optimizers.py",
      "functionStartLine": 171,
      "functionName": "__init__",
      "functionAnnotation": "",
      "diff": "@@ -1,5 +1,5 @@\n-    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-6, *args, **kwargs):\n+    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-6, **kwargs):\n         super(RMSprop, self).__init__(**kwargs)\n         self.__dict__.update(locals())\n         self.lr \u003d K.variable(lr)\n         self.rho \u003d K.variable(rho)\n",
      "extendedDetails": {
        "oldValue": "[self, lr(default-0.001), rho(default-0.9), epsilon(default-1e-6), *args, **kwargs]",
        "newValue": "[self, lr(default-0.001), rho(default-0.9), epsilon(default-1e-6), **kwargs]"
      }
    },
    "33ed943ad59fc99f469c0d9d52bfd8462542bf74": {
      "type": "Ybodychange",
      "commitMessage": "Convert optimizers to Keras backend.",
      "commitDate": "2015/11/16 上午6:33",
      "commitName": "33ed943ad59fc99f469c0d9d52bfd8462542bf74",
      "commitAuthor": "Francois Chollet",
      "commitDateOld": "2015/10/21 下午9:30",
      "commitNameOld": "11e4c4b90f3ce07b10aa06a0f117e122b0c7b368",
      "commitAuthorOld": "Xsh Disney",
      "daysBetweenCommits": 25.38,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "actualSource": "    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-6, *args, **kwargs):\n        super(RMSprop, self).__init__(**kwargs)\n        self.__dict__.update(locals())\n        self.lr \u003d K.variable(lr)\n        self.rho \u003d K.variable(rho)\n",
      "path": "keras/optimizers.py",
      "functionStartLine": 85,
      "functionName": "__init__",
      "functionAnnotation": "",
      "diff": "@@ -1,5 +1,5 @@\n     def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-6, *args, **kwargs):\n         super(RMSprop, self).__init__(**kwargs)\n         self.__dict__.update(locals())\n-        self.lr \u003d shared_scalar(lr)\n-        self.rho \u003d shared_scalar(rho)\n+        self.lr \u003d K.variable(lr)\n+        self.rho \u003d K.variable(rho)\n",
      "extendedDetails": {}
    },
    "cdbbdce9341b34a1f9b3fbceaf9d76ac11a580f8": {
      "type": "Ybodychange",
      "commitMessage": "Make lr and momemtum shared_scalars\n\nWith lr and momentum being scalars we can change their values without\nneeding to recompile the model. This PR also includes a Callback called\nLrSetter that gets a dict with epoch x lr pairs and set the values of\nthe later at the begging of the associated epoch.\n",
      "commitDate": "2015/8/21 上午5:42",
      "commitName": "cdbbdce9341b34a1f9b3fbceaf9d76ac11a580f8",
      "commitAuthor": "EderSantana",
      "commitDateOld": "2015/7/29 下午8:57",
      "commitNameOld": "9c7c52d9080246b9b2c6de37497640187c450b23",
      "commitAuthorOld": "Kashif Rasul",
      "daysBetweenCommits": 22.36,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "actualSource": "    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-6, *args, **kwargs):\n        super(RMSprop, self).__init__(**kwargs)\n        self.__dict__.update(locals())\n        self.lr \u003d shared_scalar(lr)\n        self.rho \u003d shared_scalar(rho)\n",
      "path": "keras/optimizers.py",
      "functionStartLine": 86,
      "functionName": "__init__",
      "functionAnnotation": "",
      "diff": "@@ -1,3 +1,5 @@\n     def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-6, *args, **kwargs):\n         super(RMSprop, self).__init__(**kwargs)\n         self.__dict__.update(locals())\n+        self.lr \u003d shared_scalar(lr)\n+        self.rho \u003d shared_scalar(rho)\n",
      "extendedDetails": {}
    },
    "347e6d01ffa324b6a2c548c171eaae1569cbb6ea": {
      "type": "Ybodychange",
      "commitMessage": "Added get_state and set_state method to Optimizer base class.\n",
      "commitDate": "2015/7/24 上午8:10",
      "commitName": "347e6d01ffa324b6a2c548c171eaae1569cbb6ea",
      "commitAuthor": "Ken Terao",
      "commitDateOld": "2015/7/22 上午9:31",
      "commitNameOld": "ec8f7f00173599016e0fea01f081f465d91b1813",
      "commitAuthorOld": "fchollet",
      "daysBetweenCommits": 1.94,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "actualSource": "    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-6, *args, **kwargs):\n        super(RMSprop, self).__init__(**kwargs)\n        self.__dict__.update(locals())\n",
      "path": "keras/optimizers.py",
      "functionStartLine": 84,
      "functionName": "__init__",
      "functionAnnotation": "",
      "diff": "@@ -1,3 +1,3 @@\n     def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-6, *args, **kwargs):\n-        self.__dict__.update(kwargs)\n+        super(RMSprop, self).__init__(**kwargs)\n         self.__dict__.update(locals())\n",
      "extendedDetails": {}
    },
    "6fc8660a5148c1693e2c02874ffdb6a7d8f1a2c8": {
      "type": "Ybodychange",
      "commitMessage": "Finalize optimizer fixes",
      "commitDate": "2015/5/6 下午12:08",
      "commitName": "6fc8660a5148c1693e2c02874ffdb6a7d8f1a2c8",
      "commitAuthor": "fchollet",
      "commitDateOld": "2015/5/6 下午12:06",
      "commitNameOld": "33b7be70180b55cb47308dc735de6601ea52694e",
      "commitAuthorOld": "",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-6, *args, **kwargs):\n        self.__dict__.update(kwargs)\n        self.__dict__.update(locals())\n",
      "path": "keras/optimizers.py",
      "functionStartLine": 64,
      "functionName": "__init__",
      "functionAnnotation": "",
      "diff": "@@ -1,2 +1,3 @@\n     def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-6, *args, **kwargs):\n+        self.__dict__.update(kwargs)\n         self.__dict__.update(locals())\n",
      "extendedDetails": {}
    },
    "3653f906ebf7d249bb7e0a07f991f495f56f13b7": {
      "type": "Ybodychange",
      "commitMessage": "Revert constraints / regularizers",
      "commitDate": "2015/5/6 上午6:55",
      "commitName": "3653f906ebf7d249bb7e0a07f991f495f56f13b7",
      "commitAuthor": "fchollet",
      "commitDateOld": "2015/4/29 上午6:58",
      "commitNameOld": "865893bae2b63e643736ad41d4149082e161c273",
      "commitAuthorOld": "Michael Oliver",
      "daysBetweenCommits": 7.0,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "actualSource": "    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-6, *args, **kwargs):\n        self.__dict__.update(locals())\n",
      "path": "keras/optimizers.py",
      "functionStartLine": 68,
      "functionName": "__init__",
      "functionAnnotation": "",
      "diff": "@@ -1,3 +1,2 @@\n     def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-6, *args, **kwargs):\n-        self.__dict__.update(kwargs)\n         self.__dict__.update(locals())\n",
      "extendedDetails": {}
    },
    "af46ab0d4dc981b899fe6c82c1712e95f251a118": {
      "type": "Ybodychange",
      "commitMessage": "make constraints and regularization more abstracted\n",
      "commitDate": "2015/4/28 上午10:37",
      "commitName": "af46ab0d4dc981b899fe6c82c1712e95f251a118",
      "commitAuthor": "Michael Oliver",
      "commitDateOld": "2015/4/28 上午7:43",
      "commitNameOld": "e7da65f1d65fe363c945792d5ba978d5cc6c6a86",
      "commitAuthorOld": "Michael Oliver",
      "daysBetweenCommits": 0.12,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-6, *args, **kwargs):\n        self.__dict__.update(kwargs)\n        self.__dict__.update(locals())\n",
      "path": "keras/optimizers.py",
      "functionStartLine": 66,
      "functionName": "__init__",
      "functionAnnotation": "",
      "diff": "@@ -1,2 +1,3 @@\n     def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-6, *args, **kwargs):\n+        self.__dict__.update(kwargs)\n         self.__dict__.update(locals())\n",
      "extendedDetails": {}
    },
    "e5844deadccf77aef650b6af263453a2e2d83e09": {
      "type": "Yfilerename",
      "commitMessage": "Package code \u0026 add setup.py",
      "commitDate": "2015/3/30 上午7:06",
      "commitName": "e5844deadccf77aef650b6af263453a2e2d83e09",
      "commitAuthor": "fchollet",
      "commitDateOld": "2015/3/29 上午10:25",
      "commitNameOld": "2379f276817019564a48bf4a1b13dab304209e50",
      "commitAuthorOld": "fchollet",
      "daysBetweenCommits": 0.86,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-6, *args, **kwargs):\n        self.__dict__.update(locals())\n",
      "path": "keras/optimizers.py",
      "functionStartLine": 66,
      "functionName": "__init__",
      "functionAnnotation": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "optimizers.py",
        "newPath": "keras/optimizers.py"
      }
    },
    "37a1db225420851cc668600c49697d9a2057f098": {
      "type": "Yintroduced",
      "commitMessage": "Add initial public version of Keras",
      "commitDate": "2015/3/28 上午8:59",
      "commitName": "37a1db225420851cc668600c49697d9a2057f098",
      "commitAuthor": "Francois",
      "diff": "@@ -0,0 +1,2 @@\n+    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-6, *args, **kwargs):\n+        self.__dict__.update(locals())\n",
      "actualSource": "    def __init__(self, lr\u003d0.001, rho\u003d0.9, epsilon\u003d1e-6, *args, **kwargs):\n        self.__dict__.update(locals())\n",
      "path": "optimizers.py",
      "functionStartLine": 66,
      "functionName": "__init__",
      "functionAnnotation": ""
    }
  }
}