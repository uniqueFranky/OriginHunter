{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/Users/franky/Documents/Homework/毕业设计/testcase/checkstyle/.git",
  "startCommitName": "119fd4fb33bef9f5c66fc950396669af842c21a3",
  "sourceFileName": "Checker.java",
  "functionName": "fireErrors",
  "functionId": "fireErrors___fileName-String__errors-SortedSet__LocalizedMessage__",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
  "functionAnnotation": "@Override",
  "functionDoc": "Notify all listeners about the errors in a file.\n\n@param fileName the audited file\n@param errors the audit errors from the file\n",
  "functionStartLine": 384,
  "functionEndLine": 399,
  "numCommitsSeen": 549,
  "timeTaken": 3424,
  "changeHistory": [
    "327c0bc843612486ab4ded32a2f01038e1271fd0",
    "56cc11416ebdf52dd299d11424fb04fda42fa63f",
    "ce196814d857a4244a80c51d5151cc35e90b6749",
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "efa16e17bf710b7b24af828296c2337612912ba9",
    "3a20dbe8edafe0cca300b7b9dfa48effa9a36a06",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
    "7aa061665c2b005f97b0c05bf03604636175dc9a",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "1d614c3a7ecf8a3ede4df8a50da46e71792d0025",
    "e00c478dd61d9d883e41b500b780ab217582c2e7",
    "13b7c634337e38d20daa92ca9d5e069a2e72ec55",
    "e50e1fcd1c17ba1f73d11df38382907cc163a1d1",
    "f1afaf83f39b83cc3bd07a2388448b262652a76b",
    "1846dacad6c2a3a04b3350b45bb8b05835192296",
    "1e7d8eef0641edcf97316618c8fab40bd248133d",
    "21f0b07bd031f022d14106150af66ceddb4c06b8",
    "c3baa3fa77f4ed8e475ab52db6d0f2f860d93ef0",
    "54a09706ec1db32435b09e6b6910813325558f8d",
    "82b2ba526976588d550cac698e512f8de6c1ffc6",
    "20483ae032296610315fafb9a8774cfdd0e13857",
    "c682b5725d22afc38bf19d9667b23a7deab6d8c3",
    "6970485b88600343de72af03a6bf87cf78e6cf55",
    "0e3fe5643667a53079dbd114e5b1e9aa91fde083"
  ],
  "changeHistoryShort": {
    "327c0bc843612486ab4ded32a2f01038e1271fd0": "Ybodychange",
    "56cc11416ebdf52dd299d11424fb04fda42fa63f": "Ybodychange",
    "ce196814d857a4244a80c51d5151cc35e90b6749": "Ybodychange",
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970": "Ybodychange",
    "efa16e17bf710b7b24af828296c2337612912ba9": "Ydocchange",
    "3a20dbe8edafe0cca300b7b9dfa48effa9a36a06": "Ybodychange",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": "Ymultichange(Yparameterchange,Ybodychange,Ydocchange)",
    "7aa061665c2b005f97b0c05bf03604636175dc9a": "Yannotationchange",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "1d614c3a7ecf8a3ede4df8a50da46e71792d0025": "Yparameterchange",
    "e00c478dd61d9d883e41b500b780ab217582c2e7": "Ybodychange",
    "13b7c634337e38d20daa92ca9d5e069a2e72ec55": "Yparameterchange",
    "e50e1fcd1c17ba1f73d11df38382907cc163a1d1": "Ybodychange",
    "f1afaf83f39b83cc3bd07a2388448b262652a76b": "Ybodychange",
    "1846dacad6c2a3a04b3350b45bb8b05835192296": "Ybodychange",
    "1e7d8eef0641edcf97316618c8fab40bd248133d": "Ybodychange",
    "21f0b07bd031f022d14106150af66ceddb4c06b8": "Ybodychange",
    "c3baa3fa77f4ed8e475ab52db6d0f2f860d93ef0": "Ybodychange",
    "54a09706ec1db32435b09e6b6910813325558f8d": "Ymodifierchange",
    "82b2ba526976588d550cac698e512f8de6c1ffc6": "Ybodychange",
    "20483ae032296610315fafb9a8774cfdd0e13857": "Ybodychange",
    "c682b5725d22afc38bf19d9667b23a7deab6d8c3": "Ymultichange(Yparameterchange,Ybodychange)",
    "6970485b88600343de72af03a6bf87cf78e6cf55": "Ybodychange",
    "0e3fe5643667a53079dbd114e5b1e9aa91fde083": "Yintroduced"
  },
  "changeHistoryDetails": {
    "327c0bc843612486ab4ded32a2f01038e1271fd0": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3254: UT to verify all property types and values in XDocs",
      "commitDate": "2018/1/4 上午9:30",
      "commitName": "327c0bc843612486ab4ded32a2f01038e1271fd0",
      "commitAuthor": "rnveach",
      "commitDateOld": "2018/1/3 上午5:24",
      "commitNameOld": "dabb75d43c7e02317565dde4c5e60f380d3b16b8",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.17,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void fireErrors(String fileName, SortedSet\u003cLocalizedMessage\u003e errors) {\n    final String stripped \u003d CommonUtils.relativizeAndNormalizePath(basedir, fileName);\n    boolean hasNonFilteredViolations \u003d false;\n    for (final LocalizedMessage element : errors) {\n        final AuditEvent event \u003d new AuditEvent(this, stripped, element);\n        if (filters.accept(event)) {\n            hasNonFilteredViolations \u003d true;\n            for (final AuditListener listener : listeners) {\n                listener.addError(event);\n            }\n        }\n    }\n    if (hasNonFilteredViolations \u0026\u0026 cacheFile !\u003d null) {\n        cacheFile.remove(fileName);\n    }\n}",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
      "functionStartLine": 383,
      "functionName": "fireErrors",
      "functionAnnotation": "@Override",
      "functionDoc": "Notify all listeners about the errors in a file.\n\n@param fileName the audited file\n@param errors the audit errors from the file\n",
      "diff": "@@ -1,17 +1,17 @@\n @Override\n public void fireErrors(String fileName, SortedSet\u003cLocalizedMessage\u003e errors) {\n     final String stripped \u003d CommonUtils.relativizeAndNormalizePath(basedir, fileName);\n     boolean hasNonFilteredViolations \u003d false;\n     for (final LocalizedMessage element : errors) {\n         final AuditEvent event \u003d new AuditEvent(this, stripped, element);\n         if (filters.accept(event)) {\n             hasNonFilteredViolations \u003d true;\n             for (final AuditListener listener : listeners) {\n                 listener.addError(event);\n             }\n         }\n     }\n-    if (hasNonFilteredViolations \u0026\u0026 cache !\u003d null) {\n-        cache.remove(fileName);\n+    if (hasNonFilteredViolations \u0026\u0026 cacheFile !\u003d null) {\n+        cacheFile.remove(fileName);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "56cc11416ebdf52dd299d11424fb04fda42fa63f": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3488: save files into cache with no un-suppressed violations",
      "commitDate": "2016/11/11 上午3:59",
      "commitName": "56cc11416ebdf52dd299d11424fb04fda42fa63f",
      "commitAuthor": "rnveach",
      "commitDateOld": "2016/11/9 下午1:30",
      "commitNameOld": "8c8fee7432c89b47936c27bcc2c7f60f5cc79923",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 1.6,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void fireErrors(String fileName, SortedSet\u003cLocalizedMessage\u003e errors) {\n    final String stripped \u003d CommonUtils.relativizeAndNormalizePath(basedir, fileName);\n    boolean hasNonFilteredViolations \u003d false;\n    for (final LocalizedMessage element : errors) {\n        final AuditEvent event \u003d new AuditEvent(this, stripped, element);\n        if (filters.accept(event)) {\n            hasNonFilteredViolations \u003d true;\n            for (final AuditListener listener : listeners) {\n                listener.addError(event);\n            }\n        }\n    }\n    if (hasNonFilteredViolations \u0026\u0026 cache !\u003d null) {\n        cache.remove(fileName);\n    }\n}",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
      "functionStartLine": 353,
      "functionName": "fireErrors",
      "functionAnnotation": "@Override",
      "functionDoc": "Notify all listeners about the errors in a file.\n\n@param fileName the audited file\n@param errors the audit errors from the file\n",
      "diff": "@@ -1,12 +1,17 @@\n @Override\n public void fireErrors(String fileName, SortedSet\u003cLocalizedMessage\u003e errors) {\n     final String stripped \u003d CommonUtils.relativizeAndNormalizePath(basedir, fileName);\n+    boolean hasNonFilteredViolations \u003d false;\n     for (final LocalizedMessage element : errors) {\n         final AuditEvent event \u003d new AuditEvent(this, stripped, element);\n         if (filters.accept(event)) {\n+            hasNonFilteredViolations \u003d true;\n             for (final AuditListener listener : listeners) {\n                 listener.addError(event);\n             }\n         }\n     }\n+    if (hasNonFilteredViolations \u0026\u0026 cache !\u003d null) {\n+        cache.remove(fileName);\n+    }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ce196814d857a4244a80c51d5151cc35e90b6749": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2080: Fix typos in code\n",
      "commitDate": "2015/10/17 上午7:35",
      "commitName": "ce196814d857a4244a80c51d5151cc35e90b6749",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "2015/9/4 上午9:06",
      "commitNameOld": "2b4a02d2c8a498a8a1ee38e9396426209fa65fad",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 42.94,
      "commitsBetweenForRepo": 264,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void fireErrors(String fileName, SortedSet\u003cLocalizedMessage\u003e errors) {\n    final String stripped \u003d CommonUtils.relativizeAndNormalizePath(basedir, fileName);\n    for (final LocalizedMessage element : errors) {\n        final AuditEvent event \u003d new AuditEvent(this, stripped, element);\n        if (filters.accept(event)) {\n            for (final AuditListener listener : listeners) {\n                listener.addError(event);\n            }\n        }\n    }\n}",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
      "functionStartLine": 356,
      "functionName": "fireErrors",
      "functionAnnotation": "@Override",
      "functionDoc": "Notify all listeners about the errors in a file.\n\n@param fileName the audited file\n@param errors the audit errors from the file\n",
      "diff": "@@ -1,12 +1,12 @@\n @Override\n public void fireErrors(String fileName, SortedSet\u003cLocalizedMessage\u003e errors) {\n     final String stripped \u003d CommonUtils.relativizeAndNormalizePath(basedir, fileName);\n     for (final LocalizedMessage element : errors) {\n-        final AuditEvent evt \u003d new AuditEvent(this, stripped, element);\n-        if (filters.accept(evt)) {\n+        final AuditEvent event \u003d new AuditEvent(this, stripped, element);\n+        if (filters.accept(event)) {\n             for (final AuditListener listener : listeners) {\n-                listener.addError(evt);\n+                listener.addError(event);\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970": {
      "type": "Ybodychange",
      "commitMessage": "Utils class has been splitted to CommonUtils and TokenUtils. Issue #1898\n",
      "commitDate": "2015/8/27 下午8:17",
      "commitName": "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": "2015/8/27 下午8:17",
      "commitNameOld": "ed595de84fba2db507adaf01d04cb089a5e0bac5",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void fireErrors(String fileName, SortedSet\u003cLocalizedMessage\u003e errors) {\n    final String stripped \u003d CommonUtils.relativizeAndNormalizePath(basedir, fileName);\n    for (final LocalizedMessage element : errors) {\n        final AuditEvent evt \u003d new AuditEvent(this, stripped, element);\n        if (filters.accept(evt)) {\n            for (final AuditListener listener : listeners) {\n                listener.addError(evt);\n            }\n        }\n    }\n}",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
      "functionStartLine": 349,
      "functionName": "fireErrors",
      "functionAnnotation": "@Override",
      "functionDoc": "Notify all listeners about the errors in a file.\n\n@param fileName the audited file\n@param errors the audit errors from the file\n",
      "diff": "@@ -1,12 +1,12 @@\n @Override\n public void fireErrors(String fileName, SortedSet\u003cLocalizedMessage\u003e errors) {\n-    final String stripped \u003d Utils.relativizeAndNormalizePath(basedir, fileName);\n+    final String stripped \u003d CommonUtils.relativizeAndNormalizePath(basedir, fileName);\n     for (final LocalizedMessage element : errors) {\n         final AuditEvent evt \u003d new AuditEvent(this, stripped, element);\n         if (filters.accept(evt)) {\n             for (final AuditListener listener : listeners) {\n                 listener.addError(evt);\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "efa16e17bf710b7b24af828296c2337612912ba9": {
      "type": "Ydocchange",
      "commitMessage": "Issue #1566: First sentence in a comment should start with a capital letter (Multiline comments)\n",
      "commitDate": "2015/8/20 上午11:21",
      "commitName": "efa16e17bf710b7b24af828296c2337612912ba9",
      "commitAuthor": "Baratali Izmailov",
      "commitDateOld": "2015/8/18 下午4:25",
      "commitNameOld": "54ccca18635a4aeea90da86d30590df498f76b08",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 1.79,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void fireErrors(String fileName, SortedSet\u003cLocalizedMessage\u003e errors) {\n    final String stripped \u003d Utils.relativizeAndNormalizePath(basedir, fileName);\n    for (final LocalizedMessage element : errors) {\n        final AuditEvent evt \u003d new AuditEvent(this, stripped, element);\n        if (filters.accept(evt)) {\n            for (final AuditListener listener : listeners) {\n                listener.addError(evt);\n            }\n        }\n    }\n}",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
      "functionStartLine": 348,
      "functionName": "fireErrors",
      "functionAnnotation": "@Override",
      "functionDoc": "Notify all listeners about the errors in a file.\n\n@param fileName the audited file\n@param errors the audit errors from the file\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "notify all listeners about the errors in a file.\n\n@param fileName the audited file\n@param errors the audit errors from the file\n",
        "newValue": "Notify all listeners about the errors in a file.\n\n@param fileName the audited file\n@param errors the audit errors from the file\n"
      }
    },
    "3a20dbe8edafe0cca300b7b9dfa48effa9a36a06": {
      "type": "Ybodychange",
      "commitMessage": "Use use Java 7 instead of custom logic for relative paths, issue #857\n",
      "commitDate": "2015/4/1 上午2:25",
      "commitName": "3a20dbe8edafe0cca300b7b9dfa48effa9a36a06",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "2015/3/19 下午1:30",
      "commitNameOld": "d347f55756052db6b23ae41168c44e324807c621",
      "commitAuthorOld": "ychulovskyy",
      "daysBetweenCommits": 12.54,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void fireErrors(String fileName, SortedSet\u003cLocalizedMessage\u003e errors) {\n    final String stripped \u003d Utils.relativizeAndNormalizePath(basedir, fileName);\n    for (final LocalizedMessage element : errors) {\n        final AuditEvent evt \u003d new AuditEvent(this, stripped, element);\n        if (filters.accept(evt)) {\n            for (final AuditListener listener : listeners) {\n                listener.addError(evt);\n            }\n        }\n    }\n}",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
      "functionStartLine": 368,
      "functionName": "fireErrors",
      "functionAnnotation": "@Override",
      "functionDoc": "notify all listeners about the errors in a file.\n\n@param fileName the audited file\n@param errors the audit errors from the file\n",
      "diff": "@@ -1,12 +1,12 @@\n @Override\n public void fireErrors(String fileName, SortedSet\u003cLocalizedMessage\u003e errors) {\n-    final String stripped \u003d getStrippedFileName(fileName);\n+    final String stripped \u003d Utils.relativizeAndNormalizePath(basedir, fileName);\n     for (final LocalizedMessage element : errors) {\n         final AuditEvent evt \u003d new AuditEvent(this, stripped, element);\n         if (filters.accept(evt)) {\n             for (final AuditListener listener : listeners) {\n                 listener.addError(evt);\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange,Ydocchange)",
      "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
      "commitDate": "2015/1/19 下午10:38",
      "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
          "commitDate": "2015/1/19 下午10:38",
          "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
          "commitAuthor": "alexkravin",
          "commitDateOld": "2015/1/12 上午2:10",
          "commitNameOld": "8ec1a1a97188c112f4af5cc00caffae2ac0cc530",
          "commitAuthorOld": "Lars Ködderitzsch",
          "daysBetweenCommits": 7.85,
          "commitsBetweenForRepo": 28,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic void fireErrors(String fileName, SortedSet\u003cLocalizedMessage\u003e errors) {\n    final String stripped \u003d getStrippedFileName(fileName);\n    for (final LocalizedMessage element : errors) {\n        final AuditEvent evt \u003d new AuditEvent(this, stripped, element);\n        if (filters.accept(evt)) {\n            for (final AuditListener listener : listeners) {\n                listener.addError(evt);\n            }\n        }\n    }\n}",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
          "functionStartLine": 514,
          "functionName": "fireErrors",
          "functionAnnotation": "@Override",
          "functionDoc": "notify all listeners about the errors in a file.\n\n@param fileName the audited file\n@param errors the audit errors from the file\n",
          "diff": "@@ -1,12 +1,12 @@\n @Override\n-public void fireErrors(String aFileName, SortedSet\u003cLocalizedMessage\u003e aErrors) {\n-    final String stripped \u003d getStrippedFileName(aFileName);\n-    for (final LocalizedMessage element : aErrors) {\n+public void fireErrors(String fileName, SortedSet\u003cLocalizedMessage\u003e errors) {\n+    final String stripped \u003d getStrippedFileName(fileName);\n+    for (final LocalizedMessage element : errors) {\n         final AuditEvent evt \u003d new AuditEvent(this, stripped, element);\n-        if (mFilters.accept(evt)) {\n-            for (final AuditListener listener : mListeners) {\n+        if (filters.accept(evt)) {\n+            for (final AuditListener listener : listeners) {\n                 listener.addError(evt);\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[aFileName-String, aErrors-SortedSet\u003cLocalizedMessage\u003e]",
            "newValue": "[fileName-String, errors-SortedSet\u003cLocalizedMessage\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
          "commitDate": "2015/1/19 下午10:38",
          "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
          "commitAuthor": "alexkravin",
          "commitDateOld": "2015/1/12 上午2:10",
          "commitNameOld": "8ec1a1a97188c112f4af5cc00caffae2ac0cc530",
          "commitAuthorOld": "Lars Ködderitzsch",
          "daysBetweenCommits": 7.85,
          "commitsBetweenForRepo": 28,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic void fireErrors(String fileName, SortedSet\u003cLocalizedMessage\u003e errors) {\n    final String stripped \u003d getStrippedFileName(fileName);\n    for (final LocalizedMessage element : errors) {\n        final AuditEvent evt \u003d new AuditEvent(this, stripped, element);\n        if (filters.accept(evt)) {\n            for (final AuditListener listener : listeners) {\n                listener.addError(evt);\n            }\n        }\n    }\n}",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
          "functionStartLine": 514,
          "functionName": "fireErrors",
          "functionAnnotation": "@Override",
          "functionDoc": "notify all listeners about the errors in a file.\n\n@param fileName the audited file\n@param errors the audit errors from the file\n",
          "diff": "@@ -1,12 +1,12 @@\n @Override\n-public void fireErrors(String aFileName, SortedSet\u003cLocalizedMessage\u003e aErrors) {\n-    final String stripped \u003d getStrippedFileName(aFileName);\n-    for (final LocalizedMessage element : aErrors) {\n+public void fireErrors(String fileName, SortedSet\u003cLocalizedMessage\u003e errors) {\n+    final String stripped \u003d getStrippedFileName(fileName);\n+    for (final LocalizedMessage element : errors) {\n         final AuditEvent evt \u003d new AuditEvent(this, stripped, element);\n-        if (mFilters.accept(evt)) {\n-            for (final AuditListener listener : mListeners) {\n+        if (filters.accept(evt)) {\n+            for (final AuditListener listener : listeners) {\n                 listener.addError(evt);\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
          "commitDate": "2015/1/19 下午10:38",
          "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
          "commitAuthor": "alexkravin",
          "commitDateOld": "2015/1/12 上午2:10",
          "commitNameOld": "8ec1a1a97188c112f4af5cc00caffae2ac0cc530",
          "commitAuthorOld": "Lars Ködderitzsch",
          "daysBetweenCommits": 7.85,
          "commitsBetweenForRepo": 28,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic void fireErrors(String fileName, SortedSet\u003cLocalizedMessage\u003e errors) {\n    final String stripped \u003d getStrippedFileName(fileName);\n    for (final LocalizedMessage element : errors) {\n        final AuditEvent evt \u003d new AuditEvent(this, stripped, element);\n        if (filters.accept(evt)) {\n            for (final AuditListener listener : listeners) {\n                listener.addError(evt);\n            }\n        }\n    }\n}",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
          "functionStartLine": 514,
          "functionName": "fireErrors",
          "functionAnnotation": "@Override",
          "functionDoc": "notify all listeners about the errors in a file.\n\n@param fileName the audited file\n@param errors the audit errors from the file\n",
          "diff": "@@ -1,12 +1,12 @@\n @Override\n-public void fireErrors(String aFileName, SortedSet\u003cLocalizedMessage\u003e aErrors) {\n-    final String stripped \u003d getStrippedFileName(aFileName);\n-    for (final LocalizedMessage element : aErrors) {\n+public void fireErrors(String fileName, SortedSet\u003cLocalizedMessage\u003e errors) {\n+    final String stripped \u003d getStrippedFileName(fileName);\n+    for (final LocalizedMessage element : errors) {\n         final AuditEvent evt \u003d new AuditEvent(this, stripped, element);\n-        if (mFilters.accept(evt)) {\n-            for (final AuditListener listener : mListeners) {\n+        if (filters.accept(evt)) {\n+            for (final AuditListener listener : listeners) {\n                 listener.addError(evt);\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "notify all listeners about the errors in a file.\n\n@param aFileName the audited file\n@param aErrors the audit errors from the file\n",
            "newValue": "notify all listeners about the errors in a file.\n\n@param fileName the audited file\n@param errors the audit errors from the file\n"
          }
        }
      ]
    },
    "7aa061665c2b005f97b0c05bf03604636175dc9a": {
      "type": "Yannotationchange",
      "commitMessage": "Partial fix for #47 - Add missing @Override annotations\n",
      "commitDate": "2014/12/15 下午2:33",
      "commitName": "7aa061665c2b005f97b0c05bf03604636175dc9a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "2014/9/8 上午9:39",
      "commitNameOld": "465efcd6e07314f81381551c338a50aede5d6626",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 98.2,
      "commitsBetweenForRepo": 268,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void fireErrors(String aFileName, SortedSet\u003cLocalizedMessage\u003e aErrors) {\n    final String stripped \u003d getStrippedFileName(aFileName);\n    for (final LocalizedMessage element : aErrors) {\n        final AuditEvent evt \u003d new AuditEvent(this, stripped, element);\n        if (mFilters.accept(evt)) {\n            for (final AuditListener listener : mListeners) {\n                listener.addError(evt);\n            }\n        }\n    }\n}",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
      "functionStartLine": 509,
      "functionName": "fireErrors",
      "functionAnnotation": "@Override",
      "functionDoc": "notify all listeners about the errors in a file.\n\n@param aFileName the audited file\n@param aErrors the audit errors from the file\n",
      "diff": "@@ -1,11 +1,12 @@\n+@Override\n public void fireErrors(String aFileName, SortedSet\u003cLocalizedMessage\u003e aErrors) {\n     final String stripped \u003d getStrippedFileName(aFileName);\n     for (final LocalizedMessage element : aErrors) {\n         final AuditEvent evt \u003d new AuditEvent(this, stripped, element);\n         if (mFilters.accept(evt)) {\n             for (final AuditListener listener : mListeners) {\n                 listener.addError(evt);\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "@Override"
      }
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "2014/3/5 上午1:18",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "2014/2/27 下午2:35",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void fireErrors(String aFileName, SortedSet\u003cLocalizedMessage\u003e aErrors) {\n    final String stripped \u003d getStrippedFileName(aFileName);\n    for (final LocalizedMessage element : aErrors) {\n        final AuditEvent evt \u003d new AuditEvent(this, stripped, element);\n        if (mFilters.accept(evt)) {\n            for (final AuditListener listener : mListeners) {\n                listener.addError(evt);\n            }\n        }\n    }\n}",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
      "functionStartLine": 505,
      "functionName": "fireErrors",
      "functionAnnotation": "",
      "functionDoc": "notify all listeners about the errors in a file.\n\n@param aFileName the audited file\n@param aErrors the audit errors from the file\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java"
      }
    },
    "1d614c3a7ecf8a3ede4df8a50da46e71792d0025": {
      "type": "Yparameterchange",
      "commitMessage": "poartial fix for #46 - Sonarqube found problems in Checkstyle\n",
      "commitDate": "2013/12/6 上午1:12",
      "commitName": "1d614c3a7ecf8a3ede4df8a50da46e71792d0025",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "2013/10/5 下午12:22",
      "commitNameOld": "788f87df4db1368ee0563e1ba1199177618cc01f",
      "commitAuthorOld": "picomancer",
      "daysBetweenCommits": 61.54,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "actualSource": "public void fireErrors(String aFileName, SortedSet\u003cLocalizedMessage\u003e aErrors) {\n    final String stripped \u003d getStrippedFileName(aFileName);\n    for (final LocalizedMessage element : aErrors) {\n        final AuditEvent evt \u003d new AuditEvent(this, stripped, element);\n        if (mFilters.accept(evt)) {\n            for (final AuditListener listener : mListeners) {\n                listener.addError(evt);\n            }\n        }\n    }\n}",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java",
      "functionStartLine": 505,
      "functionName": "fireErrors",
      "functionAnnotation": "",
      "functionDoc": "notify all listeners about the errors in a file.\n\n@param aFileName the audited file\n@param aErrors the audit errors from the file\n",
      "diff": "@@ -1,11 +1,11 @@\n-public void fireErrors(String aFileName, TreeSet\u003cLocalizedMessage\u003e aErrors) {\n+public void fireErrors(String aFileName, SortedSet\u003cLocalizedMessage\u003e aErrors) {\n     final String stripped \u003d getStrippedFileName(aFileName);\n     for (final LocalizedMessage element : aErrors) {\n         final AuditEvent evt \u003d new AuditEvent(this, stripped, element);\n         if (mFilters.accept(evt)) {\n             for (final AuditListener listener : mListeners) {\n                 listener.addError(evt);\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[aFileName-String, aErrors-TreeSet\u003cLocalizedMessage\u003e]",
        "newValue": "[aFileName-String, aErrors-SortedSet\u003cLocalizedMessage\u003e]"
      }
    },
    "e00c478dd61d9d883e41b500b780ab217582c2e7": {
      "type": "Ybodychange",
      "commitMessage": "clean up the code that was assigning to a parameter.\n",
      "commitDate": "2010/10/21 下午4:42",
      "commitName": "e00c478dd61d9d883e41b500b780ab217582c2e7",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "2010/9/30 上午11:36",
      "commitNameOld": "6f46bd4e83204417edf9605f97098bb9d34da728",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 21.21,
      "commitsBetweenForRepo": 50,
      "commitsBetweenForFile": 1,
      "actualSource": "public void fireErrors(String aFileName, TreeSet\u003cLocalizedMessage\u003e aErrors) {\n    final String stripped \u003d getStrippedFileName(aFileName);\n    for (final LocalizedMessage element : aErrors) {\n        final AuditEvent evt \u003d new AuditEvent(this, stripped, element);\n        if (mFilters.accept(evt)) {\n            for (final AuditListener listener : mListeners) {\n                listener.addError(evt);\n            }\n        }\n    }\n}",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java",
      "functionStartLine": 504,
      "functionName": "fireErrors",
      "functionAnnotation": "",
      "functionDoc": "notify all listeners about the errors in a file.\n\n@param aFileName the audited file\n@param aErrors the audit errors from the file\n",
      "diff": "@@ -1,11 +1,11 @@\n public void fireErrors(String aFileName, TreeSet\u003cLocalizedMessage\u003e aErrors) {\n     final String stripped \u003d getStrippedFileName(aFileName);\n-    for (LocalizedMessage element : aErrors) {\n+    for (final LocalizedMessage element : aErrors) {\n         final AuditEvent evt \u003d new AuditEvent(this, stripped, element);\n         if (mFilters.accept(evt)) {\n-            for (AuditListener listener : mListeners) {\n+            for (final AuditListener listener : mListeners) {\n                 listener.addError(evt);\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "13b7c634337e38d20daa92ca9d5e069a2e72ec55": {
      "type": "Yparameterchange",
      "commitMessage": "A large refactoring to move the functionality of open/reporting on files into Checker and out of FileSetCheck. The advantages are:\n\n- reduces the logic required in each implementation of FileSetCheck.\n\n- reduces, but not eliminates, the number of times a file is reported as being audited.\n\n- reduces the amount of times a file needs to be read in from the file system.\n\nThe motivation is the desire to move more checks to be purely FileSetCheck based, like the TabCharacter check.\n\nI still need to do some tidying up of the documentation, and make Checker support \"charset\".\n",
      "commitDate": "2008/11/9 下午5:37",
      "commitName": "13b7c634337e38d20daa92ca9d5e069a2e72ec55",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "2008/4/24 下午10:42",
      "commitNameOld": "b3f724f871dd57c4db958556df1a73f71c8bd6e5",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 198.79,
      "commitsBetweenForRepo": 49,
      "commitsBetweenForFile": 1,
      "actualSource": "public void fireErrors(String aFileName, TreeSet\u003cLocalizedMessage\u003e aErrors) {\n    final String stripped \u003d getStrippedFileName(aFileName);\n    for (LocalizedMessage element : aErrors) {\n        final AuditEvent evt \u003d new AuditEvent(this, stripped, element);\n        if (mFilters.accept(evt)) {\n            for (AuditListener listener : mListeners) {\n                listener.addError(evt);\n            }\n        }\n    }\n}",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java",
      "functionStartLine": 500,
      "functionName": "fireErrors",
      "functionAnnotation": "",
      "functionDoc": "notify all listeners about the errors in a file.\n\n@param aFileName the audited file\n@param aErrors the audit errors from the file\n",
      "diff": "@@ -1,11 +1,11 @@\n-public void fireErrors(String aFileName, LocalizedMessage[] aErrors) {\n+public void fireErrors(String aFileName, TreeSet\u003cLocalizedMessage\u003e aErrors) {\n     final String stripped \u003d getStrippedFileName(aFileName);\n     for (LocalizedMessage element : aErrors) {\n         final AuditEvent evt \u003d new AuditEvent(this, stripped, element);\n         if (mFilters.accept(evt)) {\n             for (AuditListener listener : mListeners) {\n                 listener.addError(evt);\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[aFileName-String, aErrors-LocalizedMessage[]]",
        "newValue": "[aFileName-String, aErrors-TreeSet\u003cLocalizedMessage\u003e]"
      }
    },
    "e50e1fcd1c17ba1f73d11df38382907cc163a1d1": {
      "type": "Ybodychange",
      "commitMessage": "Use the new syntactic sugar \"for loop\".\n\nEnd of the cosmetic changes.\n",
      "commitDate": "2007/12/15 下午6:28",
      "commitName": "e50e1fcd1c17ba1f73d11df38382907cc163a1d1",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "2007/12/15 下午4:14",
      "commitNameOld": "f1afaf83f39b83cc3bd07a2388448b262652a76b",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.09,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void fireErrors(String aFileName, LocalizedMessage[] aErrors) {\n    final String stripped \u003d getStrippedFileName(aFileName);\n    for (LocalizedMessage element : aErrors) {\n        final AuditEvent evt \u003d new AuditEvent(this, stripped, element);\n        if (mFilters.accept(evt)) {\n            for (AuditListener listener : mListeners) {\n                listener.addError(evt);\n            }\n        }\n    }\n}",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java",
      "functionStartLine": 468,
      "functionName": "fireErrors",
      "functionAnnotation": "",
      "functionDoc": "notify all listeners about the errors in a file.\n\n@param aFileName the audited file\n@param aErrors the audit errors from the file\n",
      "diff": "@@ -1,11 +1,11 @@\n public void fireErrors(String aFileName, LocalizedMessage[] aErrors) {\n     final String stripped \u003d getStrippedFileName(aFileName);\n-    for (int i \u003d 0; i \u003c aErrors.length; i++) {\n-        final AuditEvent evt \u003d new AuditEvent(this, stripped, aErrors[i]);\n+    for (LocalizedMessage element : aErrors) {\n+        final AuditEvent evt \u003d new AuditEvent(this, stripped, element);\n         if (mFilters.accept(evt)) {\n             for (AuditListener listener : mListeners) {\n                 listener.addError(evt);\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f1afaf83f39b83cc3bd07a2388448b262652a76b": {
      "type": "Ybodychange",
      "commitMessage": "Finish of adding generics.\n",
      "commitDate": "2007/12/15 下午4:14",
      "commitName": "f1afaf83f39b83cc3bd07a2388448b262652a76b",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "2007/1/27 下午10:51",
      "commitNameOld": "1efc394250b8f1c79bd7f8344b738a7d13396ed3",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 321.72,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "actualSource": "public void fireErrors(String aFileName, LocalizedMessage[] aErrors) {\n    final String stripped \u003d getStrippedFileName(aFileName);\n    for (int i \u003d 0; i \u003c aErrors.length; i++) {\n        final AuditEvent evt \u003d new AuditEvent(this, stripped, aErrors[i]);\n        if (mFilters.accept(evt)) {\n            for (AuditListener listener : mListeners) {\n                listener.addError(evt);\n            }\n        }\n    }\n}",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java",
      "functionStartLine": 468,
      "functionName": "fireErrors",
      "functionAnnotation": "",
      "functionDoc": "notify all listeners about the errors in a file.\n\n@param aFileName the audited file\n@param aErrors the audit errors from the file\n",
      "diff": "@@ -1,13 +1,11 @@\n public void fireErrors(String aFileName, LocalizedMessage[] aErrors) {\n     final String stripped \u003d getStrippedFileName(aFileName);\n     for (int i \u003d 0; i \u003c aErrors.length; i++) {\n         final AuditEvent evt \u003d new AuditEvent(this, stripped, aErrors[i]);\n         if (mFilters.accept(evt)) {\n-            final Iterator it \u003d mListeners.iterator();\n-            while (it.hasNext()) {\n-                final AuditListener listener \u003d (AuditListener) it.next();\n+            for (AuditListener listener : mListeners) {\n                 listener.addError(evt);\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1846dacad6c2a3a04b3350b45bb8b05835192296": {
      "type": "Ybodychange",
      "commitMessage": "field name change\n",
      "commitDate": "2003/7/18 下午5:57",
      "commitName": "1846dacad6c2a3a04b3350b45bb8b05835192296",
      "commitAuthor": "Rick Giles",
      "commitDateOld": "2003/7/16 上午4:18",
      "commitNameOld": "1e7d8eef0641edcf97316618c8fab40bd248133d",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 2.57,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "public void fireErrors(String aFileName, LocalizedMessage[] aErrors) {\n    final String stripped \u003d getStrippedFileName(aFileName);\n    for (int i \u003d 0; i \u003c aErrors.length; i++) {\n        final AuditEvent evt \u003d new AuditEvent(this, stripped, aErrors[i]);\n        if (mFilters.accept(evt)) {\n            final Iterator it \u003d mListeners.iterator();\n            while (it.hasNext()) {\n                final AuditListener listener \u003d (AuditListener) it.next();\n                listener.addError(evt);\n            }\n        }\n    }\n}",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java",
      "functionStartLine": 362,
      "functionName": "fireErrors",
      "functionAnnotation": "",
      "functionDoc": "notify all listeners about the errors in a file.\n\n@param aFileName the audited file\n@param aErrors the audit errors from the file\n",
      "diff": "@@ -1,13 +1,13 @@\n public void fireErrors(String aFileName, LocalizedMessage[] aErrors) {\n     final String stripped \u003d getStrippedFileName(aFileName);\n     for (int i \u003d 0; i \u003c aErrors.length; i++) {\n         final AuditEvent evt \u003d new AuditEvent(this, stripped, aErrors[i]);\n-        if (mFilterChain.accept(evt)) {\n+        if (mFilters.accept(evt)) {\n             final Iterator it \u003d mListeners.iterator();\n             while (it.hasNext()) {\n                 final AuditListener listener \u003d (AuditListener) it.next();\n                 listener.addError(evt);\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1e7d8eef0641edcf97316618c8fab40bd248133d": {
      "type": "Ybodychange",
      "commitMessage": "Refactored Filters to the way Checkstyle uses them;\ni.e. a Filter accepts or rejects an Object,\nand a FilterSet, not a FilterChain, aggregates Filters.\n",
      "commitDate": "2003/7/16 上午4:18",
      "commitName": "1e7d8eef0641edcf97316618c8fab40bd248133d",
      "commitAuthor": "Rick Giles",
      "commitDateOld": "2003/7/14 下午8:31",
      "commitNameOld": "51dae59b8dcfb5a34f2a8a5b3e788eb6599a1df3",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 1.32,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "public void fireErrors(String aFileName, LocalizedMessage[] aErrors) {\n    final String stripped \u003d getStrippedFileName(aFileName);\n    for (int i \u003d 0; i \u003c aErrors.length; i++) {\n        final AuditEvent evt \u003d new AuditEvent(this, stripped, aErrors[i]);\n        if (mFilterChain.accept(evt)) {\n            final Iterator it \u003d mListeners.iterator();\n            while (it.hasNext()) {\n                final AuditListener listener \u003d (AuditListener) it.next();\n                listener.addError(evt);\n            }\n        }\n    }\n}",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java",
      "functionStartLine": 362,
      "functionName": "fireErrors",
      "functionAnnotation": "",
      "functionDoc": "notify all listeners about the errors in a file.\n\n@param aFileName the audited file\n@param aErrors the audit errors from the file\n",
      "diff": "@@ -1,13 +1,13 @@\n public void fireErrors(String aFileName, LocalizedMessage[] aErrors) {\n     final String stripped \u003d getStrippedFileName(aFileName);\n     for (int i \u003d 0; i \u003c aErrors.length; i++) {\n         final AuditEvent evt \u003d new AuditEvent(this, stripped, aErrors[i]);\n-        if (mFilterChain.decide(evt) !\u003d Filter.DENY) {\n+        if (mFilterChain.accept(evt)) {\n             final Iterator it \u003d mListeners.iterator();\n             while (it.hasNext()) {\n                 final AuditListener listener \u003d (AuditListener) it.next();\n                 listener.addError(evt);\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "21f0b07bd031f022d14106150af66ceddb4c06b8": {
      "type": "Ybodychange",
      "commitMessage": "Refactor and extend filters to filter chains.\nAdd suppression filters.\n",
      "commitDate": "2003/7/14 下午4:22",
      "commitName": "21f0b07bd031f022d14106150af66ceddb4c06b8",
      "commitAuthor": "Rick Giles",
      "commitDateOld": "2003/7/13 下午6:30",
      "commitNameOld": "8dc1a8ab994076f3fc10bab9248a2439ee54b443",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.91,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void fireErrors(String aFileName, LocalizedMessage[] aErrors) {\n    final String stripped \u003d getStrippedFileName(aFileName);\n    for (int i \u003d 0; i \u003c aErrors.length; i++) {\n        final AuditEvent evt \u003d new AuditEvent(this, stripped, aErrors[i]);\n        if (mFilterChain.decide(evt) !\u003d Filter.DENY) {\n            final Iterator it \u003d mListeners.iterator();\n            while (it.hasNext()) {\n                final AuditListener listener \u003d (AuditListener) it.next();\n                listener.addError(evt);\n            }\n        }\n    }\n}",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java",
      "functionStartLine": 363,
      "functionName": "fireErrors",
      "functionAnnotation": "",
      "functionDoc": "notify all listeners about the errors in a file.\n\n@param aFileName the audited file\n@param aErrors the audit errors from the file\n",
      "diff": "@@ -1,13 +1,13 @@\n public void fireErrors(String aFileName, LocalizedMessage[] aErrors) {\n     final String stripped \u003d getStrippedFileName(aFileName);\n     for (int i \u003d 0; i \u003c aErrors.length; i++) {\n         final AuditEvent evt \u003d new AuditEvent(this, stripped, aErrors[i]);\n-        if (accept(evt)) {\n+        if (mFilterChain.decide(evt) !\u003d Filter.DENY) {\n             final Iterator it \u003d mListeners.iterator();\n             while (it.hasNext()) {\n                 final AuditListener listener \u003d (AuditListener) it.next();\n                 listener.addError(evt);\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c3baa3fa77f4ed8e475ab52db6d0f2f860d93ef0": {
      "type": "Ybodychange",
      "commitMessage": "Added filter feature to Checker.\n",
      "commitDate": "2003/7/12 上午2:35",
      "commitName": "c3baa3fa77f4ed8e475ab52db6d0f2f860d93ef0",
      "commitAuthor": "Rick Giles",
      "commitDateOld": "2003/6/27 下午7:04",
      "commitNameOld": "768256c32a3e397f837ce27602bda49e3c5e0062",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 14.31,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "actualSource": "public void fireErrors(String aFileName, LocalizedMessage[] aErrors) {\n    final String stripped \u003d getStrippedFileName(aFileName);\n    for (int i \u003d 0; i \u003c aErrors.length; i++) {\n        final AuditEvent evt \u003d new AuditEvent(this, stripped, aErrors[i]);\n        if (accept(evt)) {\n            final Iterator it \u003d mListeners.iterator();\n            while (it.hasNext()) {\n                final AuditListener listener \u003d (AuditListener) it.next();\n                listener.addError(evt);\n            }\n        }\n    }\n}",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java",
      "functionStartLine": 373,
      "functionName": "fireErrors",
      "functionAnnotation": "",
      "functionDoc": "notify all listeners about the errors in a file.\n\n@param aFileName the audited file\n@param aErrors the audit errors from the file\n",
      "diff": "@@ -1,11 +1,13 @@\n public void fireErrors(String aFileName, LocalizedMessage[] aErrors) {\n     final String stripped \u003d getStrippedFileName(aFileName);\n     for (int i \u003d 0; i \u003c aErrors.length; i++) {\n         final AuditEvent evt \u003d new AuditEvent(this, stripped, aErrors[i]);\n-        final Iterator it \u003d mListeners.iterator();\n-        while (it.hasNext()) {\n-            final AuditListener listener \u003d (AuditListener) it.next();\n-            listener.addError(evt);\n+        if (accept(evt)) {\n+            final Iterator it \u003d mListeners.iterator();\n+            while (it.hasNext()) {\n+                final AuditListener listener \u003d (AuditListener) it.next();\n+                listener.addError(evt);\n+            }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "54a09706ec1db32435b09e6b6910813325558f8d": {
      "type": "Ymodifierchange",
      "commitMessage": "Introduced MessageDispatcher interface so\nFileSetChecks do not need to be tightly coupled\nwith Checker to report errors.\n\nFileSetCheck implementations report errors now.\n\nError counting in Checker is now done via an\nAuditListener, no need to bother about that in\neach individual FileSetCheck.\n",
      "commitDate": "2002/11/20 上午3:17",
      "commitName": "54a09706ec1db32435b09e6b6910813325558f8d",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": "2002/11/17 下午4:24",
      "commitNameOld": "82b2ba526976588d550cac698e512f8de6c1ffc6",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 2.45,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "actualSource": "public void fireErrors(String aFileName, LocalizedMessage[] aErrors) {\n    final String stripped \u003d getStrippedFileName(aFileName);\n    for (int i \u003d 0; i \u003c aErrors.length; i++) {\n        final AuditEvent evt \u003d new AuditEvent(this, stripped, aErrors[i]);\n        final Iterator it \u003d mListeners.iterator();\n        while (it.hasNext()) {\n            final AuditListener listener \u003d (AuditListener) it.next();\n            listener.addError(evt);\n        }\n    }\n}",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java",
      "functionStartLine": 318,
      "functionName": "fireErrors",
      "functionAnnotation": "",
      "functionDoc": "notify all listeners about the errors in a file.\n\n@param aFileName the audited file\n@param aErrors the audit errors from the file\n",
      "diff": "@@ -1,11 +1,11 @@\n-protected void fireErrors(String aFileName, LocalizedMessage[] aErrors) {\n+public void fireErrors(String aFileName, LocalizedMessage[] aErrors) {\n     final String stripped \u003d getStrippedFileName(aFileName);\n     for (int i \u003d 0; i \u003c aErrors.length; i++) {\n         final AuditEvent evt \u003d new AuditEvent(this, stripped, aErrors[i]);\n         final Iterator it \u003d mListeners.iterator();\n         while (it.hasNext()) {\n             final AuditListener listener \u003d (AuditListener) it.next();\n             listener.addError(evt);\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[protected]",
        "newValue": "[public]"
      }
    },
    "82b2ba526976588d550cac698e512f8de6c1ffc6": {
      "type": "Ybodychange",
      "commitMessage": "Moved stripping of basedir to the event handling routines.\nThis separates concerns in parse(File) as a preparation for moving that method to TreeWalker.\nIt also fixes bug #622290 (package name reported incorrectly) once I integrate PackageHtmlCheck.\n",
      "commitDate": "2002/11/17 下午4:24",
      "commitName": "82b2ba526976588d550cac698e512f8de6c1ffc6",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": "2002/11/17 下午4:05",
      "commitNameOld": "93390fbc8a6952bbb20571ac1b18a705814fc219",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void fireErrors(String aFileName, LocalizedMessage[] aErrors) {\n    final String stripped \u003d getStrippedFileName(aFileName);\n    for (int i \u003d 0; i \u003c aErrors.length; i++) {\n        final AuditEvent evt \u003d new AuditEvent(this, stripped, aErrors[i]);\n        final Iterator it \u003d mListeners.iterator();\n        while (it.hasNext()) {\n            final AuditListener listener \u003d (AuditListener) it.next();\n            listener.addError(evt);\n        }\n    }\n}",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java",
      "functionStartLine": 265,
      "functionName": "fireErrors",
      "functionAnnotation": "",
      "functionDoc": "notify all listeners about the errors in a file.\n\n@param aFileName the audited file\n@param aErrors the audit errors from the file\n",
      "diff": "@@ -1,10 +1,11 @@\n protected void fireErrors(String aFileName, LocalizedMessage[] aErrors) {\n+    final String stripped \u003d getStrippedFileName(aFileName);\n     for (int i \u003d 0; i \u003c aErrors.length; i++) {\n-        final AuditEvent evt \u003d new AuditEvent(this, aFileName, aErrors[i]);\n+        final AuditEvent evt \u003d new AuditEvent(this, stripped, aErrors[i]);\n         final Iterator it \u003d mListeners.iterator();\n         while (it.hasNext()) {\n             final AuditListener listener \u003d (AuditListener) it.next();\n             listener.addError(evt);\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "20483ae032296610315fafb9a8774cfdd0e13857": {
      "type": "Ybodychange",
      "commitMessage": "Major rework to support localized error messages. Inspired by patch 580410. At\nthe moment it is not possible to override the system locale, this probably\nshould be added.\n\nNow possible to specify the locale to use.\n",
      "commitDate": "2002/8/11 下午6:01",
      "commitName": "20483ae032296610315fafb9a8774cfdd0e13857",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "2002/8/10 下午10:15",
      "commitNameOld": "c682b5725d22afc38bf19d9667b23a7deab6d8c3",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.82,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void fireErrors(String aFileName, LocalizedMessage[] aErrors) {\n    for (int i \u003d 0; i \u003c aErrors.length; i++) {\n        final AuditEvent evt \u003d new AuditEvent(this, aFileName, aErrors[i]);\n        final Iterator it \u003d mListeners.iterator();\n        while (it.hasNext()) {\n            final AuditListener listener \u003d (AuditListener) it.next();\n            listener.addError(evt);\n        }\n    }\n}",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java",
      "functionStartLine": 368,
      "functionName": "fireErrors",
      "functionAnnotation": "",
      "functionDoc": "notify all listeners about the errors in a file.\n\n@param aFileName the audited file\n@param aErrors the audit errors from the file\n",
      "diff": "@@ -1,10 +1,10 @@\n protected void fireErrors(String aFileName, LocalizedMessage[] aErrors) {\n     for (int i \u003d 0; i \u003c aErrors.length; i++) {\n-        final AuditEvent evt \u003d new AuditEvent(this, aFileName, aErrors[i].getLineNo(), aErrors[i].getColumnNo(), aErrors[i].getMessage());\n+        final AuditEvent evt \u003d new AuditEvent(this, aFileName, aErrors[i]);\n         final Iterator it \u003d mListeners.iterator();\n         while (it.hasNext()) {\n             final AuditListener listener \u003d (AuditListener) it.next();\n             listener.addError(evt);\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c682b5725d22afc38bf19d9667b23a7deab6d8c3": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Major rework to support localized error messages. Inspired by patch 580410. At\nthe moment it is not possible to override the system locale, this probably\nshould be added.\n",
      "commitDate": "2002/8/10 下午10:15",
      "commitName": "c682b5725d22afc38bf19d9667b23a7deab6d8c3",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Major rework to support localized error messages. Inspired by patch 580410. At\nthe moment it is not possible to override the system locale, this probably\nshould be added.\n",
          "commitDate": "2002/8/10 下午10:15",
          "commitName": "c682b5725d22afc38bf19d9667b23a7deab6d8c3",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "2002/7/6 下午2:35",
          "commitNameOld": "7521f1897b007e3acc06ea3330df5124f4206589",
          "commitAuthorOld": "Lars Kühne",
          "daysBetweenCommits": 35.32,
          "commitsBetweenForRepo": 17,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void fireErrors(String aFileName, LocalizedMessage[] aErrors) {\n    for (int i \u003d 0; i \u003c aErrors.length; i++) {\n        final AuditEvent evt \u003d new AuditEvent(this, aFileName, aErrors[i].getLineNo(), aErrors[i].getColumnNo(), aErrors[i].getMessage());\n        final Iterator it \u003d mListeners.iterator();\n        while (it.hasNext()) {\n            final AuditListener listener \u003d (AuditListener) it.next();\n            listener.addError(evt);\n        }\n    }\n}",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java",
          "functionStartLine": 364,
          "functionName": "fireErrors",
          "functionAnnotation": "",
          "functionDoc": "notify all listeners about the errors in a file.\n\n@param aFileName the audited file\n@param aErrors the audit errors from the file\n",
          "diff": "@@ -1,10 +1,10 @@\n-protected void fireErrors(String aFileName, LineText[] aErrors) {\n+protected void fireErrors(String aFileName, LocalizedMessage[] aErrors) {\n     for (int i \u003d 0; i \u003c aErrors.length; i++) {\n-        final AuditEvent evt \u003d new AuditEvent(this, aFileName, aErrors[i].getLineNo(), aErrors[i].getColumnNo(), aErrors[i].getText());\n+        final AuditEvent evt \u003d new AuditEvent(this, aFileName, aErrors[i].getLineNo(), aErrors[i].getColumnNo(), aErrors[i].getMessage());\n         final Iterator it \u003d mListeners.iterator();\n         while (it.hasNext()) {\n             final AuditListener listener \u003d (AuditListener) it.next();\n             listener.addError(evt);\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[aFileName-String, aErrors-LineText[]]",
            "newValue": "[aFileName-String, aErrors-LocalizedMessage[]]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Major rework to support localized error messages. Inspired by patch 580410. At\nthe moment it is not possible to override the system locale, this probably\nshould be added.\n",
          "commitDate": "2002/8/10 下午10:15",
          "commitName": "c682b5725d22afc38bf19d9667b23a7deab6d8c3",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "2002/7/6 下午2:35",
          "commitNameOld": "7521f1897b007e3acc06ea3330df5124f4206589",
          "commitAuthorOld": "Lars Kühne",
          "daysBetweenCommits": 35.32,
          "commitsBetweenForRepo": 17,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void fireErrors(String aFileName, LocalizedMessage[] aErrors) {\n    for (int i \u003d 0; i \u003c aErrors.length; i++) {\n        final AuditEvent evt \u003d new AuditEvent(this, aFileName, aErrors[i].getLineNo(), aErrors[i].getColumnNo(), aErrors[i].getMessage());\n        final Iterator it \u003d mListeners.iterator();\n        while (it.hasNext()) {\n            final AuditListener listener \u003d (AuditListener) it.next();\n            listener.addError(evt);\n        }\n    }\n}",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java",
          "functionStartLine": 364,
          "functionName": "fireErrors",
          "functionAnnotation": "",
          "functionDoc": "notify all listeners about the errors in a file.\n\n@param aFileName the audited file\n@param aErrors the audit errors from the file\n",
          "diff": "@@ -1,10 +1,10 @@\n-protected void fireErrors(String aFileName, LineText[] aErrors) {\n+protected void fireErrors(String aFileName, LocalizedMessage[] aErrors) {\n     for (int i \u003d 0; i \u003c aErrors.length; i++) {\n-        final AuditEvent evt \u003d new AuditEvent(this, aFileName, aErrors[i].getLineNo(), aErrors[i].getColumnNo(), aErrors[i].getText());\n+        final AuditEvent evt \u003d new AuditEvent(this, aFileName, aErrors[i].getLineNo(), aErrors[i].getColumnNo(), aErrors[i].getMessage());\n         final Iterator it \u003d mListeners.iterator();\n         while (it.hasNext()) {\n             final AuditListener listener \u003d (AuditListener) it.next();\n             listener.addError(evt);\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "6970485b88600343de72af03a6bf87cf78e6cf55": {
      "type": "Ybodychange",
      "commitMessage": "Started to add support for including the column number in the output. It\nreally rocks - I wish I had done it from the start!\n\nStrangely, although I am starting to use IDEA a lot for code development, I\nstill use Emacs for fixing checkstyle errors.\n",
      "commitDate": "2002/4/25 下午3:03",
      "commitName": "6970485b88600343de72af03a6bf87cf78e6cf55",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "2002/4/24 下午10:33",
      "commitNameOld": "cbb5f228d8070bd9cc8f16638f3abe50a7273905",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.69,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void fireErrors(String aFileName, LineText[] aErrors) {\n    for (int i \u003d 0; i \u003c aErrors.length; i++) {\n        final AuditEvent evt \u003d new AuditEvent(this, aFileName, aErrors[i].getLineNo(), aErrors[i].getColumnNo(), aErrors[i].getText());\n        final Iterator it \u003d mListeners.iterator();\n        while (it.hasNext()) {\n            final AuditListener listener \u003d (AuditListener) it.next();\n            listener.addError(evt);\n        }\n    }\n}",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java",
      "functionStartLine": 365,
      "functionName": "fireErrors",
      "functionAnnotation": "",
      "functionDoc": "notify all listeners about the errors in a file.\n\n@param aFileName the audited file\n@param aErrors the audit errors from the file\n",
      "diff": "@@ -1,10 +1,10 @@\n protected void fireErrors(String aFileName, LineText[] aErrors) {\n     for (int i \u003d 0; i \u003c aErrors.length; i++) {\n-        final AuditEvent evt \u003d new AuditEvent(this, aFileName, aErrors[i].getLineNo(), aErrors[i].getText());\n+        final AuditEvent evt \u003d new AuditEvent(this, aFileName, aErrors[i].getLineNo(), aErrors[i].getColumnNo(), aErrors[i].getText());\n         final Iterator it \u003d mListeners.iterator();\n         while (it.hasNext()) {\n             final AuditListener listener \u003d (AuditListener) it.next();\n             listener.addError(evt);\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "0e3fe5643667a53079dbd114e5b1e9aa91fde083": {
      "type": "Yintroduced",
      "commitMessage": "started to incorporate logging events\n",
      "commitDate": "2001/8/31 上午12:13",
      "commitName": "0e3fe5643667a53079dbd114e5b1e9aa91fde083",
      "commitAuthor": "Oliver Burn",
      "diff": "@@ -0,0 +1,10 @@\n+protected void fireErrors(String aFileName, LineText[] aErrors) {\n+    for (int i \u003d 0; i \u003c aErrors.length; i++) {\n+        final AuditEvent evt \u003d new AuditEvent(this, aFileName, aErrors[i].getLineNo(), aErrors[i].getText());\n+        final Iterator it \u003d mListeners.iterator();\n+        while (it.hasNext()) {\n+            final AuditListener listener \u003d (AuditListener) it.next();\n+            listener.addError(evt);\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected void fireErrors(String aFileName, LineText[] aErrors) {\n    for (int i \u003d 0; i \u003c aErrors.length; i++) {\n        final AuditEvent evt \u003d new AuditEvent(this, aFileName, aErrors[i].getLineNo(), aErrors[i].getText());\n        final Iterator it \u003d mListeners.iterator();\n        while (it.hasNext()) {\n            final AuditListener listener \u003d (AuditListener) it.next();\n            listener.addError(evt);\n        }\n    }\n}",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java",
      "functionStartLine": 309,
      "functionName": "fireErrors",
      "functionAnnotation": "",
      "functionDoc": "notify all listeners about the errors in a file.\n\n@param aFileName the audited file\n@param aErrors the audit errors from the file\n"
    }
  }
}