{
  "origin": "codeshovel",
  "repositoryName": "elasticsearch",
  "repositoryPath": "/Users/franky/Documents/Homework/毕业设计/testcase/elasticsearch/.git",
  "startCommitName": "767c69593c67befb843686de8ea51b7bc87728c9",
  "sourceFileName": "RestRequest.java",
  "functionName": "method",
  "functionId": "method",
  "sourceFilePath": "server/src/main/java/org/elasticsearch/rest/RestRequest.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 150,
  "functionEndLine": 152,
  "numCommitsSeen": 15,
  "timeTaken": 7847,
  "changeHistory": [
    "fcf1e41e429b10e03c5cf9b8551636df7519b4c5",
    "2efd22454a62e7387c51eb0cd973e5ff7a3fb09f",
    "c0790d6a491985e70814d1b82c8031158aee5c1a",
    "f3ec4a5208febeeca53a145861807a2dc43dac7f",
    "1fb742a0adf5049a13dd02c0b7f53d594df4768c",
    "9005e9fdb9441ad1576ea4dae8a9eb618664d266"
  ],
  "changeHistoryShort": {
    "fcf1e41e429b10e03c5cf9b8551636df7519b4c5": "Ymultichange(Ymovefromfile,Ybodychange,Yannotationchange)",
    "2efd22454a62e7387c51eb0cd973e5ff7a3fb09f": "Yfilerename",
    "c0790d6a491985e70814d1b82c8031158aee5c1a": "Ymovefromfile",
    "f3ec4a5208febeeca53a145861807a2dc43dac7f": "Yfilerename",
    "1fb742a0adf5049a13dd02c0b7f53d594df4768c": "Yfilerename",
    "9005e9fdb9441ad1576ea4dae8a9eb618664d266": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fcf1e41e429b10e03c5cf9b8551636df7519b4c5": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yannotationchange)",
      "commitMessage": "Extract common http logic to server (#31311)\n\nThis is related to #28898. With the addition of the http nio transport,\r\nwe now have two different modules that provide http transports.\r\nCurrently most of the http logic lives at the module level. However,\r\nsome of this logic can live in server. In particular, some of the\r\nsetting of headers, cors, and pipelining. This commit begins this moving\r\nin that direction by introducing lower level abstraction (HttpChannel,\r\nHttpRequest, and HttpResonse) that is implemented by the modules. The\r\nhigher level rest request and rest channel work can live entirely in\r\nserver.",
      "commitDate": "2018/6/15 上午5:10",
      "commitName": "fcf1e41e429b10e03c5cf9b8551636df7519b4c5",
      "commitAuthor": "Tim Brooks",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Extract common http logic to server (#31311)\n\nThis is related to #28898. With the addition of the http nio transport,\r\nwe now have two different modules that provide http transports.\r\nCurrently most of the http logic lives at the module level. However,\r\nsome of this logic can live in server. In particular, some of the\r\nsetting of headers, cors, and pipelining. This commit begins this moving\r\nin that direction by introducing lower level abstraction (HttpChannel,\r\nHttpRequest, and HttpResonse) that is implemented by the modules. The\r\nhigher level rest request and rest channel work can live entirely in\r\nserver.",
          "commitDate": "2018/6/15 上午5:10",
          "commitName": "fcf1e41e429b10e03c5cf9b8551636df7519b4c5",
          "commitAuthor": "Tim Brooks",
          "commitDateOld": "2018/6/15 上午4:22",
          "commitNameOld": "6dd81ead74fd54247198d380b98053124a30f1ee",
          "commitAuthorOld": "Nik Everett",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Method method() {\n    return httpRequest.method();\n}",
          "path": "server/src/main/java/org/elasticsearch/rest/RestRequest.java",
          "functionStartLine": 150,
          "functionName": "method",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,4 +1,3 @@\n-@Override\n public Method method() {\n-    return restRequest.method();\n+    return httpRequest.method();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/rest/RestRequestFilter.java",
            "newPath": "server/src/main/java/org/elasticsearch/rest/RestRequest.java",
            "oldMethodName": "method",
            "newMethodName": "method"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Extract common http logic to server (#31311)\n\nThis is related to #28898. With the addition of the http nio transport,\r\nwe now have two different modules that provide http transports.\r\nCurrently most of the http logic lives at the module level. However,\r\nsome of this logic can live in server. In particular, some of the\r\nsetting of headers, cors, and pipelining. This commit begins this moving\r\nin that direction by introducing lower level abstraction (HttpChannel,\r\nHttpRequest, and HttpResonse) that is implemented by the modules. The\r\nhigher level rest request and rest channel work can live entirely in\r\nserver.",
          "commitDate": "2018/6/15 上午5:10",
          "commitName": "fcf1e41e429b10e03c5cf9b8551636df7519b4c5",
          "commitAuthor": "Tim Brooks",
          "commitDateOld": "2018/6/15 上午4:22",
          "commitNameOld": "6dd81ead74fd54247198d380b98053124a30f1ee",
          "commitAuthorOld": "Nik Everett",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Method method() {\n    return httpRequest.method();\n}",
          "path": "server/src/main/java/org/elasticsearch/rest/RestRequest.java",
          "functionStartLine": 150,
          "functionName": "method",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,4 +1,3 @@\n-@Override\n public Method method() {\n-    return restRequest.method();\n+    return httpRequest.method();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yannotationchange",
          "commitMessage": "Extract common http logic to server (#31311)\n\nThis is related to #28898. With the addition of the http nio transport,\r\nwe now have two different modules that provide http transports.\r\nCurrently most of the http logic lives at the module level. However,\r\nsome of this logic can live in server. In particular, some of the\r\nsetting of headers, cors, and pipelining. This commit begins this moving\r\nin that direction by introducing lower level abstraction (HttpChannel,\r\nHttpRequest, and HttpResonse) that is implemented by the modules. The\r\nhigher level rest request and rest channel work can live entirely in\r\nserver.",
          "commitDate": "2018/6/15 上午5:10",
          "commitName": "fcf1e41e429b10e03c5cf9b8551636df7519b4c5",
          "commitAuthor": "Tim Brooks",
          "commitDateOld": "2018/6/15 上午4:22",
          "commitNameOld": "6dd81ead74fd54247198d380b98053124a30f1ee",
          "commitAuthorOld": "Nik Everett",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Method method() {\n    return httpRequest.method();\n}",
          "path": "server/src/main/java/org/elasticsearch/rest/RestRequest.java",
          "functionStartLine": 150,
          "functionName": "method",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,4 +1,3 @@\n-@Override\n public Method method() {\n-    return restRequest.method();\n+    return httpRequest.method();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "@Override",
            "newValue": ""
          }
        }
      ]
    },
    "2efd22454a62e7387c51eb0cd973e5ff7a3fb09f": {
      "type": "Yfilerename",
      "commitMessage": "Migrate x-pack-elasticsearch source to elasticsearch\n",
      "commitDate": "2018/4/21 上午6:29",
      "commitName": "2efd22454a62e7387c51eb0cd973e5ff7a3fb09f",
      "commitAuthor": "Ryan Ernst",
      "commitDateOld": "2018/4/21 上午2:59",
      "commitNameOld": "b57318c1a3b2e5c06094a2fcfaa8d3af9bf51126",
      "commitAuthorOld": "Jay Modi",
      "daysBetweenCommits": 0.15,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic Method method() {\n    return restRequest.method();\n}",
      "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/rest/RestRequestFilter.java",
      "functionStartLine": 41,
      "functionName": "method",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "plugin/core/src/main/java/org/elasticsearch/xpack/core/security/rest/RestRequestFilter.java",
        "newPath": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/rest/RestRequestFilter.java"
      }
    },
    "c0790d6a491985e70814d1b82c8031158aee5c1a": {
      "type": "Ymovefromfile",
      "commitMessage": "Move x-pack-core to core package (elastic/x-pack-elasticsearch#3678)\n\nThis commit moves the source file in x-pack-core to a org.elasticsearch.xpack.core package. This is to prevent issues where we have compile-time success reaching through packages that will cross module boundaries at runtime (due to being in different classloaders). By moving these to a separate package, we have compile-time safety. Follow-ups can consider build time checking that only this package is defined in x-pack-core, or sealing x-pack-core until modules arrive for us.\n\nOriginal commit: elastic/x-pack-elasticsearch@232e156e0e7318c0c8f8070ac3a7c3638d2e5a5a\n",
      "commitDate": "2018/1/24 上午2:43",
      "commitName": "c0790d6a491985e70814d1b82c8031158aee5c1a",
      "commitAuthor": "Jason Tedor",
      "commitDateOld": "2018/1/24 上午1:40",
      "commitNameOld": "97e018f1bd287a1cb8b89381f2a974ac2284c75f",
      "commitAuthorOld": "David Kyle",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic Method method() {\n    return restRequest.method();\n}",
      "path": "plugin/core/src/main/java/org/elasticsearch/xpack/core/security/rest/RestRequestFilter.java",
      "functionStartLine": 41,
      "functionName": "method",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "plugin/core/src/main/java/org/elasticsearch/xpack/security/rest/RestRequestFilter.java",
        "newPath": "plugin/core/src/main/java/org/elasticsearch/xpack/core/security/rest/RestRequestFilter.java",
        "oldMethodName": "method",
        "newMethodName": "method"
      }
    },
    "f3ec4a5208febeeca53a145861807a2dc43dac7f": {
      "type": "Yfilerename",
      "commitMessage": "Split up xpack plugins into their own modules (elastic/x-pack-elasticsearch#3643)\n\nThanks to some great work by a bunch of amazing people, the chuck norris xpack split is a go!\n\nOriginal commit: elastic/x-pack-elasticsearch@dad98e28f4043f805907af2ad441908f64ca6c70\n",
      "commitDate": "2018/1/20 下午1:30",
      "commitName": "f3ec4a5208febeeca53a145861807a2dc43dac7f",
      "commitAuthor": "Michael Basnight",
      "commitDateOld": "2018/1/20 上午4:43",
      "commitNameOld": "744d9325e919f10ab8f284892a42f6bd2bd80b54",
      "commitAuthorOld": "Lisa Cawley",
      "daysBetweenCommits": 0.37,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic Method method() {\n    return restRequest.method();\n}",
      "path": "plugin/core/src/main/java/org/elasticsearch/xpack/security/rest/RestRequestFilter.java",
      "functionStartLine": 41,
      "functionName": "method",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "plugin/src/main/java/org/elasticsearch/xpack/security/rest/RestRequestFilter.java",
        "newPath": "plugin/core/src/main/java/org/elasticsearch/xpack/security/rest/RestRequestFilter.java"
      }
    },
    "1fb742a0adf5049a13dd02c0b7f53d594df4768c": {
      "type": "Yfilerename",
      "commitMessage": "Rename core plugin and transport dirs\n\nOriginal commit: elastic/x-pack-elasticsearch@1844685f777bbeffb4221743cc029171b734caf8\n",
      "commitDate": "2017/2/11 上午3:02",
      "commitName": "1fb742a0adf5049a13dd02c0b7f53d594df4768c",
      "commitAuthor": "Ryan Ernst",
      "commitDateOld": "2017/2/11 上午12:00",
      "commitNameOld": "46f7eeaf54efc08b6907668ceae0a08a48fdb4ef",
      "commitAuthorOld": "Ryan Ernst",
      "daysBetweenCommits": 0.13,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic Method method() {\n    return restRequest.method();\n}",
      "path": "plugin/src/main/java/org/elasticsearch/xpack/security/rest/RestRequestFilter.java",
      "functionStartLine": 39,
      "functionName": "method",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "elasticsearch/src/main/java/org/elasticsearch/xpack/security/rest/RestRequestFilter.java",
        "newPath": "plugin/src/main/java/org/elasticsearch/xpack/security/rest/RestRequestFilter.java"
      }
    },
    "9005e9fdb9441ad1576ea4dae8a9eb618664d266": {
      "type": "Yintroduced",
      "commitMessage": "security: filter content of known requests with passwords (elastic/elasticsearch#4700)\n\nThis commit adds a mechanism for defining known sensitive values in rest bodies so that\r\nthese can be filtered when auditing the request body.\n\nOriginal commit: elastic/x-pack-elasticsearch@d138a6bff7ddfe529796dbb1f373a43887f911ee\n",
      "commitDate": "2017/1/21 上午3:05",
      "commitName": "9005e9fdb9441ad1576ea4dae8a9eb618664d266",
      "commitAuthor": "Jay Modi",
      "diff": "@@ -0,0 +1,4 @@\n+@Override\n+public Method method() {\n+    return restRequest.method();\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic Method method() {\n    return restRequest.method();\n}",
      "path": "elasticsearch/src/main/java/org/elasticsearch/xpack/security/rest/RestRequestFilter.java",
      "functionStartLine": 40,
      "functionName": "method",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}