{
  "origin": "codeshovel",
  "repositoryName": "spring-boot",
  "repositoryPath": "/Users/franky/Documents/Homework/毕业设计/testcase/spring-boot/.git",
  "startCommitName": "5cfe8dbee950dbf3a8de3ece2f6f3363f13d904a",
  "sourceFileName": "ServletWebServerApplicationContext.java",
  "functionName": "prepareWebApplicationContext",
  "functionId": "prepareWebApplicationContext___servletContext-ServletContext",
  "sourceFilePath": "spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/context/ServletWebServerApplicationContext.java",
  "functionAnnotation": "",
  "functionDoc": "Prepare the {@link WebApplicationContext} with the given fully loaded\n{@link ServletContext}. This method is usually called from\n{@link ServletContextInitializer#onStartup(ServletContext)} and is similar to the\nfunctionality usually provided by a {@link ContextLoaderListener}.\n\n@param servletContext the operational servlet context\n",
  "functionStartLine": 260,
  "functionEndLine": 295,
  "numCommitsSeen": 82,
  "timeTaken": 3856,
  "changeHistory": [
    "0ba4830b4fb20deea040ca5e1c9a34651708b222",
    "798fe5ed53d37edbd9ae9d23a96b4a00c86b07b4",
    "67556ba8eaf22a352b03fe197a0c452f695835a6",
    "c678c1f7882ae6991994fbc6737a38e26ed11f38",
    "883fd9162f375e5e4f4d03eb818d223108eeb560",
    "5b1503d07de339e726134ee3d5ec73ac23064e9e",
    "b665a2bb1d898f251da348beba8b71b3ac34497f",
    "3f2bb03fb8ebc6a44a7ca3add21b53b906e74424",
    "2098e23fca3858e218f055373665fb1cf2188fdc",
    "0b863611d9563d6a41ebe219925e68be407e501a",
    "cd51f357a3cfae04954ac6dce5134c3e2a6ad241",
    "261955c50b8fb44311324d2188bf6e3f92237e0c",
    "40bf33487177a26e578486942218449658c5e715",
    "fb6b2244707dd5dfad12d62cb6a3c396555270d1"
  ],
  "changeHistoryShort": {
    "0ba4830b4fb20deea040ca5e1c9a34651708b222": "Yfilerename",
    "798fe5ed53d37edbd9ae9d23a96b4a00c86b07b4": "Ybodychange",
    "67556ba8eaf22a352b03fe197a0c452f695835a6": "Ymultichange(Yfilerename,Yrename)",
    "c678c1f7882ae6991994fbc6737a38e26ed11f38": "Ybodychange",
    "883fd9162f375e5e4f4d03eb818d223108eeb560": "Ybodychange",
    "5b1503d07de339e726134ee3d5ec73ac23064e9e": "Ybodychange",
    "b665a2bb1d898f251da348beba8b71b3ac34497f": "Ymovefromfile",
    "3f2bb03fb8ebc6a44a7ca3add21b53b906e74424": "Yfilerename",
    "2098e23fca3858e218f055373665fb1cf2188fdc": "Ymovefromfile",
    "0b863611d9563d6a41ebe219925e68be407e501a": "Ymovefromfile",
    "cd51f357a3cfae04954ac6dce5134c3e2a6ad241": "Yfilerename",
    "261955c50b8fb44311324d2188bf6e3f92237e0c": "Ymovefromfile",
    "40bf33487177a26e578486942218449658c5e715": "Yfilerename",
    "fb6b2244707dd5dfad12d62cb6a3c396555270d1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0ba4830b4fb20deea040ca5e1c9a34651708b222": {
      "type": "Yfilerename",
      "commitMessage": "Relocate projects to spring-boot-project\n\nMove projects to better reflect the way that Spring Boot is released.\n\nThe following projects are under `spring-boot-project`:\n\n  - `spring-boot`\n  - `spring-boot-autoconfigure`\n  - `spring-boot-tools`\n  - `spring-boot-starters`\n  - `spring-boot-actuator`\n  - `spring-boot-actuator-autoconfigure`\n  - `spring-boot-test`\n  - `spring-boot-test-autoconfigure`\n  - `spring-boot-devtools`\n  - `spring-boot-cli`\n  - `spring-boot-docs`\n\nSee gh-9316\n",
      "commitDate": "2017/10/5 上午7:34",
      "commitName": "0ba4830b4fb20deea040ca5e1c9a34651708b222",
      "commitAuthor": "Phillip Webb",
      "commitDateOld": "2017/10/5 上午7:04",
      "commitNameOld": "0419d42b7ca37611955bc0211359c215e5477fa4",
      "commitAuthorOld": "Phillip Webb",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void prepareWebApplicationContext(ServletContext servletContext) {\n    Object rootContext \u003d servletContext.getAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE);\n    if (rootContext !\u003d null) {\n        if (rootContext \u003d\u003d this) {\n            throw new IllegalStateException(\"Cannot initialize context because there is already a root application context present - \" + \"check whether you have multiple ServletContextInitializers!\");\n        }\n        return;\n    }\n    Log logger \u003d LogFactory.getLog(ContextLoader.class);\n    servletContext.log(\"Initializing Spring embedded WebApplicationContext\");\n    try {\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, this);\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"Published root WebApplicationContext as ServletContext attribute with name [\" + WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE + \"]\");\n        }\n        setServletContext(servletContext);\n        if (logger.isInfoEnabled()) {\n            long elapsedTime \u003d System.currentTimeMillis() - getStartupDate();\n            logger.info(\"Root WebApplicationContext: initialization completed in \" + elapsedTime + \" ms\");\n        }\n    } catch (RuntimeException | Error ex) {\n        logger.error(\"Context initialization failed\", ex);\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);\n        throw ex;\n    }\n}",
      "path": "spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/context/ServletWebServerApplicationContext.java",
      "functionStartLine": 242,
      "functionName": "prepareWebApplicationContext",
      "functionAnnotation": "",
      "functionDoc": "Prepare the {@link WebApplicationContext} with the given fully loaded\n{@link ServletContext}. This method is usually called from\n{@link ServletContextInitializer#onStartup(ServletContext)} and is similar to the\nfunctionality usually provided by a {@link ContextLoaderListener}.\n\n@param servletContext the operational servlet context\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "spring-boot/src/main/java/org/springframework/boot/web/servlet/context/ServletWebServerApplicationContext.java",
        "newPath": "spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/context/ServletWebServerApplicationContext.java"
      }
    },
    "798fe5ed53d37edbd9ae9d23a96b4a00c86b07b4": {
      "type": "Ybodychange",
      "commitMessage": "Collapse catch clauses\n\nUse multi-catch for exceptions whenever possible.\n\nSee gh-9781\n",
      "commitDate": "2017/7/25 下午3:53",
      "commitName": "798fe5ed53d37edbd9ae9d23a96b4a00c86b07b4",
      "commitAuthor": "Emanuel Campolo",
      "commitDateOld": "2017/5/4 上午12:09",
      "commitNameOld": "bc4a11dd7b50f83e314f42c2da99d011cb9de8d3",
      "commitAuthorOld": "Andy Wilkinson",
      "daysBetweenCommits": 82.66,
      "commitsBetweenForRepo": 669,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void prepareWebApplicationContext(ServletContext servletContext) {\n    Object rootContext \u003d servletContext.getAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE);\n    if (rootContext !\u003d null) {\n        if (rootContext \u003d\u003d this) {\n            throw new IllegalStateException(\"Cannot initialize context because there is already a root application context present - \" + \"check whether you have multiple ServletContextInitializers!\");\n        }\n        return;\n    }\n    Log logger \u003d LogFactory.getLog(ContextLoader.class);\n    servletContext.log(\"Initializing Spring embedded WebApplicationContext\");\n    try {\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, this);\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"Published root WebApplicationContext as ServletContext attribute with name [\" + WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE + \"]\");\n        }\n        setServletContext(servletContext);\n        if (logger.isInfoEnabled()) {\n            long elapsedTime \u003d System.currentTimeMillis() - getStartupDate();\n            logger.info(\"Root WebApplicationContext: initialization completed in \" + elapsedTime + \" ms\");\n        }\n    } catch (RuntimeException | Error ex) {\n        logger.error(\"Context initialization failed\", ex);\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);\n        throw ex;\n    }\n}",
      "path": "spring-boot/src/main/java/org/springframework/boot/web/servlet/context/ServletWebServerApplicationContext.java",
      "functionStartLine": 247,
      "functionName": "prepareWebApplicationContext",
      "functionAnnotation": "",
      "functionDoc": "Prepare the {@link WebApplicationContext} with the given fully loaded\n{@link ServletContext}. This method is usually called from\n{@link ServletContextInitializer#onStartup(ServletContext)} and is similar to the\nfunctionality usually provided by a {@link ContextLoaderListener}.\n\n@param servletContext the operational servlet context\n",
      "diff": "@@ -1,30 +1,26 @@\n protected void prepareWebApplicationContext(ServletContext servletContext) {\n     Object rootContext \u003d servletContext.getAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE);\n     if (rootContext !\u003d null) {\n         if (rootContext \u003d\u003d this) {\n             throw new IllegalStateException(\"Cannot initialize context because there is already a root application context present - \" + \"check whether you have multiple ServletContextInitializers!\");\n         }\n         return;\n     }\n     Log logger \u003d LogFactory.getLog(ContextLoader.class);\n     servletContext.log(\"Initializing Spring embedded WebApplicationContext\");\n     try {\n         servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, this);\n         if (logger.isDebugEnabled()) {\n             logger.debug(\"Published root WebApplicationContext as ServletContext attribute with name [\" + WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE + \"]\");\n         }\n         setServletContext(servletContext);\n         if (logger.isInfoEnabled()) {\n             long elapsedTime \u003d System.currentTimeMillis() - getStartupDate();\n             logger.info(\"Root WebApplicationContext: initialization completed in \" + elapsedTime + \" ms\");\n         }\n-    } catch (RuntimeException ex) {\n-        logger.error(\"Context initialization failed\", ex);\n-        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);\n-        throw ex;\n-    } catch (Error ex) {\n+    } catch (RuntimeException | Error ex) {\n         logger.error(\"Context initialization failed\", ex);\n         servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);\n         throw ex;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "67556ba8eaf22a352b03fe197a0c452f695835a6": {
      "type": "Ymultichange(Yfilerename,Yrename)",
      "commitMessage": "Restructure embedded web server packages\n\nRework `org.springframework.boot.context.embedded` to relocate classes\nto `org.springframework.boot.web`. Packages are now organized around\nthe following areas:\n\nPackages for shared concerns, for example the `WebServer` interface\nto start/stop a server and the common configuration elements:\n- org.springframework.boot.web.context\n- org.springframework.boot.web.server\n\nServlet specific packages:\n- org.springframework.boot.web.servlet.server\n- org.springframework.boot.web.servlet.context\n- org.springframework.boot.web.servlet.filter\n\nReactive specific packages:\n- org.springframework.boot.web.reactive.context\n- org.springframework.boot.web.reactive.server\n\nEmbedded server implementations (both reactive and servlet):\n- org.springframework.boot.web.embedded\n\nIn addition:\n\n- Rename `EmbeddedServletContainerFactory` to `ServletWebServerFactory`\n  to align with the `ReactiveWebServerFactory`.\n- Rename `EmbeddedWebApplicationContext` to\n  `ServletWebServerApplicationContext` and\n- Rename `EmbeddedReactiveWebApplicationContext` to\n  `ReactiveWebServerApplicationContext`.\n- Add checkstyle rules to restrict imports.\n- Fixup all affected code to use the correct imports and local names.\n\nFixes gh-8532\n",
      "commitDate": "2017/3/13 下午12:08",
      "commitName": "67556ba8eaf22a352b03fe197a0c452f695835a6",
      "commitAuthor": "Phillip Webb",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "Restructure embedded web server packages\n\nRework `org.springframework.boot.context.embedded` to relocate classes\nto `org.springframework.boot.web`. Packages are now organized around\nthe following areas:\n\nPackages for shared concerns, for example the `WebServer` interface\nto start/stop a server and the common configuration elements:\n- org.springframework.boot.web.context\n- org.springframework.boot.web.server\n\nServlet specific packages:\n- org.springframework.boot.web.servlet.server\n- org.springframework.boot.web.servlet.context\n- org.springframework.boot.web.servlet.filter\n\nReactive specific packages:\n- org.springframework.boot.web.reactive.context\n- org.springframework.boot.web.reactive.server\n\nEmbedded server implementations (both reactive and servlet):\n- org.springframework.boot.web.embedded\n\nIn addition:\n\n- Rename `EmbeddedServletContainerFactory` to `ServletWebServerFactory`\n  to align with the `ReactiveWebServerFactory`.\n- Rename `EmbeddedWebApplicationContext` to\n  `ServletWebServerApplicationContext` and\n- Rename `EmbeddedReactiveWebApplicationContext` to\n  `ReactiveWebServerApplicationContext`.\n- Add checkstyle rules to restrict imports.\n- Fixup all affected code to use the correct imports and local names.\n\nFixes gh-8532\n",
          "commitDate": "2017/3/13 下午12:08",
          "commitName": "67556ba8eaf22a352b03fe197a0c452f695835a6",
          "commitAuthor": "Phillip Webb",
          "commitDateOld": "2017/3/12 下午3:44",
          "commitNameOld": "7b388e5865c82701f28fb1bf126f44a29b469798",
          "commitAuthorOld": "Stephane Nicoll",
          "daysBetweenCommits": 0.85,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void prepareWebApplicationContext(ServletContext servletContext) {\n    Object rootContext \u003d servletContext.getAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE);\n    if (rootContext !\u003d null) {\n        if (rootContext \u003d\u003d this) {\n            throw new IllegalStateException(\"Cannot initialize context because there is already a root application context present - \" + \"check whether you have multiple ServletContextInitializers!\");\n        }\n        return;\n    }\n    Log logger \u003d LogFactory.getLog(ContextLoader.class);\n    servletContext.log(\"Initializing Spring embedded WebApplicationContext\");\n    try {\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, this);\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"Published root WebApplicationContext as ServletContext attribute with name [\" + WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE + \"]\");\n        }\n        setServletContext(servletContext);\n        if (logger.isInfoEnabled()) {\n            long elapsedTime \u003d System.currentTimeMillis() - getStartupDate();\n            logger.info(\"Root WebApplicationContext: initialization completed in \" + elapsedTime + \" ms\");\n        }\n    } catch (RuntimeException ex) {\n        logger.error(\"Context initialization failed\", ex);\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);\n        throw ex;\n    } catch (Error ex) {\n        logger.error(\"Context initialization failed\", ex);\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);\n        throw ex;\n    }\n}",
          "path": "spring-boot/src/main/java/org/springframework/boot/web/servlet/context/ServletWebServerApplicationContext.java",
          "functionStartLine": 247,
          "functionName": "prepareWebApplicationContext",
          "functionAnnotation": "",
          "functionDoc": "Prepare the {@link WebApplicationContext} with the given fully loaded\n{@link ServletContext}. This method is usually called from\n{@link ServletContextInitializer#onStartup(ServletContext)} and is similar to the\nfunctionality usually provided by a {@link ContextLoaderListener}.\n\n@param servletContext the operational servlet context\n",
          "diff": "@@ -1,30 +1,30 @@\n-protected void prepareEmbeddedWebApplicationContext(ServletContext servletContext) {\n+protected void prepareWebApplicationContext(ServletContext servletContext) {\n     Object rootContext \u003d servletContext.getAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE);\n     if (rootContext !\u003d null) {\n         if (rootContext \u003d\u003d this) {\n             throw new IllegalStateException(\"Cannot initialize context because there is already a root application context present - \" + \"check whether you have multiple ServletContextInitializers!\");\n         }\n         return;\n     }\n     Log logger \u003d LogFactory.getLog(ContextLoader.class);\n     servletContext.log(\"Initializing Spring embedded WebApplicationContext\");\n     try {\n         servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, this);\n         if (logger.isDebugEnabled()) {\n             logger.debug(\"Published root WebApplicationContext as ServletContext attribute with name [\" + WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE + \"]\");\n         }\n         setServletContext(servletContext);\n         if (logger.isInfoEnabled()) {\n             long elapsedTime \u003d System.currentTimeMillis() - getStartupDate();\n             logger.info(\"Root WebApplicationContext: initialization completed in \" + elapsedTime + \" ms\");\n         }\n     } catch (RuntimeException ex) {\n         logger.error(\"Context initialization failed\", ex);\n         servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);\n         throw ex;\n     } catch (Error ex) {\n         logger.error(\"Context initialization failed\", ex);\n         servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);\n         throw ex;\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "spring-boot/src/main/java/org/springframework/boot/context/embedded/EmbeddedWebApplicationContext.java",
            "newPath": "spring-boot/src/main/java/org/springframework/boot/web/servlet/context/ServletWebServerApplicationContext.java"
          }
        },
        {
          "type": "Yrename",
          "commitMessage": "Restructure embedded web server packages\n\nRework `org.springframework.boot.context.embedded` to relocate classes\nto `org.springframework.boot.web`. Packages are now organized around\nthe following areas:\n\nPackages for shared concerns, for example the `WebServer` interface\nto start/stop a server and the common configuration elements:\n- org.springframework.boot.web.context\n- org.springframework.boot.web.server\n\nServlet specific packages:\n- org.springframework.boot.web.servlet.server\n- org.springframework.boot.web.servlet.context\n- org.springframework.boot.web.servlet.filter\n\nReactive specific packages:\n- org.springframework.boot.web.reactive.context\n- org.springframework.boot.web.reactive.server\n\nEmbedded server implementations (both reactive and servlet):\n- org.springframework.boot.web.embedded\n\nIn addition:\n\n- Rename `EmbeddedServletContainerFactory` to `ServletWebServerFactory`\n  to align with the `ReactiveWebServerFactory`.\n- Rename `EmbeddedWebApplicationContext` to\n  `ServletWebServerApplicationContext` and\n- Rename `EmbeddedReactiveWebApplicationContext` to\n  `ReactiveWebServerApplicationContext`.\n- Add checkstyle rules to restrict imports.\n- Fixup all affected code to use the correct imports and local names.\n\nFixes gh-8532\n",
          "commitDate": "2017/3/13 下午12:08",
          "commitName": "67556ba8eaf22a352b03fe197a0c452f695835a6",
          "commitAuthor": "Phillip Webb",
          "commitDateOld": "2017/3/12 下午3:44",
          "commitNameOld": "7b388e5865c82701f28fb1bf126f44a29b469798",
          "commitAuthorOld": "Stephane Nicoll",
          "daysBetweenCommits": 0.85,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void prepareWebApplicationContext(ServletContext servletContext) {\n    Object rootContext \u003d servletContext.getAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE);\n    if (rootContext !\u003d null) {\n        if (rootContext \u003d\u003d this) {\n            throw new IllegalStateException(\"Cannot initialize context because there is already a root application context present - \" + \"check whether you have multiple ServletContextInitializers!\");\n        }\n        return;\n    }\n    Log logger \u003d LogFactory.getLog(ContextLoader.class);\n    servletContext.log(\"Initializing Spring embedded WebApplicationContext\");\n    try {\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, this);\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"Published root WebApplicationContext as ServletContext attribute with name [\" + WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE + \"]\");\n        }\n        setServletContext(servletContext);\n        if (logger.isInfoEnabled()) {\n            long elapsedTime \u003d System.currentTimeMillis() - getStartupDate();\n            logger.info(\"Root WebApplicationContext: initialization completed in \" + elapsedTime + \" ms\");\n        }\n    } catch (RuntimeException ex) {\n        logger.error(\"Context initialization failed\", ex);\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);\n        throw ex;\n    } catch (Error ex) {\n        logger.error(\"Context initialization failed\", ex);\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);\n        throw ex;\n    }\n}",
          "path": "spring-boot/src/main/java/org/springframework/boot/web/servlet/context/ServletWebServerApplicationContext.java",
          "functionStartLine": 247,
          "functionName": "prepareWebApplicationContext",
          "functionAnnotation": "",
          "functionDoc": "Prepare the {@link WebApplicationContext} with the given fully loaded\n{@link ServletContext}. This method is usually called from\n{@link ServletContextInitializer#onStartup(ServletContext)} and is similar to the\nfunctionality usually provided by a {@link ContextLoaderListener}.\n\n@param servletContext the operational servlet context\n",
          "diff": "@@ -1,30 +1,30 @@\n-protected void prepareEmbeddedWebApplicationContext(ServletContext servletContext) {\n+protected void prepareWebApplicationContext(ServletContext servletContext) {\n     Object rootContext \u003d servletContext.getAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE);\n     if (rootContext !\u003d null) {\n         if (rootContext \u003d\u003d this) {\n             throw new IllegalStateException(\"Cannot initialize context because there is already a root application context present - \" + \"check whether you have multiple ServletContextInitializers!\");\n         }\n         return;\n     }\n     Log logger \u003d LogFactory.getLog(ContextLoader.class);\n     servletContext.log(\"Initializing Spring embedded WebApplicationContext\");\n     try {\n         servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, this);\n         if (logger.isDebugEnabled()) {\n             logger.debug(\"Published root WebApplicationContext as ServletContext attribute with name [\" + WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE + \"]\");\n         }\n         setServletContext(servletContext);\n         if (logger.isInfoEnabled()) {\n             long elapsedTime \u003d System.currentTimeMillis() - getStartupDate();\n             logger.info(\"Root WebApplicationContext: initialization completed in \" + elapsedTime + \" ms\");\n         }\n     } catch (RuntimeException ex) {\n         logger.error(\"Context initialization failed\", ex);\n         servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);\n         throw ex;\n     } catch (Error ex) {\n         logger.error(\"Context initialization failed\", ex);\n         servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);\n         throw ex;\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "prepareEmbeddedWebApplicationContext",
            "newValue": "prepareWebApplicationContext"
          }
        }
      ]
    },
    "c678c1f7882ae6991994fbc6737a38e26ed11f38": {
      "type": "Ybodychange",
      "commitMessage": "Polish\n",
      "commitDate": "2014/12/11 上午5:23",
      "commitName": "c678c1f7882ae6991994fbc6737a38e26ed11f38",
      "commitAuthor": "Phillip Webb",
      "commitDateOld": "2014/8/29 上午1:06",
      "commitNameOld": "a5484e47cd8a8285e94221c502b45533c6bb272c",
      "commitAuthorOld": "Phillip Webb",
      "daysBetweenCommits": 104.18,
      "commitsBetweenForRepo": 661,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void prepareEmbeddedWebApplicationContext(ServletContext servletContext) {\n    Object rootContext \u003d servletContext.getAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE);\n    if (rootContext !\u003d null) {\n        if (rootContext \u003d\u003d this) {\n            throw new IllegalStateException(\"Cannot initialize context because there is already a root application context present - \" + \"check whether you have multiple ServletContextInitializers!\");\n        }\n        return;\n    }\n    Log logger \u003d LogFactory.getLog(ContextLoader.class);\n    servletContext.log(\"Initializing Spring embedded WebApplicationContext\");\n    try {\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, this);\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"Published root WebApplicationContext as ServletContext attribute with name [\" + WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE + \"]\");\n        }\n        setServletContext(servletContext);\n        if (logger.isInfoEnabled()) {\n            long elapsedTime \u003d System.currentTimeMillis() - getStartupDate();\n            logger.info(\"Root WebApplicationContext: initialization completed in \" + elapsedTime + \" ms\");\n        }\n    } catch (RuntimeException ex) {\n        logger.error(\"Context initialization failed\", ex);\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);\n        throw ex;\n    } catch (Error ex) {\n        logger.error(\"Context initialization failed\", ex);\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);\n        throw ex;\n    }\n}",
      "path": "spring-boot/src/main/java/org/springframework/boot/context/embedded/EmbeddedWebApplicationContext.java",
      "functionStartLine": 226,
      "functionName": "prepareEmbeddedWebApplicationContext",
      "functionAnnotation": "",
      "functionDoc": "Prepare the {@link WebApplicationContext} with the given fully loaded\n{@link ServletContext}. This method is usually called from\n{@link ServletContextInitializer#onStartup(ServletContext)} and is similar to the\nfunctionality usually provided by a {@link ContextLoaderListener}.\n\n@param servletContext the operational servlet context\n",
      "diff": "@@ -1,31 +1,30 @@\n protected void prepareEmbeddedWebApplicationContext(ServletContext servletContext) {\n     Object rootContext \u003d servletContext.getAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE);\n     if (rootContext !\u003d null) {\n         if (rootContext \u003d\u003d this) {\n             throw new IllegalStateException(\"Cannot initialize context because there is already a root application context present - \" + \"check whether you have multiple ServletContextInitializers!\");\n-        } else {\n-            return;\n         }\n+        return;\n     }\n     Log logger \u003d LogFactory.getLog(ContextLoader.class);\n     servletContext.log(\"Initializing Spring embedded WebApplicationContext\");\n     try {\n         servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, this);\n         if (logger.isDebugEnabled()) {\n             logger.debug(\"Published root WebApplicationContext as ServletContext attribute with name [\" + WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE + \"]\");\n         }\n         setServletContext(servletContext);\n         if (logger.isInfoEnabled()) {\n             long elapsedTime \u003d System.currentTimeMillis() - getStartupDate();\n             logger.info(\"Root WebApplicationContext: initialization completed in \" + elapsedTime + \" ms\");\n         }\n     } catch (RuntimeException ex) {\n         logger.error(\"Context initialization failed\", ex);\n         servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);\n         throw ex;\n     } catch (Error ex) {\n         logger.error(\"Context initialization failed\", ex);\n         servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);\n         throw ex;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "883fd9162f375e5e4f4d03eb818d223108eeb560": {
      "type": "Ybodychange",
      "commitMessage": "Polish\n",
      "commitDate": "2013/11/16 下午4:08",
      "commitName": "883fd9162f375e5e4f4d03eb818d223108eeb560",
      "commitAuthor": "Phillip Webb",
      "commitDateOld": "2013/11/6 上午9:00",
      "commitNameOld": "4c757001641cef56fbc75a2d8b0ca0bb2ce6a1fa",
      "commitAuthorOld": "Phillip Webb",
      "daysBetweenCommits": 10.3,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void prepareEmbeddedWebApplicationContext(ServletContext servletContext) {\n    Object rootContext \u003d servletContext.getAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE);\n    if (rootContext !\u003d null) {\n        if (rootContext \u003d\u003d this) {\n            throw new IllegalStateException(\"Cannot initialize context because there is already a root application context present - \" + \"check whether you have multiple ServletContextInitializers!\");\n        } else {\n            return;\n        }\n    }\n    Log logger \u003d LogFactory.getLog(ContextLoader.class);\n    servletContext.log(\"Initializing Spring embedded WebApplicationContext\");\n    try {\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, this);\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"Published root WebApplicationContext as ServletContext attribute with name [\" + WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE + \"]\");\n        }\n        setServletContext(servletContext);\n        if (logger.isInfoEnabled()) {\n            long elapsedTime \u003d System.currentTimeMillis() - getStartupDate();\n            logger.info(\"Root WebApplicationContext: initialization completed in \" + elapsedTime + \" ms\");\n        }\n    } catch (RuntimeException ex) {\n        logger.error(\"Context initialization failed\", ex);\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);\n        throw ex;\n    } catch (Error ex) {\n        logger.error(\"Context initialization failed\", ex);\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);\n        throw ex;\n    }\n}",
      "path": "spring-boot/src/main/java/org/springframework/boot/context/embedded/EmbeddedWebApplicationContext.java",
      "functionStartLine": 307,
      "functionName": "prepareEmbeddedWebApplicationContext",
      "functionAnnotation": "",
      "functionDoc": "Prepare the {@link WebApplicationContext} with the given fully loaded\n{@link ServletContext}. This method is usually called from\n{@link ServletContextInitializer#onStartup(ServletContext)} and is similar to the\nfunctionality usually provided by a {@link ContextLoaderListener}.\n\n@param servletContext the operational servlet context\n",
      "diff": "@@ -1,31 +1,31 @@\n protected void prepareEmbeddedWebApplicationContext(ServletContext servletContext) {\n     Object rootContext \u003d servletContext.getAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE);\n     if (rootContext !\u003d null) {\n         if (rootContext \u003d\u003d this) {\n             throw new IllegalStateException(\"Cannot initialize context because there is already a root application context present - \" + \"check whether you have multiple ServletContextInitializers!\");\n         } else {\n             return;\n         }\n     }\n     Log logger \u003d LogFactory.getLog(ContextLoader.class);\n     servletContext.log(\"Initializing Spring embedded WebApplicationContext\");\n     try {\n         servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, this);\n         if (logger.isDebugEnabled()) {\n             logger.debug(\"Published root WebApplicationContext as ServletContext attribute with name [\" + WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE + \"]\");\n         }\n         setServletContext(servletContext);\n         if (logger.isInfoEnabled()) {\n             long elapsedTime \u003d System.currentTimeMillis() - getStartupDate();\n             logger.info(\"Root WebApplicationContext: initialization completed in \" + elapsedTime + \" ms\");\n         }\n     } catch (RuntimeException ex) {\n         logger.error(\"Context initialization failed\", ex);\n         servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);\n         throw ex;\n-    } catch (Error err) {\n-        logger.error(\"Context initialization failed\", err);\n-        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, err);\n-        throw err;\n+    } catch (Error ex) {\n+        logger.error(\"Context initialization failed\", ex);\n+        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);\n+        throw ex;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5b1503d07de339e726134ee3d5ec73ac23064e9e": {
      "type": "Ybodychange",
      "commitMessage": "Extract DispatcherServletAutoConfiguration so it can be used independently\n",
      "commitDate": "2013/10/2 下午6:39",
      "commitName": "5b1503d07de339e726134ee3d5ec73ac23064e9e",
      "commitAuthor": "Dave Syer",
      "commitDateOld": "2013/9/20 下午11:38",
      "commitNameOld": "3c4f1a7a6f25f9b741826411fdb12fd37acd1919",
      "commitAuthorOld": "Dave Syer",
      "daysBetweenCommits": 11.79,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void prepareEmbeddedWebApplicationContext(ServletContext servletContext) {\n    Object rootContext \u003d servletContext.getAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE);\n    if (rootContext !\u003d null) {\n        if (rootContext \u003d\u003d this) {\n            throw new IllegalStateException(\"Cannot initialize context because there is already a root application context present - \" + \"check whether you have multiple ServletContextInitializers!\");\n        } else {\n            return;\n        }\n    }\n    Log logger \u003d LogFactory.getLog(ContextLoader.class);\n    servletContext.log(\"Initializing Spring embedded WebApplicationContext\");\n    try {\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, this);\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"Published root WebApplicationContext as ServletContext attribute with name [\" + WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE + \"]\");\n        }\n        setServletContext(servletContext);\n        if (logger.isInfoEnabled()) {\n            long elapsedTime \u003d System.currentTimeMillis() - getStartupDate();\n            logger.info(\"Root WebApplicationContext: initialization completed in \" + elapsedTime + \" ms\");\n        }\n    } catch (RuntimeException ex) {\n        logger.error(\"Context initialization failed\", ex);\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);\n        throw ex;\n    } catch (Error err) {\n        logger.error(\"Context initialization failed\", err);\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, err);\n        throw err;\n    }\n}",
      "path": "spring-boot/src/main/java/org/springframework/boot/context/embedded/EmbeddedWebApplicationContext.java",
      "functionStartLine": 300,
      "functionName": "prepareEmbeddedWebApplicationContext",
      "functionAnnotation": "",
      "functionDoc": "Prepare the {@link WebApplicationContext} with the given fully loaded\n{@link ServletContext}. This method is usually called from\n{@link ServletContextInitializer#onStartup(ServletContext)} and is similar to the\nfunctionality usually provided by a {@link ContextLoaderListener}.\n\n@param servletContext the operational servlet context\n",
      "diff": "@@ -1,26 +1,31 @@\n protected void prepareEmbeddedWebApplicationContext(ServletContext servletContext) {\n-    if (servletContext.getAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE) !\u003d null) {\n-        throw new IllegalStateException(\"Cannot initialize context because there is already a root application context present - \" + \"check whether you have multiple ServletContextInitializer!\");\n+    Object rootContext \u003d servletContext.getAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE);\n+    if (rootContext !\u003d null) {\n+        if (rootContext \u003d\u003d this) {\n+            throw new IllegalStateException(\"Cannot initialize context because there is already a root application context present - \" + \"check whether you have multiple ServletContextInitializers!\");\n+        } else {\n+            return;\n+        }\n     }\n     Log logger \u003d LogFactory.getLog(ContextLoader.class);\n     servletContext.log(\"Initializing Spring embedded WebApplicationContext\");\n     try {\n         servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, this);\n         if (logger.isDebugEnabled()) {\n             logger.debug(\"Published root WebApplicationContext as ServletContext attribute with name [\" + WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE + \"]\");\n         }\n         setServletContext(servletContext);\n         if (logger.isInfoEnabled()) {\n             long elapsedTime \u003d System.currentTimeMillis() - getStartupDate();\n             logger.info(\"Root WebApplicationContext: initialization completed in \" + elapsedTime + \" ms\");\n         }\n     } catch (RuntimeException ex) {\n         logger.error(\"Context initialization failed\", ex);\n         servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);\n         throw ex;\n     } catch (Error err) {\n         logger.error(\"Context initialization failed\", err);\n         servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, err);\n         throw err;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b665a2bb1d898f251da348beba8b71b3ac34497f": {
      "type": "Ymovefromfile",
      "commitMessage": "Renamed packages\n\nIssue: #54095231\n",
      "commitDate": "2013/7/27 上午5:11",
      "commitName": "b665a2bb1d898f251da348beba8b71b3ac34497f",
      "commitAuthor": "Phillip Webb",
      "commitDateOld": "2013/7/27 上午3:31",
      "commitNameOld": "3f2bb03fb8ebc6a44a7ca3add21b53b906e74424",
      "commitAuthorOld": "Phillip Webb",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void prepareEmbeddedWebApplicationContext(ServletContext servletContext) {\n    if (servletContext.getAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE) !\u003d null) {\n        throw new IllegalStateException(\"Cannot initialize context because there is already a root application context present - \" + \"check whether you have multiple ServletContextInitializer!\");\n    }\n    Log logger \u003d LogFactory.getLog(ContextLoader.class);\n    servletContext.log(\"Initializing Spring embedded WebApplicationContext\");\n    try {\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, this);\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"Published root WebApplicationContext as ServletContext attribute with name [\" + WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE + \"]\");\n        }\n        setServletContext(servletContext);\n        if (logger.isInfoEnabled()) {\n            long elapsedTime \u003d System.currentTimeMillis() - getStartupDate();\n            logger.info(\"Root WebApplicationContext: initialization completed in \" + elapsedTime + \" ms\");\n        }\n    } catch (RuntimeException ex) {\n        logger.error(\"Context initialization failed\", ex);\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);\n        throw ex;\n    } catch (Error err) {\n        logger.error(\"Context initialization failed\", err);\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, err);\n        throw err;\n    }\n}",
      "path": "spring-boot/src/main/java/org/springframework/boot/context/embedded/EmbeddedWebApplicationContext.java",
      "functionStartLine": 265,
      "functionName": "prepareEmbeddedWebApplicationContext",
      "functionAnnotation": "",
      "functionDoc": "Prepare the {@link WebApplicationContext} with the given fully loaded\n{@link ServletContext}. This method is usually called from\n{@link ServletContextInitializer#onStartup(ServletContext)} and is similar to the\nfunctionality usually provided by a {@link ContextLoaderListener}.\n\n@param servletContext the operational servlet context\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "spring-boot/src/main/java/org/springframework/boot/strap/context/embedded/EmbeddedWebApplicationContext.java",
        "newPath": "spring-boot/src/main/java/org/springframework/boot/context/embedded/EmbeddedWebApplicationContext.java",
        "oldMethodName": "prepareEmbeddedWebApplicationContext",
        "newMethodName": "prepareEmbeddedWebApplicationContext"
      }
    },
    "3f2bb03fb8ebc6a44a7ca3add21b53b906e74424": {
      "type": "Yfilerename",
      "commitMessage": "Renamed some projects and polish POMs\n\nIssue: #54095231\n",
      "commitDate": "2013/7/27 上午3:31",
      "commitName": "3f2bb03fb8ebc6a44a7ca3add21b53b906e74424",
      "commitAuthor": "Phillip Webb",
      "commitDateOld": "2013/7/27 上午12:54",
      "commitNameOld": "06ddd92438d7d2e64f2c54da5932efbd4b47f1b9",
      "commitAuthorOld": "Dave Syer",
      "daysBetweenCommits": 0.11,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void prepareEmbeddedWebApplicationContext(ServletContext servletContext) {\n    if (servletContext.getAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE) !\u003d null) {\n        throw new IllegalStateException(\"Cannot initialize context because there is already a root application context present - \" + \"check whether you have multiple ServletContextInitializer!\");\n    }\n    Log logger \u003d LogFactory.getLog(ContextLoader.class);\n    servletContext.log(\"Initializing Spring embedded WebApplicationContext\");\n    try {\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, this);\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"Published root WebApplicationContext as ServletContext attribute with name [\" + WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE + \"]\");\n        }\n        setServletContext(servletContext);\n        if (logger.isInfoEnabled()) {\n            long elapsedTime \u003d System.currentTimeMillis() - getStartupDate();\n            logger.info(\"Root WebApplicationContext: initialization completed in \" + elapsedTime + \" ms\");\n        }\n    } catch (RuntimeException ex) {\n        logger.error(\"Context initialization failed\", ex);\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);\n        throw ex;\n    } catch (Error err) {\n        logger.error(\"Context initialization failed\", err);\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, err);\n        throw err;\n    }\n}",
      "path": "spring-boot/src/main/java/org/springframework/boot/strap/context/embedded/EmbeddedWebApplicationContext.java",
      "functionStartLine": 265,
      "functionName": "prepareEmbeddedWebApplicationContext",
      "functionAnnotation": "",
      "functionDoc": "Prepare the {@link WebApplicationContext} with the given fully loaded\n{@link ServletContext}. This method is usually called from\n{@link ServletContextInitializer#onStartup(ServletContext)} and is similar to the\nfunctionality usually provided by a {@link ContextLoaderListener}.\n\n@param servletContext the operational servlet context\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "spring-boot-strap/src/main/java/org/springframework/boot/strap/context/embedded/EmbeddedWebApplicationContext.java",
        "newPath": "spring-boot/src/main/java/org/springframework/boot/strap/context/embedded/EmbeddedWebApplicationContext.java"
      }
    },
    "2098e23fca3858e218f055373665fb1cf2188fdc": {
      "type": "Ymovefromfile",
      "commitMessage": "Change package names zero-\u003eboot\n\n* actuator -\u003e boot-ops\n* cli -\u003e boot-cli\n* launcher -\u003e boot-load\n* autoconfig -\u003e boot-config\n* bootstrap -\u003e boot-strap\n* starters -\u003e boot-up\n\n[#54095231] [bs-253] Refactor Zero-\u003eBoot\n",
      "commitDate": "2013/7/26 下午9:13",
      "commitName": "2098e23fca3858e218f055373665fb1cf2188fdc",
      "commitAuthor": "Dave Syer",
      "commitDateOld": "2013/7/26 下午6:11",
      "commitNameOld": "b2873fbc2d55c007d7fbc882bbcff701173b1887",
      "commitAuthorOld": "Dave Syer",
      "daysBetweenCommits": 0.13,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void prepareEmbeddedWebApplicationContext(ServletContext servletContext) {\n    if (servletContext.getAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE) !\u003d null) {\n        throw new IllegalStateException(\"Cannot initialize context because there is already a root application context present - \" + \"check whether you have multiple ServletContextInitializer!\");\n    }\n    Log logger \u003d LogFactory.getLog(ContextLoader.class);\n    servletContext.log(\"Initializing Spring embedded WebApplicationContext\");\n    try {\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, this);\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"Published root WebApplicationContext as ServletContext attribute with name [\" + WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE + \"]\");\n        }\n        setServletContext(servletContext);\n        if (logger.isInfoEnabled()) {\n            long elapsedTime \u003d System.currentTimeMillis() - getStartupDate();\n            logger.info(\"Root WebApplicationContext: initialization completed in \" + elapsedTime + \" ms\");\n        }\n    } catch (RuntimeException ex) {\n        logger.error(\"Context initialization failed\", ex);\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);\n        throw ex;\n    } catch (Error err) {\n        logger.error(\"Context initialization failed\", err);\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, err);\n        throw err;\n    }\n}",
      "path": "spring-boot-strap/src/main/java/org/springframework/boot/strap/context/embedded/EmbeddedWebApplicationContext.java",
      "functionStartLine": 265,
      "functionName": "prepareEmbeddedWebApplicationContext",
      "functionAnnotation": "",
      "functionDoc": "Prepare the {@link WebApplicationContext} with the given fully loaded\n{@link ServletContext}. This method is usually called from\n{@link ServletContextInitializer#onStartup(ServletContext)} and is similar to the\nfunctionality usually provided by a {@link ContextLoaderListener}.\n\n@param servletContext the operational servlet context\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "spring-bootstrap/src/main/java/org/springframework/bootstrap/context/embedded/EmbeddedWebApplicationContext.java",
        "newPath": "spring-boot-strap/src/main/java/org/springframework/boot/strap/context/embedded/EmbeddedWebApplicationContext.java",
        "oldMethodName": "prepareEmbeddedWebApplicationContext",
        "newMethodName": "prepareEmbeddedWebApplicationContext"
      }
    },
    "0b863611d9563d6a41ebe219925e68be407e501a": {
      "type": "Ymovefromfile",
      "commitMessage": "Package restructure\n",
      "commitDate": "2013/7/9 上午4:42",
      "commitName": "0b863611d9563d6a41ebe219925e68be407e501a",
      "commitAuthor": "Phillip Webb",
      "commitDateOld": "2013/7/9 上午4:42",
      "commitNameOld": "cd51f357a3cfae04954ac6dce5134c3e2a6ad241",
      "commitAuthorOld": "Phillip Webb",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void prepareEmbeddedWebApplicationContext(ServletContext servletContext) {\n    if (servletContext.getAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE) !\u003d null) {\n        throw new IllegalStateException(\"Cannot initialize context because there is already a root application context present - \" + \"check whether you have multiple ServletContextInitializer!\");\n    }\n    Log logger \u003d LogFactory.getLog(ContextLoader.class);\n    servletContext.log(\"Initializing Spring embedded WebApplicationContext\");\n    try {\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, this);\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"Published root WebApplicationContext as ServletContext attribute with name [\" + WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE + \"]\");\n        }\n        setServletContext(servletContext);\n        if (logger.isInfoEnabled()) {\n            long elapsedTime \u003d System.currentTimeMillis() - getStartupDate();\n            logger.info(\"Root WebApplicationContext: initialization completed in \" + elapsedTime + \" ms\");\n        }\n    } catch (RuntimeException ex) {\n        logger.error(\"Context initialization failed\", ex);\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);\n        throw ex;\n    } catch (Error err) {\n        logger.error(\"Context initialization failed\", err);\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, err);\n        throw err;\n    }\n}",
      "path": "spring-bootstrap/src/main/java/org/springframework/bootstrap/context/embedded/EmbeddedWebApplicationContext.java",
      "functionStartLine": 259,
      "functionName": "prepareEmbeddedWebApplicationContext",
      "functionAnnotation": "",
      "functionDoc": "Prepare the {@link WebApplicationContext} with the given fully loaded\n{@link ServletContext}. This method is usually called from\n{@link ServletContextInitializer#onStartup(ServletContext)} and is similar to the\nfunctionality usually provided by a {@link ContextLoaderListener}.\n\n@param servletContext the operational servlet context\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "spring-bootstrap/src/main/java/org/springframework/zero/context/embedded/EmbeddedWebApplicationContext.java",
        "newPath": "spring-bootstrap/src/main/java/org/springframework/bootstrap/context/embedded/EmbeddedWebApplicationContext.java",
        "oldMethodName": "prepareEmbeddedWebApplicationContext",
        "newMethodName": "prepareEmbeddedWebApplicationContext"
      }
    },
    "cd51f357a3cfae04954ac6dce5134c3e2a6ad241": {
      "type": "Yfilerename",
      "commitMessage": "Further maven module restructure\n",
      "commitDate": "2013/7/9 上午4:42",
      "commitName": "cd51f357a3cfae04954ac6dce5134c3e2a6ad241",
      "commitAuthor": "Phillip Webb",
      "commitDateOld": "2013/7/9 上午4:42",
      "commitNameOld": "9fde0a3715d00c1a3fc968b856db036ca4a8845c",
      "commitAuthorOld": "Phillip Webb",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void prepareEmbeddedWebApplicationContext(ServletContext servletContext) {\n    if (servletContext.getAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE) !\u003d null) {\n        throw new IllegalStateException(\"Cannot initialize context because there is already a root application context present - \" + \"check whether you have multiple ServletContextInitializer!\");\n    }\n    Log logger \u003d LogFactory.getLog(ContextLoader.class);\n    servletContext.log(\"Initializing Spring embedded WebApplicationContext\");\n    try {\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, this);\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"Published root WebApplicationContext as ServletContext attribute with name [\" + WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE + \"]\");\n        }\n        setServletContext(servletContext);\n        if (logger.isInfoEnabled()) {\n            long elapsedTime \u003d System.currentTimeMillis() - getStartupDate();\n            logger.info(\"Root WebApplicationContext: initialization completed in \" + elapsedTime + \" ms\");\n        }\n    } catch (RuntimeException ex) {\n        logger.error(\"Context initialization failed\", ex);\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);\n        throw ex;\n    } catch (Error err) {\n        logger.error(\"Context initialization failed\", err);\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, err);\n        throw err;\n    }\n}",
      "path": "spring-bootstrap/src/main/java/org/springframework/zero/context/embedded/EmbeddedWebApplicationContext.java",
      "functionStartLine": 259,
      "functionName": "prepareEmbeddedWebApplicationContext",
      "functionAnnotation": "",
      "functionDoc": "Prepare the {@link WebApplicationContext} with the given fully loaded\n{@link ServletContext}. This method is usually called from\n{@link ServletContextInitializer#onStartup(ServletContext)} and is similar to the\nfunctionality usually provided by a {@link ContextLoaderListener}.\n\n@param servletContext the operational servlet context\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "spring-zero-core/src/main/java/org/springframework/zero/context/embedded/EmbeddedWebApplicationContext.java",
        "newPath": "spring-bootstrap/src/main/java/org/springframework/zero/context/embedded/EmbeddedWebApplicationContext.java"
      }
    },
    "261955c50b8fb44311324d2188bf6e3f92237e0c": {
      "type": "Ymovefromfile",
      "commitMessage": "Restructure \u0027bootstrap\u0027 to use \u0027zero\u0027\n",
      "commitDate": "2013/7/9 上午4:42",
      "commitName": "261955c50b8fb44311324d2188bf6e3f92237e0c",
      "commitAuthor": "Phillip Webb",
      "commitDateOld": "2013/7/9 上午4:42",
      "commitNameOld": "d039822064b3ed1c16973428fc4b477f8b86048e",
      "commitAuthorOld": "Phillip Webb",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void prepareEmbeddedWebApplicationContext(ServletContext servletContext) {\n    if (servletContext.getAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE) !\u003d null) {\n        throw new IllegalStateException(\"Cannot initialize context because there is already a root application context present - \" + \"check whether you have multiple ServletContextInitializer!\");\n    }\n    Log logger \u003d LogFactory.getLog(ContextLoader.class);\n    servletContext.log(\"Initializing Spring embedded WebApplicationContext\");\n    try {\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, this);\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"Published root WebApplicationContext as ServletContext attribute with name [\" + WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE + \"]\");\n        }\n        setServletContext(servletContext);\n        if (logger.isInfoEnabled()) {\n            long elapsedTime \u003d System.currentTimeMillis() - getStartupDate();\n            logger.info(\"Root WebApplicationContext: initialization completed in \" + elapsedTime + \" ms\");\n        }\n    } catch (RuntimeException ex) {\n        logger.error(\"Context initialization failed\", ex);\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);\n        throw ex;\n    } catch (Error err) {\n        logger.error(\"Context initialization failed\", err);\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, err);\n        throw err;\n    }\n}",
      "path": "spring-zero-core/src/main/java/org/springframework/zero/context/embedded/EmbeddedWebApplicationContext.java",
      "functionStartLine": 260,
      "functionName": "prepareEmbeddedWebApplicationContext",
      "functionAnnotation": "",
      "functionDoc": "Prepare the {@link WebApplicationContext} with the given fully loaded\n{@link ServletContext}. This method is usually called from\n{@link ServletContextInitializer#onStartup(ServletContext)} and is similar to the\nfunctionality usually provided by a {@link ContextLoaderListener}.\n\n@param servletContext the operational servlet context\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "spring-zero-core/src/main/java/org/springframework/bootstrap/context/embedded/EmbeddedWebApplicationContext.java",
        "newPath": "spring-zero-core/src/main/java/org/springframework/zero/context/embedded/EmbeddedWebApplicationContext.java",
        "oldMethodName": "prepareEmbeddedWebApplicationContext",
        "newMethodName": "prepareEmbeddedWebApplicationContext"
      }
    },
    "40bf33487177a26e578486942218449658c5e715": {
      "type": "Yfilerename",
      "commitMessage": "Restructure projects layout\n",
      "commitDate": "2013/7/9 上午4:42",
      "commitName": "40bf33487177a26e578486942218449658c5e715",
      "commitAuthor": "Phillip Webb",
      "commitDateOld": "2013/7/8 下午7:32",
      "commitNameOld": "3996353e3513c86ca74f983f09c8491712ca48cf",
      "commitAuthorOld": "Dave Syer",
      "daysBetweenCommits": 0.38,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void prepareEmbeddedWebApplicationContext(ServletContext servletContext) {\n    if (servletContext.getAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE) !\u003d null) {\n        throw new IllegalStateException(\"Cannot initialize context because there is already a root application context present - \" + \"check whether you have multiple ServletContextInitializer!\");\n    }\n    Log logger \u003d LogFactory.getLog(ContextLoader.class);\n    servletContext.log(\"Initializing Spring embedded WebApplicationContext\");\n    try {\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, this);\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"Published root WebApplicationContext as ServletContext attribute with name [\" + WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE + \"]\");\n        }\n        setServletContext(servletContext);\n        if (logger.isInfoEnabled()) {\n            long elapsedTime \u003d System.currentTimeMillis() - getStartupDate();\n            logger.info(\"Root WebApplicationContext: initialization completed in \" + elapsedTime + \" ms\");\n        }\n    } catch (RuntimeException ex) {\n        logger.error(\"Context initialization failed\", ex);\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);\n        throw ex;\n    } catch (Error err) {\n        logger.error(\"Context initialization failed\", err);\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, err);\n        throw err;\n    }\n}",
      "path": "spring-zero-core/src/main/java/org/springframework/bootstrap/context/embedded/EmbeddedWebApplicationContext.java",
      "functionStartLine": 260,
      "functionName": "prepareEmbeddedWebApplicationContext",
      "functionAnnotation": "",
      "functionDoc": "Prepare the {@link WebApplicationContext} with the given fully loaded\n{@link ServletContext}. This method is usually called from\n{@link ServletContextInitializer#onStartup(ServletContext)} and is similar to the\nfunctionality usually provided by a {@link ContextLoaderListener}.\n\n@param servletContext the operational servlet context\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "spring-bootstrap/src/main/java/org/springframework/bootstrap/context/embedded/EmbeddedWebApplicationContext.java",
        "newPath": "spring-zero-core/src/main/java/org/springframework/bootstrap/context/embedded/EmbeddedWebApplicationContext.java"
      }
    },
    "fb6b2244707dd5dfad12d62cb6a3c396555270d1": {
      "type": "Yintroduced",
      "commitMessage": "Fast forward existing prototype work\n",
      "commitDate": "2013/4/24 下午5:02",
      "commitName": "fb6b2244707dd5dfad12d62cb6a3c396555270d1",
      "commitAuthor": "Dave Syer",
      "diff": "@@ -0,0 +1,26 @@\n+protected void prepareEmbeddedWebApplicationContext(ServletContext servletContext) {\n+    if (servletContext.getAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE) !\u003d null) {\n+        throw new IllegalStateException(\"Cannot initialize context because there is already a root application context present - \" + \"check whether you have multiple ServletContextInitializer!\");\n+    }\n+    Log logger \u003d LogFactory.getLog(ContextLoader.class);\n+    servletContext.log(\"Initializing Spring embedded WebApplicationContext\");\n+    try {\n+        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, this);\n+        if (logger.isDebugEnabled()) {\n+            logger.debug(\"Published root WebApplicationContext as ServletContext attribute with name [\" + WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE + \"]\");\n+        }\n+        setServletContext(servletContext);\n+        if (logger.isInfoEnabled()) {\n+            long elapsedTime \u003d System.currentTimeMillis() - getStartupDate();\n+            logger.info(\"Root WebApplicationContext: initialization completed in \" + elapsedTime + \" ms\");\n+        }\n+    } catch (RuntimeException ex) {\n+        logger.error(\"Context initialization failed\", ex);\n+        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);\n+        throw ex;\n+    } catch (Error err) {\n+        logger.error(\"Context initialization failed\", err);\n+        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, err);\n+        throw err;\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected void prepareEmbeddedWebApplicationContext(ServletContext servletContext) {\n    if (servletContext.getAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE) !\u003d null) {\n        throw new IllegalStateException(\"Cannot initialize context because there is already a root application context present - \" + \"check whether you have multiple ServletContextInitializer!\");\n    }\n    Log logger \u003d LogFactory.getLog(ContextLoader.class);\n    servletContext.log(\"Initializing Spring embedded WebApplicationContext\");\n    try {\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, this);\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"Published root WebApplicationContext as ServletContext attribute with name [\" + WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE + \"]\");\n        }\n        setServletContext(servletContext);\n        if (logger.isInfoEnabled()) {\n            long elapsedTime \u003d System.currentTimeMillis() - getStartupDate();\n            logger.info(\"Root WebApplicationContext: initialization completed in \" + elapsedTime + \" ms\");\n        }\n    } catch (RuntimeException ex) {\n        logger.error(\"Context initialization failed\", ex);\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);\n        throw ex;\n    } catch (Error err) {\n        logger.error(\"Context initialization failed\", err);\n        servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, err);\n        throw err;\n    }\n}",
      "path": "spring-bootstrap/src/main/java/org/springframework/bootstrap/context/embedded/EmbeddedWebApplicationContext.java",
      "functionStartLine": 225,
      "functionName": "prepareEmbeddedWebApplicationContext",
      "functionAnnotation": "",
      "functionDoc": "Prepare the {@link WebApplicationContext} with the given fully loaded\n{@link ServletContext}. This method is usually called from\n{@link ServletContextInitializer#onStartup(ServletContext)} and is similar to the\nfunctionality usually provided by a {@link ContextLoaderListener}.\n\n@param servletContext the operational servlet context\n"
    }
  }
}