{
  "origin": "codeshovel",
  "repositoryName": "pmd",
  "repositoryPath": "/Users/franky/Documents/Homework/毕业设计/testcase/pmd/.git",
  "startCommitName": "d528dcd5d45582229ab3410deb7c40b2143d015d",
  "sourceFileName": "ClassTypeResolver.java",
  "functionName": "visit",
  "functionId": "visit___node-ASTCompilationUnit__data-Object",
  "sourceFilePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 186,
  "functionEndLine": 214,
  "numCommitsSeen": 145,
  "timeTaken": 4020,
  "changeHistory": [
    "30afff46c65d17dd4974f4831b1ea0f0232bdf75",
    "2146a077ebbb902cd1460464a082bbfaacd2f4ce",
    "800cfa6e484e0ae704b4f2856ce7e5aa4b66509e",
    "fd2dcddc447c8ae88fe5b1df9fca0326017309f8",
    "1f6421ec8800fc0aebb2f46ccf2bac2b563862d7",
    "5f35ded04bae4c4a4446f78b7a6288f8dfa0472c",
    "ad88b4784d78bf1698fac72cad3825144caf6863",
    "b172c19de7f487e36e7185aaa41ea34c0734e130",
    "75daf38ed303bcdbfe1034fd3a070a4306402c2d",
    "3aedf63a96d787f626b2876b134f81831db17117",
    "c1c74ad02bfd383c4c29b608e524c9d8c2056ca2",
    "de9c2b0e3ae70f755a4746debac2c01636204af1",
    "ca6eda7e61fe4daf90682014e11fe1507fd331ed",
    "c595c61edd4259c73748baab5bf0c952eda9a374",
    "40501042ce13fce37eb69fbcf2ec34642133aeaf",
    "a708221106c1084c8aef235b14c39ad0f2c6bb1a",
    "1b4aef4e56a27d4f13aed630d4e91cc8d36d2066",
    "3bbc6575ef1ade840f1bfa7b9d9090a20a4e1394",
    "ad46a291ea19b057a88588db2c80f50374599b6a",
    "8812185444622ed8606bbcf79aed12477786a877",
    "33a6d45cd1953696b60a2e1abbb92738bc136ffc",
    "6215d97b9e136a46f58f13dd30c65690fef4a28d"
  ],
  "changeHistoryShort": {
    "30afff46c65d17dd4974f4831b1ea0f0232bdf75": "Ybodychange",
    "2146a077ebbb902cd1460464a082bbfaacd2f4ce": "Ybodychange",
    "800cfa6e484e0ae704b4f2856ce7e5aa4b66509e": "Ybodychange",
    "fd2dcddc447c8ae88fe5b1df9fca0326017309f8": "Ybodychange",
    "1f6421ec8800fc0aebb2f46ccf2bac2b563862d7": "Ybodychange",
    "5f35ded04bae4c4a4446f78b7a6288f8dfa0472c": "Ybodychange",
    "ad88b4784d78bf1698fac72cad3825144caf6863": "Yfilerename",
    "b172c19de7f487e36e7185aaa41ea34c0734e130": "Ybodychange",
    "75daf38ed303bcdbfe1034fd3a070a4306402c2d": "Yfilerename",
    "3aedf63a96d787f626b2876b134f81831db17117": "Ybodychange",
    "c1c74ad02bfd383c4c29b608e524c9d8c2056ca2": "Ybodychange",
    "de9c2b0e3ae70f755a4746debac2c01636204af1": "Yannotationchange",
    "ca6eda7e61fe4daf90682014e11fe1507fd331ed": "Yfilerename",
    "c595c61edd4259c73748baab5bf0c952eda9a374": "Ybodychange",
    "40501042ce13fce37eb69fbcf2ec34642133aeaf": "Ybodychange",
    "a708221106c1084c8aef235b14c39ad0f2c6bb1a": "Ybodychange",
    "1b4aef4e56a27d4f13aed630d4e91cc8d36d2066": "Ybodychange",
    "3bbc6575ef1ade840f1bfa7b9d9090a20a4e1394": "Ybodychange",
    "ad46a291ea19b057a88588db2c80f50374599b6a": "Ybodychange",
    "8812185444622ed8606bbcf79aed12477786a877": "Ybodychange",
    "33a6d45cd1953696b60a2e1abbb92738bc136ffc": "Ybodychange",
    "6215d97b9e136a46f58f13dd30c65690fef4a28d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "30afff46c65d17dd4974f4831b1ea0f0232bdf75": {
      "type": "Ybodychange",
      "commitMessage": "[java] Avoid a NPE in Type Resolution\n\n - If a class extends a class that references / extends a missing class,\nit\u0027s possible for the `NoClassDefFoundError` to only rise once we call\n`isAnonymousClass()` on the `Class`.\n - For consistency with missing classes, we set the type to null.\n - Logging such missing classes is still pending #194\n",
      "commitDate": "2018/3/4 下午2:46",
      "commitName": "30afff46c65d17dd4974f4831b1ea0f0232bdf75",
      "commitAuthor": "Juan Martín Sotuyo Dodero",
      "commitDateOld": "2017/12/31 上午11:48",
      "commitNameOld": "729d77614f880223850bb7982629f0b7467484d1",
      "commitAuthorOld": "Juan Martín Sotuyo Dodero",
      "daysBetweenCommits": 63.12,
      "commitsBetweenForRepo": 177,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic Object visit(ASTCompilationUnit node, Object data) {\n    String className \u003d null;\n    try {\n        currentAcu \u003d node;\n        importedOnDemand \u003d new ArrayList\u003c\u003e();\n        importedClasses \u003d new HashMap\u003c\u003e();\n        staticFieldImageToTypeDef \u003d new HashMap\u003c\u003e();\n        staticNamesToClasses \u003d new HashMap\u003c\u003e();\n        importOnDemandStaticClasses \u003d new ArrayList\u003c\u003e();\n        className \u003d getClassName(node);\n        if (className !\u003d null) {\n            populateClassName(node, className);\n        }\n    } catch (ClassNotFoundException | NoClassDefFoundError e) {\n        if (LOG.isLoggable(Level.FINE)) {\n            LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e);\n        }\n    } catch (LinkageError e) {\n        if (LOG.isLoggable(Level.WARNING)) {\n            LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e);\n        }\n    } finally {\n        populateImports(node);\n    }\n    return super.visit(node, data);\n}",
      "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver.java",
      "functionStartLine": 191,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,31 +1,27 @@\n @Override\n public Object visit(ASTCompilationUnit node, Object data) {\n     String className \u003d null;\n     try {\n         currentAcu \u003d node;\n         importedOnDemand \u003d new ArrayList\u003c\u003e();\n         importedClasses \u003d new HashMap\u003c\u003e();\n         staticFieldImageToTypeDef \u003d new HashMap\u003c\u003e();\n         staticNamesToClasses \u003d new HashMap\u003c\u003e();\n         importOnDemandStaticClasses \u003d new ArrayList\u003c\u003e();\n         className \u003d getClassName(node);\n         if (className !\u003d null) {\n             populateClassName(node, className);\n         }\n-    } catch (ClassNotFoundException e) {\n-        if (LOG.isLoggable(Level.FINE)) {\n-            LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e);\n-        }\n-    } catch (NoClassDefFoundError e) {\n+    } catch (ClassNotFoundException | NoClassDefFoundError e) {\n         if (LOG.isLoggable(Level.FINE)) {\n             LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e);\n         }\n     } catch (LinkageError e) {\n         if (LOG.isLoggable(Level.WARNING)) {\n             LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e);\n         }\n     } finally {\n         populateImports(node);\n     }\n     return super.visit(node, data);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2146a077ebbb902cd1460464a082bbfaacd2f4ce": {
      "type": "Ybodychange",
      "commitMessage": "Java, typeres: add static method resolution\n",
      "commitDate": "2017/7/25 上午1:38",
      "commitName": "2146a077ebbb902cd1460464a082bbfaacd2f4ce",
      "commitAuthor": "Bendegúz Nagy",
      "commitDateOld": "2017/7/21 下午11:47",
      "commitNameOld": "98172a26fee929ca7605a44f92f754acef5c3b3a",
      "commitAuthorOld": "Juan Martín Sotuyo Dodero",
      "daysBetweenCommits": 3.08,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic Object visit(ASTCompilationUnit node, Object data) {\n    String className \u003d null;\n    try {\n        currentAcu \u003d node;\n        importedOnDemand \u003d new ArrayList\u003c\u003e();\n        importedClasses \u003d new HashMap\u003c\u003e();\n        staticFieldImageToTypeDef \u003d new HashMap\u003c\u003e();\n        staticNamesToClasses \u003d new HashMap\u003c\u003e();\n        importOnDemandStaticClasses \u003d new ArrayList\u003c\u003e();\n        className \u003d getClassName(node);\n        if (className !\u003d null) {\n            populateClassName(node, className);\n        }\n    } catch (ClassNotFoundException e) {\n        if (LOG.isLoggable(Level.FINE)) {\n            LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e);\n        }\n    } catch (NoClassDefFoundError e) {\n        if (LOG.isLoggable(Level.FINE)) {\n            LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e);\n        }\n    } catch (LinkageError e) {\n        if (LOG.isLoggable(Level.WARNING)) {\n            LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e);\n        }\n    } finally {\n        populateImports(node);\n    }\n    return super.visit(node, data);\n}",
      "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver.java",
      "functionStartLine": 186,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,30 +1,31 @@\n @Override\n public Object visit(ASTCompilationUnit node, Object data) {\n     String className \u003d null;\n     try {\n         currentAcu \u003d node;\n         importedOnDemand \u003d new ArrayList\u003c\u003e();\n         importedClasses \u003d new HashMap\u003c\u003e();\n         staticFieldImageToTypeDef \u003d new HashMap\u003c\u003e();\n-        staticFieldImportOnDemand \u003d new ArrayList\u003c\u003e();\n+        staticNamesToClasses \u003d new HashMap\u003c\u003e();\n+        importOnDemandStaticClasses \u003d new ArrayList\u003c\u003e();\n         className \u003d getClassName(node);\n         if (className !\u003d null) {\n             populateClassName(node, className);\n         }\n     } catch (ClassNotFoundException e) {\n         if (LOG.isLoggable(Level.FINE)) {\n             LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e);\n         }\n     } catch (NoClassDefFoundError e) {\n         if (LOG.isLoggable(Level.FINE)) {\n             LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e);\n         }\n     } catch (LinkageError e) {\n         if (LOG.isLoggable(Level.WARNING)) {\n             LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e);\n         }\n     } finally {\n         populateImports(node);\n     }\n     return super.visit(node, data);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "800cfa6e484e0ae704b4f2856ce7e5aa4b66509e": {
      "type": "Ybodychange",
      "commitMessage": "Java, typeres: add static field resolution\n",
      "commitDate": "2017/7/20 上午3:22",
      "commitName": "800cfa6e484e0ae704b4f2856ce7e5aa4b66509e",
      "commitAuthor": "Bendegúz Nagy",
      "commitDateOld": "2017/7/11 下午4:35",
      "commitNameOld": "4728eff5d6d4bd41d0eb157f55acabc595da6e62",
      "commitAuthorOld": "Bendegúz Nagy",
      "daysBetweenCommits": 8.45,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic Object visit(ASTCompilationUnit node, Object data) {\n    String className \u003d null;\n    try {\n        currentAcu \u003d node;\n        importedOnDemand \u003d new ArrayList\u003c\u003e();\n        importedClasses \u003d new HashMap\u003c\u003e();\n        staticFieldImageToTypeDef \u003d new HashMap\u003c\u003e();\n        staticFieldImportOnDemand \u003d new ArrayList\u003c\u003e();\n        className \u003d getClassName(node);\n        if (className !\u003d null) {\n            populateClassName(node, className);\n        }\n    } catch (ClassNotFoundException e) {\n        if (LOG.isLoggable(Level.FINE)) {\n            LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e);\n        }\n    } catch (NoClassDefFoundError e) {\n        if (LOG.isLoggable(Level.FINE)) {\n            LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e);\n        }\n    } catch (LinkageError e) {\n        if (LOG.isLoggable(Level.WARNING)) {\n            LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e);\n        }\n    } finally {\n        populateImports(node);\n    }\n    return super.visit(node, data);\n}",
      "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver.java",
      "functionStartLine": 184,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,27 +1,30 @@\n @Override\n public Object visit(ASTCompilationUnit node, Object data) {\n     String className \u003d null;\n     try {\n+        currentAcu \u003d node;\n         importedOnDemand \u003d new ArrayList\u003c\u003e();\n         importedClasses \u003d new HashMap\u003c\u003e();\n+        staticFieldImageToTypeDef \u003d new HashMap\u003c\u003e();\n+        staticFieldImportOnDemand \u003d new ArrayList\u003c\u003e();\n         className \u003d getClassName(node);\n         if (className !\u003d null) {\n             populateClassName(node, className);\n         }\n     } catch (ClassNotFoundException e) {\n         if (LOG.isLoggable(Level.FINE)) {\n             LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e);\n         }\n     } catch (NoClassDefFoundError e) {\n         if (LOG.isLoggable(Level.FINE)) {\n             LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e);\n         }\n     } catch (LinkageError e) {\n         if (LOG.isLoggable(Level.WARNING)) {\n             LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e);\n         }\n     } finally {\n         populateImports(node);\n     }\n     return super.visit(node, data);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "fd2dcddc447c8ae88fe5b1df9fca0326017309f8": {
      "type": "Ybodychange",
      "commitMessage": "Java 7 changes and some compiler warnings fixed\n",
      "commitDate": "2015/11/26 上午5:06",
      "commitName": "fd2dcddc447c8ae88fe5b1df9fca0326017309f8",
      "commitAuthor": "Andreas Dangel",
      "commitDateOld": "2015/11/20 下午6:23",
      "commitNameOld": "b4c2a517811f12528fb1cd81a45c465aef81fd27",
      "commitAuthorOld": "Andreas Dangel",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic Object visit(ASTCompilationUnit node, Object data) {\n    String className \u003d null;\n    try {\n        importedOnDemand \u003d new ArrayList\u003c\u003e();\n        importedClasses \u003d new HashMap\u003c\u003e();\n        className \u003d getClassName(node);\n        if (className !\u003d null) {\n            populateClassName(node, className);\n        }\n    } catch (ClassNotFoundException e) {\n        if (LOG.isLoggable(Level.FINE)) {\n            LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e);\n        }\n    } catch (NoClassDefFoundError e) {\n        if (LOG.isLoggable(Level.FINE)) {\n            LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e);\n        }\n    } catch (LinkageError e) {\n        if (LOG.isLoggable(Level.WARNING)) {\n            LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e);\n        }\n    } finally {\n        populateImports(node);\n    }\n    return super.visit(node, data);\n}",
      "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver.java",
      "functionStartLine": 146,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,27 +1,27 @@\n @Override\n public Object visit(ASTCompilationUnit node, Object data) {\n     String className \u003d null;\n     try {\n-        importedOnDemand \u003d new ArrayList\u003cString\u003e();\n-        importedClasses \u003d new HashMap\u003cString, String\u003e();\n+        importedOnDemand \u003d new ArrayList\u003c\u003e();\n+        importedClasses \u003d new HashMap\u003c\u003e();\n         className \u003d getClassName(node);\n         if (className !\u003d null) {\n             populateClassName(node, className);\n         }\n     } catch (ClassNotFoundException e) {\n         if (LOG.isLoggable(Level.FINE)) {\n             LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e);\n         }\n     } catch (NoClassDefFoundError e) {\n         if (LOG.isLoggable(Level.FINE)) {\n             LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e);\n         }\n     } catch (LinkageError e) {\n         if (LOG.isLoggable(Level.WARNING)) {\n             LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e);\n         }\n     } finally {\n         populateImports(node);\n     }\n     return super.visit(node, data);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1f6421ec8800fc0aebb2f46ccf2bac2b563862d7": {
      "type": "Ybodychange",
      "commitMessage": "Handle NoClassDefFoundError along ClassNotFoundException\n",
      "commitDate": "2015/2/16 上午3:34",
      "commitName": "1f6421ec8800fc0aebb2f46ccf2bac2b563862d7",
      "commitAuthor": "Roman",
      "commitDateOld": "2015/1/23 上午2:30",
      "commitNameOld": "9522ab3cd424182739e47bd16d0dde0974c8aa7e",
      "commitAuthorOld": "Andreas Dangel",
      "daysBetweenCommits": 24.04,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic Object visit(ASTCompilationUnit node, Object data) {\n    String className \u003d null;\n    try {\n        importedOnDemand \u003d new ArrayList\u003cString\u003e();\n        importedClasses \u003d new HashMap\u003cString, String\u003e();\n        className \u003d getClassName(node);\n        if (className !\u003d null) {\n            populateClassName(node, className);\n        }\n    } catch (ClassNotFoundException e) {\n        if (LOG.isLoggable(Level.FINE)) {\n            LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e);\n        }\n    } catch (NoClassDefFoundError e) {\n        if (LOG.isLoggable(Level.FINE)) {\n            LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e);\n        }\n    } catch (LinkageError e) {\n        if (LOG.isLoggable(Level.WARNING)) {\n            LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e);\n        }\n    } finally {\n        populateImports(node);\n    }\n    return super.visit(node, data);\n}",
      "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver.java",
      "functionStartLine": 146,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,23 +1,27 @@\n @Override\n public Object visit(ASTCompilationUnit node, Object data) {\n     String className \u003d null;\n     try {\n         importedOnDemand \u003d new ArrayList\u003cString\u003e();\n         importedClasses \u003d new HashMap\u003cString, String\u003e();\n         className \u003d getClassName(node);\n         if (className !\u003d null) {\n             populateClassName(node, className);\n         }\n     } catch (ClassNotFoundException e) {\n         if (LOG.isLoggable(Level.FINE)) {\n-            LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n+            LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e);\n+        }\n+    } catch (NoClassDefFoundError e) {\n+        if (LOG.isLoggable(Level.FINE)) {\n+            LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e);\n         }\n     } catch (LinkageError e) {\n         if (LOG.isLoggable(Level.WARNING)) {\n-            LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n+            LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e);\n         }\n     } finally {\n         populateImports(node);\n     }\n     return super.visit(node, data);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5f35ded04bae4c4a4446f78b7a6288f8dfa0472c": {
      "type": "Ybodychange",
      "commitMessage": "Fix PMD dogfood issues in pmd-java\n",
      "commitDate": "2014/11/16 下午6:38",
      "commitName": "5f35ded04bae4c4a4446f78b7a6288f8dfa0472c",
      "commitAuthor": "Andreas Dangel",
      "commitDateOld": "2014/10/4 下午11:36",
      "commitNameOld": "ad88b4784d78bf1698fac72cad3825144caf6863",
      "commitAuthorOld": "Andreas Dangel",
      "daysBetweenCommits": 42.79,
      "commitsBetweenForRepo": 93,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic Object visit(ASTCompilationUnit node, Object data) {\n    String className \u003d null;\n    try {\n        importedOnDemand \u003d new ArrayList\u003cString\u003e();\n        importedClasses \u003d new HashMap\u003cString, String\u003e();\n        className \u003d getClassName(node);\n        if (className !\u003d null) {\n            populateClassName(node, className);\n        }\n    } catch (ClassNotFoundException e) {\n        if (LOG.isLoggable(Level.FINE)) {\n            LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n        }\n    } catch (LinkageError e) {\n        if (LOG.isLoggable(Level.WARNING)) {\n            LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n        }\n    } finally {\n        populateImports(node);\n    }\n    return super.visit(node, data);\n}",
      "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver.java",
      "functionStartLine": 146,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,19 +1,23 @@\n @Override\n public Object visit(ASTCompilationUnit node, Object data) {\n     String className \u003d null;\n     try {\n         importedOnDemand \u003d new ArrayList\u003cString\u003e();\n         importedClasses \u003d new HashMap\u003cString, String\u003e();\n         className \u003d getClassName(node);\n         if (className !\u003d null) {\n             populateClassName(node, className);\n         }\n     } catch (ClassNotFoundException e) {\n-        LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n+        if (LOG.isLoggable(Level.FINE)) {\n+            LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n+        }\n     } catch (LinkageError e) {\n-        LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n+        if (LOG.isLoggable(Level.WARNING)) {\n+            LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n+        }\n     } finally {\n         populateImports(node);\n     }\n     return super.visit(node, data);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ad88b4784d78bf1698fac72cad3825144caf6863": {
      "type": "Yfilerename",
      "commitMessage": "Move java into own sub-module pmd-java\n",
      "commitDate": "2014/10/4 下午11:36",
      "commitName": "ad88b4784d78bf1698fac72cad3825144caf6863",
      "commitAuthor": "Andreas Dangel",
      "commitDateOld": "2014/10/4 下午10:59",
      "commitNameOld": "fa950a82960993c7a7d70e276553b85174eec8b2",
      "commitAuthorOld": "Andreas Dangel",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic Object visit(ASTCompilationUnit node, Object data) {\n    String className \u003d null;\n    try {\n        importedOnDemand \u003d new ArrayList\u003cString\u003e();\n        importedClasses \u003d new HashMap\u003cString, String\u003e();\n        className \u003d getClassName(node);\n        if (className !\u003d null) {\n            populateClassName(node, className);\n        }\n    } catch (ClassNotFoundException e) {\n        LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n    } catch (LinkageError e) {\n        LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n    } finally {\n        populateImports(node);\n    }\n    return super.visit(node, data);\n}",
      "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver.java",
      "functionStartLine": 146,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "pmd/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver.java",
        "newPath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver.java"
      }
    },
    "b172c19de7f487e36e7185aaa41ea34c0734e130": {
      "type": "Ybodychange",
      "commitMessage": "Make PMD more fault-tolerant.",
      "commitDate": "2012/11/28 上午5:17",
      "commitName": "b172c19de7f487e36e7185aaa41ea34c0734e130",
      "commitAuthor": "rsalvador",
      "commitDateOld": "2011/11/22 上午4:45",
      "commitNameOld": "75daf38ed303bcdbfe1034fd3a070a4306402c2d",
      "commitAuthorOld": "Romain Pelisse",
      "daysBetweenCommits": 372.02,
      "commitsBetweenForRepo": 270,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic Object visit(ASTCompilationUnit node, Object data) {\n    String className \u003d null;\n    try {\n        importedOnDemand \u003d new ArrayList\u003cString\u003e();\n        importedClasses \u003d new HashMap\u003cString, String\u003e();\n        className \u003d getClassName(node);\n        if (className !\u003d null) {\n            populateClassName(node, className);\n        }\n    } catch (ClassNotFoundException e) {\n        LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n    } catch (LinkageError e) {\n        LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n    } finally {\n        populateImports(node);\n    }\n    return super.visit(node, data);\n}",
      "path": "pmd/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver.java",
      "functionStartLine": 142,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,21 +1,19 @@\n @Override\n public Object visit(ASTCompilationUnit node, Object data) {\n     String className \u003d null;\n     try {\n         importedOnDemand \u003d new ArrayList\u003cString\u003e();\n         importedClasses \u003d new HashMap\u003cString, String\u003e();\n         className \u003d getClassName(node);\n         if (className !\u003d null) {\n             populateClassName(node, className);\n         }\n     } catch (ClassNotFoundException e) {\n         LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n-    } catch (NoClassDefFoundError e) {\n-        LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n-    } catch (ClassFormatError e) {\n+    } catch (LinkageError e) {\n         LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n     } finally {\n         populateImports(node);\n     }\n     return super.visit(node, data);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "75daf38ed303bcdbfe1034fd3a070a4306402c2d": {
      "type": "Yfilerename",
      "commitMessage": "pmd: Move all java sources to src/main/java, adapt pom.xml, test and other files accordingly\n\ngit-svn-id: https://pmd.svn.sourceforge.net/svnroot/pmd/trunk@7476 51baf565-9d33-0410-a72c-fc3788e3496d\n",
      "commitDate": "2011/11/22 上午4:45",
      "commitName": "75daf38ed303bcdbfe1034fd3a070a4306402c2d",
      "commitAuthor": "Romain Pelisse",
      "commitDateOld": "2011/11/22 上午2:10",
      "commitNameOld": "821f452f692c1497e2849302b5d9417c90edc054",
      "commitAuthorOld": "Brian Remedios",
      "daysBetweenCommits": 0.11,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic Object visit(ASTCompilationUnit node, Object data) {\n    String className \u003d null;\n    try {\n        importedOnDemand \u003d new ArrayList\u003cString\u003e();\n        importedClasses \u003d new HashMap\u003cString, String\u003e();\n        className \u003d getClassName(node);\n        if (className !\u003d null) {\n            populateClassName(node, className);\n        }\n    } catch (ClassNotFoundException e) {\n        LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n    } catch (NoClassDefFoundError e) {\n        LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n    } catch (ClassFormatError e) {\n        LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n    } finally {\n        populateImports(node);\n    }\n    return super.visit(node, data);\n}",
      "path": "pmd/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver.java",
      "functionStartLine": 142,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "pmd/src/net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver.java",
        "newPath": "pmd/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver.java"
      }
    },
    "3aedf63a96d787f626b2876b134f81831db17117": {
      "type": "Ybodychange",
      "commitMessage": "Fix for 2904832.  ClassTypeResolver was clobbering the importedClasses in populateImports set by populateClassName.  Changed to clobber at ASTCompilationUnit, then everyone adds to the map.\n\ngit-svn-id: https://pmd.svn.sourceforge.net/svnroot/pmd/trunk@7004 51baf565-9d33-0410-a72c-fc3788e3496d\n",
      "commitDate": "2009/11/28 上午2:10",
      "commitName": "3aedf63a96d787f626b2876b134f81831db17117",
      "commitAuthor": "Ryan Gustafson",
      "commitDateOld": "2009/4/24 上午10:55",
      "commitNameOld": "09ae59bcf9d63d9b76202cc402fe741096a45641",
      "commitAuthorOld": "Ryan Gustafson",
      "daysBetweenCommits": 217.64,
      "commitsBetweenForRepo": 61,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic Object visit(ASTCompilationUnit node, Object data) {\n    String className \u003d null;\n    try {\n        importedOnDemand \u003d new ArrayList\u003cString\u003e();\n        importedClasses \u003d new HashMap\u003cString, String\u003e();\n        className \u003d getClassName(node);\n        if (className !\u003d null) {\n            populateClassName(node, className);\n        }\n    } catch (ClassNotFoundException e) {\n        LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n    } catch (NoClassDefFoundError e) {\n        LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n    } catch (ClassFormatError e) {\n        LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n    } finally {\n        populateImports(node);\n    }\n    return super.visit(node, data);\n}",
      "path": "pmd/src/net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver.java",
      "functionStartLine": 140,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,20 +1,21 @@\n @Override\n public Object visit(ASTCompilationUnit node, Object data) {\n     String className \u003d null;\n     try {\n         importedOnDemand \u003d new ArrayList\u003cString\u003e();\n+        importedClasses \u003d new HashMap\u003cString, String\u003e();\n         className \u003d getClassName(node);\n         if (className !\u003d null) {\n             populateClassName(node, className);\n         }\n     } catch (ClassNotFoundException e) {\n         LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n     } catch (NoClassDefFoundError e) {\n         LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n     } catch (ClassFormatError e) {\n         LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n     } finally {\n         populateImports(node);\n     }\n     return super.visit(node, data);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c1c74ad02bfd383c4c29b608e524c9d8c2056ca2": {
      "type": "Ybodychange",
      "commitMessage": "Enhanced logging in the ClassTypeResolver to provide more detailed messaging.\n\ngit-svn-id: https://pmd.svn.sourceforge.net/svnroot/pmd/trunk@6633 51baf565-9d33-0410-a72c-fc3788e3496d\n",
      "commitDate": "2008/10/18 下午1:20",
      "commitName": "c1c74ad02bfd383c4c29b608e524c9d8c2056ca2",
      "commitAuthor": "Ryan Gustafson",
      "commitDateOld": "2008/6/30 下午2:28",
      "commitNameOld": "e0a5913f8c0e45bfa6874bf5d4589d18ac4d5a16",
      "commitAuthorOld": "Ryan Gustafson",
      "daysBetweenCommits": 109.95,
      "commitsBetweenForRepo": 275,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic Object visit(ASTCompilationUnit node, Object data) {\n    String className \u003d null;\n    try {\n        importedOnDemand \u003d new ArrayList\u003cString\u003e();\n        className \u003d getClassName(node);\n        if (className !\u003d null) {\n            populateClassName(node, className);\n        }\n    } catch (ClassNotFoundException e) {\n        LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n    } catch (NoClassDefFoundError e) {\n        LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n    } catch (ClassFormatError e) {\n        LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n    } finally {\n        populateImports(node);\n    }\n    return super.visit(node, data);\n}",
      "path": "pmd/src/net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver.java",
      "functionStartLine": 140,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,20 +1,20 @@\n @Override\n public Object visit(ASTCompilationUnit node, Object data) {\n     String className \u003d null;\n     try {\n         importedOnDemand \u003d new ArrayList\u003cString\u003e();\n         className \u003d getClassName(node);\n         if (className !\u003d null) {\n             populateClassName(node, className);\n         }\n     } catch (ClassNotFoundException e) {\n-        LOG.log(Level.FINE, \"Could not find class \" + className);\n+        LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n     } catch (NoClassDefFoundError e) {\n-        LOG.log(Level.WARNING, \"Could not find class \" + className);\n+        LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n     } catch (ClassFormatError e) {\n-        LOG.log(Level.WARNING, \"Could not find class \" + className);\n+        LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n     } finally {\n         populateImports(node);\n     }\n     return super.visit(node, data);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "de9c2b0e3ae70f755a4746debac2c01636204af1": {
      "type": "Yannotationchange",
      "commitMessage": "API Change - Changes to Node interface\n      Renamed - findChildrenOfType() as findDescendantsOfType()\n      Renamed - getFirstChildOfType() as getFirstDescendantOfType()\n      Renamed - containsChildOfType() as hasDescendantOfType()\n      Added - findChildrenOfType(), non recursive version\n      Added - getFirstChildOfType(), non recursive version\n\nSome of the recursion has been removed. Profiling shows that the old\nfindChildrenOfType was using 4.7% of the time, the new version,\nfindDescendantsOfType, is now using 3.3%.\n\n\ngit-svn-id: https://pmd.svn.sourceforge.net/svnroot/pmd/trunk@6245 51baf565-9d33-0410-a72c-fc3788e3496d\n",
      "commitDate": "2008/6/23 上午2:07",
      "commitName": "de9c2b0e3ae70f755a4746debac2c01636204af1",
      "commitAuthor": "Xavier Le Vourch",
      "commitDateOld": "2008/5/23 下午2:32",
      "commitNameOld": "ca6eda7e61fe4daf90682014e11fe1507fd331ed",
      "commitAuthorOld": "Ryan Gustafson",
      "daysBetweenCommits": 30.48,
      "commitsBetweenForRepo": 89,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic Object visit(ASTCompilationUnit node, Object data) {\n    String className \u003d null;\n    try {\n        importedOnDemand \u003d new ArrayList\u003cString\u003e();\n        className \u003d getClassName(node);\n        if (className !\u003d null) {\n            populateClassName(node, className);\n        }\n    } catch (ClassNotFoundException e) {\n        LOG.log(Level.FINE, \"Could not find class \" + className);\n    } catch (NoClassDefFoundError e) {\n        LOG.log(Level.WARNING, \"Could not find class \" + className);\n    } catch (ClassFormatError e) {\n        LOG.log(Level.WARNING, \"Could not find class \" + className);\n    } finally {\n        populateImports(node);\n    }\n    return super.visit(node, data);\n}",
      "path": "pmd/src/net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver.java",
      "functionStartLine": 140,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,19 +1,20 @@\n+@Override\n public Object visit(ASTCompilationUnit node, Object data) {\n     String className \u003d null;\n     try {\n         importedOnDemand \u003d new ArrayList\u003cString\u003e();\n         className \u003d getClassName(node);\n         if (className !\u003d null) {\n             populateClassName(node, className);\n         }\n     } catch (ClassNotFoundException e) {\n         LOG.log(Level.FINE, \"Could not find class \" + className);\n     } catch (NoClassDefFoundError e) {\n         LOG.log(Level.WARNING, \"Could not find class \" + className);\n     } catch (ClassFormatError e) {\n         LOG.log(Level.WARNING, \"Could not find class \" + className);\n     } finally {\n         populateImports(node);\n     }\n     return super.visit(node, data);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "@Override"
      }
    },
    "ca6eda7e61fe4daf90682014e11fe1507fd331ed": {
      "type": "Yfilerename",
      "commitMessage": "Refactor Type Resolution from pmd.typeresolution into pmd.lang.java.typeresolution, as TR is currently Java only.\n\ngit-svn-id: https://pmd.svn.sourceforge.net/svnroot/pmd/trunk@6141 51baf565-9d33-0410-a72c-fc3788e3496d\n",
      "commitDate": "2008/5/23 下午2:32",
      "commitName": "ca6eda7e61fe4daf90682014e11fe1507fd331ed",
      "commitAuthor": "Ryan Gustafson",
      "commitDateOld": "2008/5/23 下午2:31",
      "commitNameOld": "e2a1216285ade21204cd926884d8fdf8fbba75c6",
      "commitAuthorOld": "Ryan Gustafson",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object visit(ASTCompilationUnit node, Object data) {\n    String className \u003d null;\n    try {\n        importedOnDemand \u003d new ArrayList\u003cString\u003e();\n        className \u003d getClassName(node);\n        if (className !\u003d null) {\n            populateClassName(node, className);\n        }\n    } catch (ClassNotFoundException e) {\n        LOG.log(Level.FINE, \"Could not find class \" + className);\n    } catch (NoClassDefFoundError e) {\n        LOG.log(Level.WARNING, \"Could not find class \" + className);\n    } catch (ClassFormatError e) {\n        LOG.log(Level.WARNING, \"Could not find class \" + className);\n    } finally {\n        populateImports(node);\n    }\n    return super.visit(node, data);\n}",
      "path": "pmd/src/net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver.java",
      "functionStartLine": 139,
      "functionName": "visit",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "pmd/src/net/sourceforge/pmd/typeresolution/ClassTypeResolver.java",
        "newPath": "pmd/src/net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver.java"
      }
    },
    "c595c61edd4259c73748baab5bf0c952eda9a374": {
      "type": "Ybodychange",
      "commitMessage": "Add -auxclasspath option for specifying Type Resolution classpath from command line.\n\ngit-svn-id: https://pmd.svn.sourceforge.net/svnroot/pmd/trunk@5890 51baf565-9d33-0410-a72c-fc3788e3496d\n",
      "commitDate": "2008/3/12 上午4:03",
      "commitName": "c595c61edd4259c73748baab5bf0c952eda9a374",
      "commitAuthor": "Ryan Gustafson",
      "commitDateOld": "2008/3/6 上午10:35",
      "commitNameOld": "a11337cab43043fde6cebd376173a220a696973a",
      "commitAuthorOld": "Ryan Gustafson",
      "daysBetweenCommits": 5.73,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object visit(ASTCompilationUnit node, Object data) {\n    String className \u003d null;\n    try {\n        importedOnDemand \u003d new ArrayList\u003cString\u003e();\n        className \u003d getClassName(node);\n        if (className !\u003d null) {\n            populateClassName(node, className);\n        }\n    } catch (ClassNotFoundException e) {\n        LOG.log(Level.FINE, \"Could not find class \" + className);\n    } catch (NoClassDefFoundError e) {\n        LOG.log(Level.WARNING, \"Could not find class \" + className);\n    } catch (ClassFormatError e) {\n        LOG.log(Level.WARNING, \"Could not find class \" + className);\n    } finally {\n        populateImports(node);\n    }\n    return super.visit(node, data);\n}",
      "path": "pmd/src/net/sourceforge/pmd/typeresolution/ClassTypeResolver.java",
      "functionStartLine": 140,
      "functionName": "visit",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,17 +1,19 @@\n public Object visit(ASTCompilationUnit node, Object data) {\n     String className \u003d null;\n     try {\n         importedOnDemand \u003d new ArrayList\u003cString\u003e();\n         className \u003d getClassName(node);\n         if (className !\u003d null) {\n             populateClassName(node, className);\n         }\n     } catch (ClassNotFoundException e) {\n         LOG.log(Level.FINE, \"Could not find class \" + className);\n     } catch (NoClassDefFoundError e) {\n         LOG.log(Level.WARNING, \"Could not find class \" + className);\n+    } catch (ClassFormatError e) {\n+        LOG.log(Level.WARNING, \"Could not find class \" + className);\n     } finally {\n         populateImports(node);\n     }\n     return super.visit(node, data);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "40501042ce13fce37eb69fbcf2ec34642133aeaf": {
      "type": "Ybodychange",
      "commitMessage": "Nothing substantial, just poking around ClassTypeResolver a bit to make sure I understand how things work\n\ngit-svn-id: https://pmd.svn.sourceforge.net/svnroot/pmd/trunk@5672 51baf565-9d33-0410-a72c-fc3788e3496d\n",
      "commitDate": "2007/11/21 上午11:57",
      "commitName": "40501042ce13fce37eb69fbcf2ec34642133aeaf",
      "commitAuthor": "Tom Copeland",
      "commitDateOld": "2007/11/19 上午11:06",
      "commitNameOld": "8674cb4b18750b56f618f93c5882644fce41e83c",
      "commitAuthorOld": "Tom Copeland",
      "daysBetweenCommits": 2.04,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object visit(ASTCompilationUnit node, Object data) {\n    String className \u003d null;\n    try {\n        importedOnDemand \u003d new ArrayList\u003cString\u003e();\n        className \u003d getClassName(node);\n        if (className !\u003d null) {\n            populateClassName(node, className);\n        }\n    } catch (ClassNotFoundException e) {\n        LOG.log(Level.FINE, \"Could not find class \" + className);\n    } catch (NoClassDefFoundError e) {\n        LOG.log(Level.WARNING, \"Could not find class \" + className);\n    } finally {\n        populateImports(node);\n    }\n    return super.visit(node, data);\n}",
      "path": "pmd/src/net/sourceforge/pmd/typeresolution/ClassTypeResolver.java",
      "functionStartLine": 85,
      "functionName": "visit",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,15 +1,17 @@\n public Object visit(ASTCompilationUnit node, Object data) {\n     String className \u003d null;\n     try {\n         importedOnDemand \u003d new ArrayList\u003cString\u003e();\n         className \u003d getClassName(node);\n-        populateClassName(node, className);\n+        if (className !\u003d null) {\n+            populateClassName(node, className);\n+        }\n     } catch (ClassNotFoundException e) {\n         LOG.log(Level.FINE, \"Could not find class \" + className);\n     } catch (NoClassDefFoundError e) {\n         LOG.log(Level.WARNING, \"Could not find class \" + className);\n     } finally {\n         populateImports(node);\n     }\n     return super.visit(node, data);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a708221106c1084c8aef235b14c39ad0f2c6bb1a": {
      "type": "Ybodychange",
      "commitMessage": "Reduced the log level since this Exception usually does not indicate a problem\n\ngit-svn-id: https://pmd.svn.sourceforge.net/svnroot/pmd/trunk@5506 51baf565-9d33-0410-a72c-fc3788e3496d\n",
      "commitDate": "2007/10/4 下午10:10",
      "commitName": "a708221106c1084c8aef235b14c39ad0f2c6bb1a",
      "commitAuthor": "Wouter Zelle",
      "commitDateOld": "2007/10/4 下午8:23",
      "commitNameOld": "1b4aef4e56a27d4f13aed630d4e91cc8d36d2066",
      "commitAuthorOld": "Wouter Zelle",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object visit(ASTCompilationUnit node, Object data) {\n    String className \u003d null;\n    try {\n        importedOnDemand \u003d new ArrayList\u003cString\u003e();\n        className \u003d getClassName(node);\n        populateClassName(node, className);\n    } catch (ClassNotFoundException e) {\n        LOG.log(Level.FINE, \"Could not find class \" + className);\n    } catch (NoClassDefFoundError e) {\n        LOG.log(Level.WARNING, \"Could not find class \" + className);\n    } finally {\n        populateImports(node);\n    }\n    return super.visit(node, data);\n}",
      "path": "pmd/src/net/sourceforge/pmd/typeresolution/ClassTypeResolver.java",
      "functionStartLine": 89,
      "functionName": "visit",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,15 +1,15 @@\n public Object visit(ASTCompilationUnit node, Object data) {\n     String className \u003d null;\n     try {\n         importedOnDemand \u003d new ArrayList\u003cString\u003e();\n         className \u003d getClassName(node);\n         populateClassName(node, className);\n     } catch (ClassNotFoundException e) {\n-        LOG.log(Level.WARNING, \"Could not find class \" + className);\n+        LOG.log(Level.FINE, \"Could not find class \" + className);\n     } catch (NoClassDefFoundError e) {\n         LOG.log(Level.WARNING, \"Could not find class \" + className);\n     } finally {\n         populateImports(node);\n     }\n     return super.visit(node, data);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1b4aef4e56a27d4f13aed630d4e91cc8d36d2066": {
      "type": "Ybodychange",
      "commitMessage": "Fixed classname in warnings\n\ngit-svn-id: https://pmd.svn.sourceforge.net/svnroot/pmd/trunk@5505 51baf565-9d33-0410-a72c-fc3788e3496d\n",
      "commitDate": "2007/10/4 下午8:23",
      "commitName": "1b4aef4e56a27d4f13aed630d4e91cc8d36d2066",
      "commitAuthor": "Wouter Zelle",
      "commitDateOld": "2007/8/29 上午5:01",
      "commitNameOld": "3bbc6575ef1ade840f1bfa7b9d9090a20a4e1394",
      "commitAuthorOld": "Allan Caplan",
      "daysBetweenCommits": 36.64,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object visit(ASTCompilationUnit node, Object data) {\n    String className \u003d null;\n    try {\n        importedOnDemand \u003d new ArrayList\u003cString\u003e();\n        className \u003d getClassName(node);\n        populateClassName(node, className);\n    } catch (ClassNotFoundException e) {\n        LOG.log(Level.WARNING, \"Could not find class \" + className);\n    } catch (NoClassDefFoundError e) {\n        LOG.log(Level.WARNING, \"Could not find class \" + className);\n    } finally {\n        populateImports(node);\n    }\n    return super.visit(node, data);\n}",
      "path": "pmd/src/net/sourceforge/pmd/typeresolution/ClassTypeResolver.java",
      "functionStartLine": 89,
      "functionName": "visit",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,15 +1,15 @@\n public Object visit(ASTCompilationUnit node, Object data) {\n     String className \u003d null;\n     try {\n         importedOnDemand \u003d new ArrayList\u003cString\u003e();\n         className \u003d getClassName(node);\n         populateClassName(node, className);\n     } catch (ClassNotFoundException e) {\n-        LOG.log(Level.WARNING, \"Could not find class {0}\", className);\n+        LOG.log(Level.WARNING, \"Could not find class \" + className);\n     } catch (NoClassDefFoundError e) {\n-        LOG.log(Level.WARNING, \"Could not find class {0}\", className);\n+        LOG.log(Level.WARNING, \"Could not find class \" + className);\n     } finally {\n         populateImports(node);\n     }\n     return super.visit(node, data);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "3bbc6575ef1ade840f1bfa7b9d9090a20a4e1394": {
      "type": "Ybodychange",
      "commitMessage": "First changes moving PMD to Type Resolution\n\n- Moved all JUnit tests to Type Resolution\n- All JUnit java rules extend AbstractJUnitRule, which  now has a common method to determine if this is really a test class or not. This will save needless processing, should reduce runtime as well (did not test runtime specifically)\n\n\n\ngit-svn-id: https://pmd.svn.sourceforge.net/svnroot/pmd/trunk@5484 51baf565-9d33-0410-a72c-fc3788e3496d\n",
      "commitDate": "2007/8/29 上午5:01",
      "commitName": "3bbc6575ef1ade840f1bfa7b9d9090a20a4e1394",
      "commitAuthor": "Allan Caplan",
      "commitDateOld": "2007/8/21 下午8:35",
      "commitNameOld": "f0acb0aea6dcea34b695101fa000e4ef6fde93d6",
      "commitAuthorOld": "Allan Caplan",
      "daysBetweenCommits": 7.35,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object visit(ASTCompilationUnit node, Object data) {\n    String className \u003d null;\n    try {\n        importedOnDemand \u003d new ArrayList\u003cString\u003e();\n        className \u003d getClassName(node);\n        populateClassName(node, className);\n    } catch (ClassNotFoundException e) {\n        LOG.log(Level.WARNING, \"Could not find class {0}\", className);\n    } catch (NoClassDefFoundError e) {\n        LOG.log(Level.WARNING, \"Could not find class {0}\", className);\n    } finally {\n        populateImports(node);\n    }\n    return super.visit(node, data);\n}",
      "path": "pmd/src/net/sourceforge/pmd/typeresolution/ClassTypeResolver.java",
      "functionStartLine": 89,
      "functionName": "visit",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,11 +1,15 @@\n public Object visit(ASTCompilationUnit node, Object data) {\n+    String className \u003d null;\n     try {\n         importedOnDemand \u003d new ArrayList\u003cString\u003e();\n-        populateClassName(node);\n+        className \u003d getClassName(node);\n+        populateClassName(node, className);\n     } catch (ClassNotFoundException e) {\n+        LOG.log(Level.WARNING, \"Could not find class {0}\", className);\n     } catch (NoClassDefFoundError e) {\n+        LOG.log(Level.WARNING, \"Could not find class {0}\", className);\n     } finally {\n         populateImports(node);\n     }\n     return super.visit(node, data);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ad46a291ea19b057a88588db2c80f50374599b6a": {
      "type": "Ybodychange",
      "commitMessage": "Type resolution now works for implicit imports\n\n\ngit-svn-id: https://pmd.svn.sourceforge.net/svnroot/pmd/trunk@5098 51baf565-9d33-0410-a72c-fc3788e3496d\n",
      "commitDate": "2007/4/17 上午6:16",
      "commitName": "ad46a291ea19b057a88588db2c80f50374599b6a",
      "commitAuthor": "Wouter Zelle",
      "commitDateOld": "2007/2/3 下午8:48",
      "commitNameOld": "8812185444622ed8606bbcf79aed12477786a877",
      "commitAuthorOld": "Allan Caplan",
      "daysBetweenCommits": 72.39,
      "commitsBetweenForRepo": 65,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object visit(ASTCompilationUnit node, Object data) {\n    try {\n        importedOnDemand \u003d new ArrayList\u003cString\u003e();\n        populateClassName(node);\n    } catch (ClassNotFoundException e) {\n    } catch (NoClassDefFoundError e) {\n    } finally {\n        populateImports(node);\n    }\n    return super.visit(node, data);\n}",
      "path": "pmd/src/net/sourceforge/pmd/typeresolution/ClassTypeResolver.java",
      "functionStartLine": 86,
      "functionName": "visit",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,11 @@\n public Object visit(ASTCompilationUnit node, Object data) {\n     try {\n         importedOnDemand \u003d new ArrayList\u003cString\u003e();\n         populateClassName(node);\n-        populateImports(node, true);\n     } catch (ClassNotFoundException e) {\n-        populateImports(node, false);\n     } catch (NoClassDefFoundError e) {\n-        populateImports(node, false);\n+    } finally {\n+        populateImports(node);\n     }\n     return super.visit(node, data);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "8812185444622ed8606bbcf79aed12477786a877": {
      "type": "Ybodychange",
      "commitMessage": "Fixed Defect 1451251\n\nAdded a new typeresolution rule - UnusedImports which finds unused on demand imports\n\nUpdated typeresolution to populate the type of ASTNames without VariableNameDeclarations - These are typically statically called methods from other classes such as Arrays.asList.\n\n\ngit-svn-id: https://pmd.svn.sourceforge.net/svnroot/pmd/trunk@5031 51baf565-9d33-0410-a72c-fc3788e3496d\n",
      "commitDate": "2007/2/3 下午8:48",
      "commitName": "8812185444622ed8606bbcf79aed12477786a877",
      "commitAuthor": "Allan Caplan",
      "commitDateOld": "2007/1/31 上午8:53",
      "commitNameOld": "02a809e807dd19189286e5a79d4d1eecaa31c364",
      "commitAuthorOld": "Xavier Le Vourch",
      "daysBetweenCommits": 3.5,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object visit(ASTCompilationUnit node, Object data) {\n    try {\n        importedOnDemand \u003d new ArrayList\u003cString\u003e();\n        populateClassName(node);\n        populateImports(node, true);\n    } catch (ClassNotFoundException e) {\n        populateImports(node, false);\n    } catch (NoClassDefFoundError e) {\n        populateImports(node, false);\n    }\n    return super.visit(node, data);\n}",
      "path": "pmd/src/net/sourceforge/pmd/typeresolution/ClassTypeResolver.java",
      "functionStartLine": 86,
      "functionName": "visit",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,12 @@\n public Object visit(ASTCompilationUnit node, Object data) {\n     try {\n+        importedOnDemand \u003d new ArrayList\u003cString\u003e();\n         populateClassName(node);\n+        populateImports(node, true);\n     } catch (ClassNotFoundException e) {\n-        populateImports(node);\n+        populateImports(node, false);\n     } catch (NoClassDefFoundError e) {\n-        populateImports(node);\n+        populateImports(node, false);\n     }\n     return super.visit(node, data);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "33a6d45cd1953696b60a2e1abbb92738bc136ffc": {
      "type": "Ybodychange",
      "commitMessage": "NoClassDefFoundError exception caught to prevent pmd from exiting on type resolver issues\n\n\ngit-svn-id: https://pmd.svn.sourceforge.net/svnroot/pmd/trunk@4952 51baf565-9d33-0410-a72c-fc3788e3496d\n",
      "commitDate": "2007/1/18 上午9:23",
      "commitName": "33a6d45cd1953696b60a2e1abbb92738bc136ffc",
      "commitAuthor": "Xavier Le Vourch",
      "commitDateOld": "2006/10/26 上午10:35",
      "commitNameOld": "6215d97b9e136a46f58f13dd30c65690fef4a28d",
      "commitAuthorOld": "Allan Caplan",
      "daysBetweenCommits": 83.95,
      "commitsBetweenForRepo": 205,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object visit(ASTCompilationUnit node, Object data) {\n    try {\n        populateClassName(node);\n    } catch (ClassNotFoundException e) {\n        populateImports(node);\n    } catch (NoClassDefFoundError e) {\n        populateImports(node);\n    }\n    return super.visit(node, data);\n}",
      "path": "pmd/src/net/sourceforge/pmd/typeresolution/ClassTypeResolver.java",
      "functionStartLine": 44,
      "functionName": "visit",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,8 +1,10 @@\n public Object visit(ASTCompilationUnit node, Object data) {\n     try {\n         populateClassName(node);\n     } catch (ClassNotFoundException e) {\n         populateImports(node);\n+    } catch (NoClassDefFoundError e) {\n+        populateImports(node);\n     }\n     return super.visit(node, data);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6215d97b9e136a46f58f13dd30c65690fef4a28d": {
      "type": "Yintroduced",
      "commitMessage": "Checkin of the Type Resolution Facility\n\nRe-implemented LooseCoupling as a new rule - new or changed type resolution rules should go in typeresolution to be separated.\n\nI have not added this to 39.xml!\n\nSorry about the lack of comments, will go through and try and get important things commented.\n\nThere\u0027s a couple TODO\u0027s that if addressed should help performance.\n\nRemember, to run compiled classes must be in the CLASSPATH!\n\n\ngit-svn-id: https://pmd.svn.sourceforge.net/svnroot/pmd/trunk@4744 51baf565-9d33-0410-a72c-fc3788e3496d\n",
      "commitDate": "2006/10/26 上午10:35",
      "commitName": "6215d97b9e136a46f58f13dd30c65690fef4a28d",
      "commitAuthor": "Allan Caplan",
      "diff": "@@ -0,0 +1,8 @@\n+public Object visit(ASTCompilationUnit node, Object data) {\n+    try {\n+        populateClassName(node);\n+    } catch (ClassNotFoundException e) {\n+        populateImports(node);\n+    }\n+    return super.visit(node, data);\n+}\n\\ No newline at end of file\n",
      "actualSource": "public Object visit(ASTCompilationUnit node, Object data) {\n    try {\n        populateClassName(node);\n    } catch (ClassNotFoundException e) {\n        populateImports(node);\n    }\n    return super.visit(node, data);\n}",
      "path": "pmd/src/net/sourceforge/pmd/typeresolution/ClassTypeResolver.java",
      "functionStartLine": 44,
      "functionName": "visit",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}