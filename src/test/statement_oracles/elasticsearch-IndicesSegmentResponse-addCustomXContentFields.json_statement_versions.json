{
  "statementVersions": [
    {
      "commit": "b4c78019b02313bd1eaa61e0752ef3c2cf34f5a4",
      "startLine": 21,
      "endLine": 55,
      "methodCode": "@Override\nprotected void addCustomXContentFields(XContentBuilder builder, Params params) throws IOException {\n    builder.startObject(Fields.INDICES);\n    for (IndexSegments indexSegments : getIndices().values()) {\n        builder.startObject(indexSegments.getIndex());\n        builder.startObject(Fields.SHARDS);\n        for (IndexShardSegments indexSegment : indexSegments) {\n            builder.startArray(Integer.toString(indexSegment.getShardId().id()));\n            for (ShardSegments shardSegments : indexSegment) {\n                builder.startObject();\n                builder.startObject(Fields.ROUTING);\n                builder.field(Fields.STATE, shardSegments.getShardRouting().state());\n                builder.field(Fields.PRIMARY, shardSegments.getShardRouting().primary());\n                builder.field(Fields.NODE, shardSegments.getShardRouting().currentNodeId());\n                if (shardSegments.getShardRouting().relocatingNodeId() != null) {\n                    builder.field(Fields.RELOCATING_NODE, shardSegments.getShardRouting().relocatingNodeId());\n                }\n                builder.endObject();\n                builder.field(Fields.NUM_COMMITTED_SEGMENTS, shardSegments.getNumberOfCommitted());\n                builder.field(Fields.NUM_SEARCH_SEGMENTS, shardSegments.getNumberOfSearch());\n                builder.startObject(Fields.SEGMENTS);\n                for (Segment segment : shardSegments) {\n                    builder.startObject(segment.getName());\n                    builder.field(Fields.GENERATION, segment.getGeneration());\n                    builder.field(Fields.NUM_DOCS, segment.getNumDocs());\n                    builder.field(Fields.DELETED_DOCS, segment.getDeletedDocs());\n                    builder.humanReadableField(Fields.SIZE_IN_BYTES, Fields.SIZE, segment.getSize());\n                    builder.humanReadableField(Fields.MEMORY_IN_BYTES, Fields.MEMORY, new ByteSizeValue(segment.getMemoryInBytes()));\n                    builder.field(Fields.COMMITTED, segment.isCommitted());\n                    builder.field(Fields.SEARCH, segment.isSearch());\n                    if (segment.getVersion() != null) {\n                        builder.field(Fields.VERSION, segment.getVersion());\n                    }\n                    if (segment.isCompound() != null) {\n                        builder.field(Fields.COMPOUND, segment.isCompound());\n                    }\n                    if (segment.getMergeId() != null) {\n                        builder.field(Fields.MERGE_ID, segment.getMergeId());\n                    }\n                    if (segment.getSegmentSort() != null) {\n                        toXContent(builder, segment.getSegmentSort());\n                    }\n                    if (segment.ramTree != null) {\n                        builder.startArray(Fields.RAM_TREE);\n                        for (Accountable child : segment.ramTree.getChildResources()) {\n                            toXContent(builder, child);\n                        }\n                        builder.endArray();\n                    }\n                    if (segment.attributes != null && segment.attributes.isEmpty() == false) {\n                        builder.field(\"attributes\", segment.attributes);\n                    }\n                    builder.endObject();\n                }\n                builder.endObject();\n                builder.endObject();\n            }\n            builder.endArray();\n        }\n        builder.endObject();\n        builder.endObject();\n    }\n    builder.endObject();\n}"
    },
    {
      "commit": "4a8099c6962da1e68309e0e382d0e6198a3937c2",
      "startLine": 21,
      "endLine": 55,
      "methodCode": "@Override\nprotected void addCustomXContentFields(XContentBuilder builder, Params params) throws IOException {\n    builder.startObject(Fields.INDICES);\n    for (IndexSegments indexSegments : getIndices().values()) {\n        builder.startObject(indexSegments.getIndex());\n        builder.startObject(Fields.SHARDS);\n        for (IndexShardSegments indexSegment : indexSegments) {\n            builder.startArray(Integer.toString(indexSegment.getShardId().id()));\n            for (ShardSegments shardSegments : indexSegment) {\n                builder.startObject();\n                builder.startObject(Fields.ROUTING);\n                builder.field(Fields.STATE, shardSegments.getShardRouting().state());\n                builder.field(Fields.PRIMARY, shardSegments.getShardRouting().primary());\n                builder.field(Fields.NODE, shardSegments.getShardRouting().currentNodeId());\n                if (shardSegments.getShardRouting().relocatingNodeId() != null) {\n                    builder.field(Fields.RELOCATING_NODE, shardSegments.getShardRouting().relocatingNodeId());\n                }\n                builder.endObject();\n                builder.field(Fields.NUM_COMMITTED_SEGMENTS, shardSegments.getNumberOfCommitted());\n                builder.field(Fields.NUM_SEARCH_SEGMENTS, shardSegments.getNumberOfSearch());\n                builder.startObject(Fields.SEGMENTS);\n                for (Segment segment : shardSegments) {\n                    builder.startObject(segment.getName());\n                    builder.field(Fields.GENERATION, segment.getGeneration());\n                    builder.field(Fields.NUM_DOCS, segment.getNumDocs());\n                    builder.field(Fields.DELETED_DOCS, segment.getDeletedDocs());\n                    builder.byteSizeField(Fields.SIZE_IN_BYTES, Fields.SIZE, segment.getSizeInBytes());\n                    builder.byteSizeField(Fields.MEMORY_IN_BYTES, Fields.MEMORY, segment.getMemoryInBytes());\n                    builder.field(Fields.COMMITTED, segment.isCommitted());\n                    builder.field(Fields.SEARCH, segment.isSearch());\n                    if (segment.getVersion() != null) {\n                        builder.field(Fields.VERSION, segment.getVersion());\n                    }\n                    if (segment.isCompound() != null) {\n                        builder.field(Fields.COMPOUND, segment.isCompound());\n                    }\n                    if (segment.getMergeId() != null) {\n                        builder.field(Fields.MERGE_ID, segment.getMergeId());\n                    }\n                    if (segment.getSegmentSort() != null) {\n                        toXContent(builder, segment.getSegmentSort());\n                    }\n                    if (segment.ramTree != null) {\n                        builder.startArray(Fields.RAM_TREE);\n                        for (Accountable child : segment.ramTree.getChildResources()) {\n                            toXContent(builder, child);\n                        }\n                        builder.endArray();\n                    }\n                    if (segment.attributes != null && segment.attributes.isEmpty() == false) {\n                        builder.field(\"attributes\", segment.attributes);\n                    }\n                    builder.endObject();\n                }\n                builder.endObject();\n                builder.endObject();\n            }\n            builder.endArray();\n        }\n        builder.endObject();\n        builder.endObject();\n    }\n    builder.endObject();\n}"
    },
    {
      "commit": "99f88f15c5febbca2d13b5b5fda27b844153bf1a",
      "startLine": 21,
      "endLine": 55,
      "methodCode": "@Override\npublic XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n    builder.startObject(Fields.INDICES);\n    for (IndexSegments indexSegments : getIndices().values()) {\n        builder.startObject(indexSegments.getIndex());\n        builder.startObject(Fields.SHARDS);\n        for (IndexShardSegments indexSegment : indexSegments) {\n            builder.startArray(Integer.toString(indexSegment.getShardId().id()));\n            for (ShardSegments shardSegments : indexSegment) {\n                builder.startObject();\n                builder.startObject(Fields.ROUTING);\n                builder.field(Fields.STATE, shardSegments.getShardRouting().state());\n                builder.field(Fields.PRIMARY, shardSegments.getShardRouting().primary());\n                builder.field(Fields.NODE, shardSegments.getShardRouting().currentNodeId());\n                if (shardSegments.getShardRouting().relocatingNodeId() != null) {\n                    builder.field(Fields.RELOCATING_NODE, shardSegments.getShardRouting().relocatingNodeId());\n                }\n                builder.endObject();\n                builder.field(Fields.NUM_COMMITTED_SEGMENTS, shardSegments.getNumberOfCommitted());\n                builder.field(Fields.NUM_SEARCH_SEGMENTS, shardSegments.getNumberOfSearch());\n                builder.startObject(Fields.SEGMENTS);\n                for (Segment segment : shardSegments) {\n                    builder.startObject(segment.getName());\n                    builder.field(Fields.GENERATION, segment.getGeneration());\n                    builder.field(Fields.NUM_DOCS, segment.getNumDocs());\n                    builder.field(Fields.DELETED_DOCS, segment.getDeletedDocs());\n                    builder.byteSizeField(Fields.SIZE_IN_BYTES, Fields.SIZE, segment.getSizeInBytes());\n                    builder.byteSizeField(Fields.MEMORY_IN_BYTES, Fields.MEMORY, segment.getMemoryInBytes());\n                    builder.field(Fields.COMMITTED, segment.isCommitted());\n                    builder.field(Fields.SEARCH, segment.isSearch());\n                    if (segment.getVersion() != null) {\n                        builder.field(Fields.VERSION, segment.getVersion());\n                    }\n                    if (segment.isCompound() != null) {\n                        builder.field(Fields.COMPOUND, segment.isCompound());\n                    }\n                    if (segment.getMergeId() != null) {\n                        builder.field(Fields.MERGE_ID, segment.getMergeId());\n                    }\n                    if (segment.getSegmentSort() != null) {\n                        toXContent(builder, segment.getSegmentSort());\n                    }\n                    if (segment.ramTree != null) {\n                        builder.startArray(Fields.RAM_TREE);\n                        for (Accountable child : segment.ramTree.getChildResources()) {\n                            toXContent(builder, child);\n                        }\n                        builder.endArray();\n                    }\n                    if (segment.attributes != null && segment.attributes.isEmpty() == false) {\n                        builder.field(\"attributes\", segment.attributes);\n                    }\n                    builder.endObject();\n                }\n                builder.endObject();\n                builder.endObject();\n            }\n            builder.endArray();\n        }\n        builder.endObject();\n        builder.endObject();\n    }\n    builder.endObject();\n    return builder;\n}"
    },
    {
      "commit": "22292e8d964d2b7239f0fc306ea91692bdbc8b1e",
      "startLine": 21,
      "endLine": 55,
      "methodCode": "@Override\npublic XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n    builder.startObject(Fields.INDICES);\n    for (IndexSegments indexSegments : getIndices().values()) {\n        builder.startObject(indexSegments.getIndex());\n        builder.startObject(Fields.SHARDS);\n        for (IndexShardSegments indexSegment : indexSegments) {\n            builder.startArray(Integer.toString(indexSegment.getShardId().id()));\n            for (ShardSegments shardSegments : indexSegment) {\n                builder.startObject();\n                builder.startObject(Fields.ROUTING);\n                builder.field(Fields.STATE, shardSegments.getShardRouting().state());\n                builder.field(Fields.PRIMARY, shardSegments.getShardRouting().primary());\n                builder.field(Fields.NODE, shardSegments.getShardRouting().currentNodeId());\n                if (shardSegments.getShardRouting().relocatingNodeId() != null) {\n                    builder.field(Fields.RELOCATING_NODE, shardSegments.getShardRouting().relocatingNodeId());\n                }\n                builder.endObject();\n                builder.field(Fields.NUM_COMMITTED_SEGMENTS, shardSegments.getNumberOfCommitted());\n                builder.field(Fields.NUM_SEARCH_SEGMENTS, shardSegments.getNumberOfSearch());\n                builder.startObject(Fields.SEGMENTS);\n                for (Segment segment : shardSegments) {\n                    builder.startObject(segment.getName());\n                    builder.field(Fields.GENERATION, segment.getGeneration());\n                    builder.field(Fields.NUM_DOCS, segment.getNumDocs());\n                    builder.field(Fields.DELETED_DOCS, segment.getDeletedDocs());\n                    builder.byteSizeField(Fields.SIZE_IN_BYTES, Fields.SIZE, segment.getSizeInBytes());\n                    builder.byteSizeField(Fields.MEMORY_IN_BYTES, Fields.MEMORY, segment.getMemoryInBytes());\n                    builder.field(Fields.COMMITTED, segment.isCommitted());\n                    builder.field(Fields.SEARCH, segment.isSearch());\n                    if (segment.getVersion() != null) {\n                        builder.field(Fields.VERSION, segment.getVersion());\n                    }\n                    if (segment.isCompound() != null) {\n                        builder.field(Fields.COMPOUND, segment.isCompound());\n                    }\n                    if (segment.getMergeId() != null) {\n                        builder.field(Fields.MERGE_ID, segment.getMergeId());\n                    }\n                    if (segment.getSegmentSort() != null) {\n                        toXContent(builder, segment.getSegmentSort());\n                    }\n                    if (segment.ramTree != null) {\n                        builder.startArray(Fields.RAM_TREE);\n                        for (Accountable child : segment.ramTree.getChildResources()) {\n                            toXContent(builder, child);\n                        }\n                        builder.endArray();\n                    }\n                    if (segment.attributes != null && segment.attributes.isEmpty() == false) {\n                        builder.field(\"attributes\", segment.attributes);\n                    }\n                    builder.endObject();\n                }\n                builder.endObject();\n                builder.endObject();\n            }\n            builder.endArray();\n        }\n        builder.endObject();\n        builder.endObject();\n    }\n    builder.endObject();\n    return builder;\n}"
    },
    {
      "commit": "f05af0a382a995cb254a851d2306f12c3da2cd1b",
      "startLine": 21,
      "endLine": 52,
      "methodCode": "@Override\npublic XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n    builder.startObject(Fields.INDICES);\n    for (IndexSegments indexSegments : getIndices().values()) {\n        builder.startObject(indexSegments.getIndex());\n        builder.startObject(Fields.SHARDS);\n        for (IndexShardSegments indexSegment : indexSegments) {\n            builder.startArray(Integer.toString(indexSegment.getShardId().id()));\n            for (ShardSegments shardSegments : indexSegment) {\n                builder.startObject();\n                builder.startObject(Fields.ROUTING);\n                builder.field(Fields.STATE, shardSegments.getShardRouting().state());\n                builder.field(Fields.PRIMARY, shardSegments.getShardRouting().primary());\n                builder.field(Fields.NODE, shardSegments.getShardRouting().currentNodeId());\n                if (shardSegments.getShardRouting().relocatingNodeId() != null) {\n                    builder.field(Fields.RELOCATING_NODE, shardSegments.getShardRouting().relocatingNodeId());\n                }\n                builder.endObject();\n                builder.field(Fields.NUM_COMMITTED_SEGMENTS, shardSegments.getNumberOfCommitted());\n                builder.field(Fields.NUM_SEARCH_SEGMENTS, shardSegments.getNumberOfSearch());\n                builder.startObject(Fields.SEGMENTS);\n                for (Segment segment : shardSegments) {\n                    builder.startObject(segment.getName());\n                    builder.field(Fields.GENERATION, segment.getGeneration());\n                    builder.field(Fields.NUM_DOCS, segment.getNumDocs());\n                    builder.field(Fields.DELETED_DOCS, segment.getDeletedDocs());\n                    builder.byteSizeField(Fields.SIZE_IN_BYTES, Fields.SIZE, segment.getSizeInBytes());\n                    builder.byteSizeField(Fields.MEMORY_IN_BYTES, Fields.MEMORY, segment.getMemoryInBytes());\n                    builder.field(Fields.COMMITTED, segment.isCommitted());\n                    builder.field(Fields.SEARCH, segment.isSearch());\n                    if (segment.getVersion() != null) {\n                        builder.field(Fields.VERSION, segment.getVersion());\n                    }\n                    if (segment.isCompound() != null) {\n                        builder.field(Fields.COMPOUND, segment.isCompound());\n                    }\n                    if (segment.getMergeId() != null) {\n                        builder.field(Fields.MERGE_ID, segment.getMergeId());\n                    }\n                    if (segment.getSegmentSort() != null) {\n                        toXContent(builder, segment.getSegmentSort());\n                    }\n                    if (segment.ramTree != null) {\n                        builder.startArray(Fields.RAM_TREE);\n                        for (Accountable child : segment.ramTree.getChildResources()) {\n                            toXContent(builder, child);\n                        }\n                        builder.endArray();\n                    }\n                    builder.endObject();\n                }\n                builder.endObject();\n                builder.endObject();\n            }\n            builder.endArray();\n        }\n        builder.endObject();\n        builder.endObject();\n    }\n    builder.endObject();\n    return builder;\n}"
    },
    {
      "commit": "88dd6ba430e729d473432076a6eba1f6cb85c136",
      "startLine": 21,
      "endLine": 49,
      "methodCode": "@Override\npublic XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n    builder.startObject(Fields.INDICES);\n    for (IndexSegments indexSegments : getIndices().values()) {\n        builder.startObject(indexSegments.getIndex());\n        builder.startObject(Fields.SHARDS);\n        for (IndexShardSegments indexSegment : indexSegments) {\n            builder.startArray(Integer.toString(indexSegment.getShardId().id()));\n            for (ShardSegments shardSegments : indexSegment) {\n                builder.startObject();\n                builder.startObject(Fields.ROUTING);\n                builder.field(Fields.STATE, shardSegments.getShardRouting().state());\n                builder.field(Fields.PRIMARY, shardSegments.getShardRouting().primary());\n                builder.field(Fields.NODE, shardSegments.getShardRouting().currentNodeId());\n                if (shardSegments.getShardRouting().relocatingNodeId() != null) {\n                    builder.field(Fields.RELOCATING_NODE, shardSegments.getShardRouting().relocatingNodeId());\n                }\n                builder.endObject();\n                builder.field(Fields.NUM_COMMITTED_SEGMENTS, shardSegments.getNumberOfCommitted());\n                builder.field(Fields.NUM_SEARCH_SEGMENTS, shardSegments.getNumberOfSearch());\n                builder.startObject(Fields.SEGMENTS);\n                for (Segment segment : shardSegments) {\n                    builder.startObject(segment.getName());\n                    builder.field(Fields.GENERATION, segment.getGeneration());\n                    builder.field(Fields.NUM_DOCS, segment.getNumDocs());\n                    builder.field(Fields.DELETED_DOCS, segment.getDeletedDocs());\n                    builder.byteSizeField(Fields.SIZE_IN_BYTES, Fields.SIZE, segment.getSizeInBytes());\n                    builder.byteSizeField(Fields.MEMORY_IN_BYTES, Fields.MEMORY, segment.getMemoryInBytes());\n                    builder.field(Fields.COMMITTED, segment.isCommitted());\n                    builder.field(Fields.SEARCH, segment.isSearch());\n                    if (segment.getVersion() != null) {\n                        builder.field(Fields.VERSION, segment.getVersion());\n                    }\n                    if (segment.isCompound() != null) {\n                        builder.field(Fields.COMPOUND, segment.isCompound());\n                    }\n                    if (segment.getMergeId() != null) {\n                        builder.field(Fields.MERGE_ID, segment.getMergeId());\n                    }\n                    if (segment.ramTree != null) {\n                        builder.startArray(Fields.RAM_TREE);\n                        for (Accountable child : segment.ramTree.getChildResources()) {\n                            toXContent(builder, child);\n                        }\n                        builder.endArray();\n                    }\n                    builder.endObject();\n                }\n                builder.endObject();\n                builder.endObject();\n            }\n            builder.endArray();\n        }\n        builder.endObject();\n        builder.endObject();\n    }\n    builder.endObject();\n    return builder;\n}"
    },
    {
      "commit": "15a62448343fd24f8e63f43b1e4b16f50005e4a5",
      "startLine": 21,
      "endLine": 49,
      "methodCode": "@Override\npublic XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n    builder.startObject(Fields.INDICES);\n    for (IndexSegments indexSegments : getIndices().values()) {\n        builder.startObject(indexSegments.getIndex(), XContentBuilder.FieldCaseConversion.NONE);\n        builder.startObject(Fields.SHARDS);\n        for (IndexShardSegments indexSegment : indexSegments) {\n            builder.startArray(Integer.toString(indexSegment.getShardId().id()));\n            for (ShardSegments shardSegments : indexSegment) {\n                builder.startObject();\n                builder.startObject(Fields.ROUTING);\n                builder.field(Fields.STATE, shardSegments.getShardRouting().state());\n                builder.field(Fields.PRIMARY, shardSegments.getShardRouting().primary());\n                builder.field(Fields.NODE, shardSegments.getShardRouting().currentNodeId());\n                if (shardSegments.getShardRouting().relocatingNodeId() != null) {\n                    builder.field(Fields.RELOCATING_NODE, shardSegments.getShardRouting().relocatingNodeId());\n                }\n                builder.endObject();\n                builder.field(Fields.NUM_COMMITTED_SEGMENTS, shardSegments.getNumberOfCommitted());\n                builder.field(Fields.NUM_SEARCH_SEGMENTS, shardSegments.getNumberOfSearch());\n                builder.startObject(Fields.SEGMENTS);\n                for (Segment segment : shardSegments) {\n                    builder.startObject(segment.getName());\n                    builder.field(Fields.GENERATION, segment.getGeneration());\n                    builder.field(Fields.NUM_DOCS, segment.getNumDocs());\n                    builder.field(Fields.DELETED_DOCS, segment.getDeletedDocs());\n                    builder.byteSizeField(Fields.SIZE_IN_BYTES, Fields.SIZE, segment.getSizeInBytes());\n                    builder.byteSizeField(Fields.MEMORY_IN_BYTES, Fields.MEMORY, segment.getMemoryInBytes());\n                    builder.field(Fields.COMMITTED, segment.isCommitted());\n                    builder.field(Fields.SEARCH, segment.isSearch());\n                    if (segment.getVersion() != null) {\n                        builder.field(Fields.VERSION, segment.getVersion());\n                    }\n                    if (segment.isCompound() != null) {\n                        builder.field(Fields.COMPOUND, segment.isCompound());\n                    }\n                    if (segment.getMergeId() != null) {\n                        builder.field(Fields.MERGE_ID, segment.getMergeId());\n                    }\n                    if (segment.ramTree != null) {\n                        builder.startArray(Fields.RAM_TREE);\n                        for (Accountable child : segment.ramTree.getChildResources()) {\n                            toXContent(builder, child);\n                        }\n                        builder.endArray();\n                    }\n                    builder.endObject();\n                }\n                builder.endObject();\n                builder.endObject();\n            }\n            builder.endArray();\n        }\n        builder.endObject();\n        builder.endObject();\n    }\n    builder.endObject();\n    return builder;\n}"
    },
    {
      "commit": "f7f99b8dbfe4cc10612faceec8f82e03884f0d6d",
      "startLine": 21,
      "endLine": 49,
      "methodCode": "@Override\npublic XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n    builder.startObject(Fields.INDICES);\n    for (IndexSegments indexSegments : getIndices().values()) {\n        builder.startObject(indexSegments.getIndex(), XContentBuilder.FieldCaseConversion.NONE);\n        builder.startObject(Fields.SHARDS);\n        for (IndexShardSegments indexSegment : indexSegments) {\n            builder.startArray(Integer.toString(indexSegment.getShardId().id()));\n            for (ShardSegments shardSegments : indexSegment) {\n                builder.startObject();\n                builder.startObject(Fields.ROUTING);\n                builder.field(Fields.STATE, shardSegments.getShardRouting().state());\n                builder.field(Fields.PRIMARY, shardSegments.getShardRouting().primary());\n                builder.field(Fields.NODE, shardSegments.getShardRouting().currentNodeId());\n                if (shardSegments.getShardRouting().relocatingNodeId() != null) {\n                    builder.field(Fields.RELOCATING_NODE, shardSegments.getShardRouting().relocatingNodeId());\n                }\n                builder.endObject();\n                builder.field(Fields.NUM_COMMITTED_SEGMENTS, shardSegments.getNumberOfCommitted());\n                builder.field(Fields.NUM_SEARCH_SEGMENTS, shardSegments.getNumberOfSearch());\n                builder.startObject(Fields.SEGMENTS);\n                for (Segment segment : shardSegments) {\n                    builder.startObject(segment.getName());\n                    builder.field(Fields.GENERATION, segment.getGeneration());\n                    builder.field(Fields.NUM_DOCS, segment.getNumDocs());\n                    builder.field(Fields.DELETED_DOCS, segment.getDeletedDocs());\n                    builder.byteSizeField(Fields.SIZE_IN_BYTES, Fields.SIZE, segment.getSizeInBytes());\n                    builder.byteSizeField(Fields.MEMORY_IN_BYTES, Fields.MEMORY, segment.getMemoryInBytes());\n                    builder.field(Fields.COMMITTED, segment.isCommitted());\n                    builder.field(Fields.SEARCH, segment.isSearch());\n                    if (segment.getVersion() != null) {\n                        builder.field(Fields.VERSION, segment.getVersion());\n                    }\n                    if (segment.isCompound() != null) {\n                        builder.field(Fields.COMPOUND, segment.isCompound());\n                    }\n                    if (segment.getMergeId() != null) {\n                        builder.field(Fields.MERGE_ID, segment.getMergeId());\n                    }\n                    if (segment.ramTree != null) {\n                        builder.startArray(Fields.RAM_TREE);\n                        for (Accountable child : segment.ramTree.getChildResources()) {\n                            toXContent(builder, child);\n                        }\n                        builder.endArray();\n                    }\n                    builder.endObject();\n                }\n                builder.endObject();\n                builder.endObject();\n            }\n            builder.endArray();\n        }\n        builder.endObject();\n        builder.endObject();\n    }\n    builder.endObject();\n    return builder;\n}"
    },
    {
      "commit": "95ca06cf0945233686e92ccdb3354522ff05863c",
      "startLine": 21,
      "endLine": 42,
      "methodCode": "@Override\npublic XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n    builder.startObject(Fields.INDICES);\n    for (IndexSegments indexSegments : getIndices().values()) {\n        builder.startObject(indexSegments.getIndex(), XContentBuilder.FieldCaseConversion.NONE);\n        builder.startObject(Fields.SHARDS);\n        for (IndexShardSegments indexSegment : indexSegments) {\n            builder.startArray(Integer.toString(indexSegment.getShardId().id()));\n            for (ShardSegments shardSegments : indexSegment) {\n                builder.startObject();\n                builder.startObject(Fields.ROUTING);\n                builder.field(Fields.STATE, shardSegments.getShardRouting().state());\n                builder.field(Fields.PRIMARY, shardSegments.getShardRouting().primary());\n                builder.field(Fields.NODE, shardSegments.getShardRouting().currentNodeId());\n                if (shardSegments.getShardRouting().relocatingNodeId() != null) {\n                    builder.field(Fields.RELOCATING_NODE, shardSegments.getShardRouting().relocatingNodeId());\n                }\n                builder.endObject();\n                builder.field(Fields.NUM_COMMITTED_SEGMENTS, shardSegments.getNumberOfCommitted());\n                builder.field(Fields.NUM_SEARCH_SEGMENTS, shardSegments.getNumberOfSearch());\n                builder.startObject(Fields.SEGMENTS);\n                for (Segment segment : shardSegments) {\n                    builder.startObject(segment.getName());\n                    builder.field(Fields.GENERATION, segment.getGeneration());\n                    builder.field(Fields.NUM_DOCS, segment.getNumDocs());\n                    builder.field(Fields.DELETED_DOCS, segment.getDeletedDocs());\n                    builder.byteSizeField(Fields.SIZE_IN_BYTES, Fields.SIZE, segment.getSizeInBytes());\n                    builder.byteSizeField(Fields.MEMORY_IN_BYTES, Fields.MEMORY, segment.getMemoryInBytes());\n                    builder.field(Fields.COMMITTED, segment.isCommitted());\n                    builder.field(Fields.SEARCH, segment.isSearch());\n                    if (segment.getVersion() != null) {\n                        builder.field(Fields.VERSION, segment.getVersion());\n                    }\n                    if (segment.isCompound() != null) {\n                        builder.field(Fields.COMPOUND, segment.isCompound());\n                    }\n                    if (segment.getMergeId() != null) {\n                        builder.field(Fields.MERGE_ID, segment.getMergeId());\n                    }\n                    builder.endObject();\n                }\n                builder.endObject();\n                builder.endObject();\n            }\n            builder.endArray();\n        }\n        builder.endObject();\n        builder.endObject();\n    }\n    builder.endObject();\n    return builder;\n}"
    },
    {
      "commit": "c093e90d517a3652d8b8f46c61a48097132a8cef",
      "startLine": 21,
      "endLine": 41,
      "methodCode": "@Override\npublic XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n    builder.startObject(Fields.INDICES);\n    for (IndexSegments indexSegments : getIndices().values()) {\n        builder.startObject(indexSegments.getIndex(), XContentBuilder.FieldCaseConversion.NONE);\n        builder.startObject(Fields.SHARDS);\n        for (IndexShardSegments indexSegment : indexSegments) {\n            builder.startArray(Integer.toString(indexSegment.getShardId().id()));\n            for (ShardSegments shardSegments : indexSegment) {\n                builder.startObject();\n                builder.startObject(Fields.ROUTING);\n                builder.field(Fields.STATE, shardSegments.getShardRouting().state());\n                builder.field(Fields.PRIMARY, shardSegments.getShardRouting().primary());\n                builder.field(Fields.NODE, shardSegments.getShardRouting().currentNodeId());\n                if (shardSegments.getShardRouting().relocatingNodeId() != null) {\n                    builder.field(Fields.RELOCATING_NODE, shardSegments.getShardRouting().relocatingNodeId());\n                }\n                builder.endObject();\n                builder.field(Fields.NUM_COMMITTED_SEGMENTS, shardSegments.getNumberOfCommitted());\n                builder.field(Fields.NUM_SEARCH_SEGMENTS, shardSegments.getNumberOfSearch());\n                builder.startObject(Fields.SEGMENTS);\n                for (Segment segment : shardSegments) {\n                    builder.startObject(segment.getName());\n                    builder.field(Fields.GENERATION, segment.getGeneration());\n                    builder.field(Fields.NUM_DOCS, segment.getNumDocs());\n                    builder.field(Fields.DELETED_DOCS, segment.getDeletedDocs());\n                    builder.byteSizeField(Fields.SIZE_IN_BYTES, Fields.SIZE, segment.getSizeInBytes());\n                    builder.field(Fields.COMMITTED, segment.isCommitted());\n                    builder.field(Fields.SEARCH, segment.isSearch());\n                    if (segment.getVersion() != null) {\n                        builder.field(Fields.VERSION, segment.getVersion());\n                    }\n                    if (segment.isCompound() != null) {\n                        builder.field(Fields.COMPOUND, segment.isCompound());\n                    }\n                    if (segment.getMergeId() != null) {\n                        builder.field(Fields.MERGE_ID, segment.getMergeId());\n                    }\n                    builder.endObject();\n                }\n                builder.endObject();\n                builder.endObject();\n            }\n            builder.endArray();\n        }\n        builder.endObject();\n        builder.endObject();\n    }\n    builder.endObject();\n    return builder;\n}"
    },
    {
      "commit": "6e19ca808056e3c69545a837180d23faa863fec7",
      "startLine": 21,
      "endLine": 38,
      "methodCode": "@Override\npublic XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n    builder.startObject(Fields.INDICES);\n    for (IndexSegments indexSegments : getIndices().values()) {\n        builder.startObject(indexSegments.getIndex(), XContentBuilder.FieldCaseConversion.NONE);\n        builder.startObject(Fields.SHARDS);\n        for (IndexShardSegments indexSegment : indexSegments) {\n            builder.startArray(Integer.toString(indexSegment.getShardId().id()));\n            for (ShardSegments shardSegments : indexSegment) {\n                builder.startObject();\n                builder.startObject(Fields.ROUTING);\n                builder.field(Fields.STATE, shardSegments.getShardRouting().state());\n                builder.field(Fields.PRIMARY, shardSegments.getShardRouting().primary());\n                builder.field(Fields.NODE, shardSegments.getShardRouting().currentNodeId());\n                if (shardSegments.getShardRouting().relocatingNodeId() != null) {\n                    builder.field(Fields.RELOCATING_NODE, shardSegments.getShardRouting().relocatingNodeId());\n                }\n                builder.endObject();\n                builder.field(Fields.NUM_COMMITTED_SEGMENTS, shardSegments.getNumberOfCommitted());\n                builder.field(Fields.NUM_SEARCH_SEGMENTS, shardSegments.getNumberOfSearch());\n                builder.startObject(Fields.SEGMENTS);\n                for (Segment segment : shardSegments) {\n                    builder.startObject(segment.getName());\n                    builder.field(Fields.GENERATION, segment.getGeneration());\n                    builder.field(Fields.NUM_DOCS, segment.getNumDocs());\n                    builder.field(Fields.DELETED_DOCS, segment.getDeletedDocs());\n                    builder.byteSizeField(Fields.SIZE_IN_BYTES, Fields.SIZE, segment.getSizeInBytes());\n                    builder.field(Fields.COMMITTED, segment.isCommitted());\n                    builder.field(Fields.SEARCH, segment.isSearch());\n                    if (segment.getVersion() != null) {\n                        builder.field(Fields.VERSION, segment.getVersion());\n                    }\n                    if (segment.isCompound() != null) {\n                        builder.field(Fields.COMPOUND, segment.isCompound());\n                    }\n                    builder.endObject();\n                }\n                builder.endObject();\n                builder.endObject();\n            }\n            builder.endArray();\n        }\n        builder.endObject();\n        builder.endObject();\n    }\n    builder.endObject();\n    return builder;\n}"
    },
    {
      "commit": "a3071540d7f245db5a55d30133bebe067ac9f7d4",
      "startLine": 21,
      "endLine": 38,
      "methodCode": "@Override\npublic XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n    builder.startObject(Fields.INDICES);\n    for (IndexSegments indexSegments : getIndices().values()) {\n        builder.startObject(indexSegments.getIndex(), XContentBuilder.FieldCaseConversion.NONE);\n        builder.startObject(Fields.SHARDS);\n        for (IndexShardSegments indexSegment : indexSegments) {\n            builder.startArray(Integer.toString(indexSegment.getShardId().id()));\n            for (ShardSegments shardSegments : indexSegment) {\n                builder.startObject();\n                builder.startObject(Fields.ROUTING);\n                builder.field(Fields.STATE, shardSegments.getShardRouting().state());\n                builder.field(Fields.PRIMARY, shardSegments.getShardRouting().primary());\n                builder.field(Fields.NODE, shardSegments.getShardRouting().currentNodeId());\n                if (shardSegments.getShardRouting().relocatingNodeId() != null) {\n                    builder.field(Fields.RELOCATING_NODE, shardSegments.getShardRouting().relocatingNodeId());\n                }\n                builder.endObject();\n                builder.field(Fields.NUM_COMMITTED_SEGMENTS, shardSegments.getNumberOfCommitted());\n                builder.field(Fields.NUM_SEARCH_SEGMENTS, shardSegments.getNumberOfSearch());\n                builder.startObject(Fields.SEGMENTS);\n                for (Segment segment : shardSegments) {\n                    builder.startObject(segment.getName());\n                    builder.field(Fields.GENERATION, segment.getGeneration());\n                    builder.field(Fields.NUM_DOCS, segment.getNumDocs());\n                    builder.field(Fields.DELETED_DOCS, segment.getDeletedDocs());\n                    builder.byteSizeField(Fields.SIZE, Fields.SIZE_IN_BYTES, segment.getSizeInBytes());\n                    builder.field(Fields.COMMITTED, segment.isCommitted());\n                    builder.field(Fields.SEARCH, segment.isSearch());\n                    if (segment.getVersion() != null) {\n                        builder.field(Fields.VERSION, segment.getVersion());\n                    }\n                    if (segment.isCompound() != null) {\n                        builder.field(Fields.COMPOUND, segment.isCompound());\n                    }\n                    builder.endObject();\n                }\n                builder.endObject();\n                builder.endObject();\n            }\n            builder.endArray();\n        }\n        builder.endObject();\n        builder.endObject();\n    }\n    builder.endObject();\n    return builder;\n}"
    },
    {
      "commit": "1fc37e59547ba544ab1a4677f2622c9e39b26313",
      "startLine": 21,
      "endLine": 39,
      "methodCode": "@Override\npublic XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n    builder.startObject(Fields.INDICES);\n    for (IndexSegments indexSegments : getIndices().values()) {\n        builder.startObject(indexSegments.getIndex(), XContentBuilder.FieldCaseConversion.NONE);\n        builder.startObject(Fields.SHARDS);\n        for (IndexShardSegments indexSegment : indexSegments) {\n            builder.startArray(Integer.toString(indexSegment.getShardId().id()));\n            for (ShardSegments shardSegments : indexSegment) {\n                builder.startObject();\n                builder.startObject(Fields.ROUTING);\n                builder.field(Fields.STATE, shardSegments.getShardRouting().state());\n                builder.field(Fields.PRIMARY, shardSegments.getShardRouting().primary());\n                builder.field(Fields.NODE, shardSegments.getShardRouting().currentNodeId());\n                if (shardSegments.getShardRouting().relocatingNodeId() != null) {\n                    builder.field(Fields.RELOCATING_NODE, shardSegments.getShardRouting().relocatingNodeId());\n                }\n                builder.endObject();\n                builder.field(Fields.NUM_COMMITTED_SEGMENTS, shardSegments.getNumberOfCommitted());\n                builder.field(Fields.NUM_SEARCH_SEGMENTS, shardSegments.getNumberOfSearch());\n                builder.startObject(Fields.SEGMENTS);\n                for (Segment segment : shardSegments) {\n                    builder.startObject(segment.getName());\n                    builder.field(Fields.GENERATION, segment.getGeneration());\n                    builder.field(Fields.NUM_DOCS, segment.getNumDocs());\n                    builder.field(Fields.DELETED_DOCS, segment.getDeletedDocs());\n                    builder.field(Fields.SIZE, segment.getSize().toString());\n                    builder.field(Fields.SIZE_IN_BYTES, segment.getSizeInBytes());\n                    builder.field(Fields.COMMITTED, segment.isCommitted());\n                    builder.field(Fields.SEARCH, segment.isSearch());\n                    if (segment.getVersion() != null) {\n                        builder.field(Fields.VERSION, segment.getVersion());\n                    }\n                    if (segment.isCompound() != null) {\n                        builder.field(Fields.COMPOUND, segment.isCompound());\n                    }\n                    builder.endObject();\n                }\n                builder.endObject();\n                builder.endObject();\n            }\n            builder.endArray();\n        }\n        builder.endObject();\n        builder.endObject();\n    }\n    builder.endObject();\n    return builder;\n}"
    },
    {
      "commit": "cc83c2f848be69a77f1275fe1ff5363dcdd4c955",
      "startLine": 21,
      "endLine": 33,
      "methodCode": "@Override\npublic XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n    builder.startObject(Fields.INDICES);\n    for (IndexSegments indexSegments : getIndices().values()) {\n        builder.startObject(indexSegments.getIndex(), XContentBuilder.FieldCaseConversion.NONE);\n        builder.startObject(Fields.SHARDS);\n        for (IndexShardSegments indexSegment : indexSegments) {\n            builder.startArray(Integer.toString(indexSegment.getShardId().id()));\n            for (ShardSegments shardSegments : indexSegment) {\n                builder.startObject();\n                builder.startObject(Fields.ROUTING);\n                builder.field(Fields.STATE, shardSegments.getShardRouting().state());\n                builder.field(Fields.PRIMARY, shardSegments.getShardRouting().primary());\n                builder.field(Fields.NODE, shardSegments.getShardRouting().currentNodeId());\n                if (shardSegments.getShardRouting().relocatingNodeId() != null) {\n                    builder.field(Fields.RELOCATING_NODE, shardSegments.getShardRouting().relocatingNodeId());\n                }\n                builder.endObject();\n                builder.field(Fields.NUM_COMMITTED_SEGMENTS, shardSegments.getNumberOfCommitted());\n                builder.field(Fields.NUM_SEARCH_SEGMENTS, shardSegments.getNumberOfSearch());\n                builder.startObject(Fields.SEGMENTS);\n                for (Segment segment : shardSegments) {\n                    builder.startObject(segment.name());\n                    builder.field(Fields.GENERATION, segment.generation());\n                    builder.field(Fields.NUM_DOCS, segment.numDocs());\n                    builder.field(Fields.DELETED_DOCS, segment.deletedDocs());\n                    builder.field(Fields.SIZE, segment.size().toString());\n                    builder.field(Fields.SIZE_IN_BYTES, segment.sizeInBytes());\n                    builder.field(Fields.COMMITTED, segment.committed());\n                    builder.field(Fields.SEARCH, segment.search());\n                    builder.endObject();\n                }\n                builder.endObject();\n                builder.endObject();\n            }\n            builder.endArray();\n        }\n        builder.endObject();\n        builder.endObject();\n    }\n    builder.endObject();\n    return builder;\n}"
    },
    {
      "commit": "a8fd2d48b8f3f17d68ed27c3104e2c9e2eb6cc9c",
      "startLine": 21,
      "endLine": 33,
      "methodCode": "@Override\npublic XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n    builder.startObject(Fields.INDICES);\n    for (IndexSegments indexSegments : indices().values()) {\n        builder.startObject(indexSegments.index(), XContentBuilder.FieldCaseConversion.NONE);\n        builder.startObject(Fields.SHARDS);\n        for (IndexShardSegments indexSegment : indexSegments) {\n            builder.startArray(Integer.toString(indexSegment.shardId().id()));\n            for (ShardSegments shardSegments : indexSegment) {\n                builder.startObject();\n                builder.startObject(Fields.ROUTING);\n                builder.field(Fields.STATE, shardSegments.shardRouting().state());\n                builder.field(Fields.PRIMARY, shardSegments.shardRouting().primary());\n                builder.field(Fields.NODE, shardSegments.shardRouting().currentNodeId());\n                if (shardSegments.shardRouting().relocatingNodeId() != null) {\n                    builder.field(Fields.RELOCATING_NODE, shardSegments.shardRouting().relocatingNodeId());\n                }\n                builder.endObject();\n                builder.field(Fields.NUM_COMMITTED_SEGMENTS, shardSegments.numberOfCommitted());\n                builder.field(Fields.NUM_SEARCH_SEGMENTS, shardSegments.numberOfSearch());\n                builder.startObject(Fields.SEGMENTS);\n                for (Segment segment : shardSegments) {\n                    builder.startObject(segment.name());\n                    builder.field(Fields.GENERATION, segment.generation());\n                    builder.field(Fields.NUM_DOCS, segment.numDocs());\n                    builder.field(Fields.DELETED_DOCS, segment.deletedDocs());\n                    builder.field(Fields.SIZE, segment.size().toString());\n                    builder.field(Fields.SIZE_IN_BYTES, segment.sizeInBytes());\n                    builder.field(Fields.COMMITTED, segment.committed());\n                    builder.field(Fields.SEARCH, segment.search());\n                    builder.endObject();\n                }\n                builder.endObject();\n                builder.endObject();\n            }\n            builder.endArray();\n        }\n        builder.endObject();\n        builder.endObject();\n    }\n    builder.endObject();\n    return builder;\n}"
    },
    {
      "commit": "3eaf73a380000acef6b971fe09a7d1f38aa748d1",
      "startLine": 21,
      "endLine": 33,
      "methodCode": "@Override\npublic XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n    builder.startObject(Fields.INDICES);\n    for (IndexSegments indexSegments : indices().values()) {\n        builder.startObject(indexSegments.index(), XContentBuilder.FieldCaseConversion.NONE);\n        builder.startObject(Fields.SHARDS);\n        for (IndexShardSegments indexSegment : indexSegments) {\n            builder.startArray(Integer.toString(indexSegment.shardId().id()));\n            for (ShardSegments shardSegments : indexSegment) {\n                builder.startObject();\n                builder.startObject(Fields.ROUTING);\n                builder.field(Fields.STATE, shardSegments.shardRouting().state());\n                builder.field(Fields.PRIMARY, shardSegments.shardRouting().primary());\n                builder.field(Fields.NODE, shardSegments.shardRouting().currentNodeId());\n                if (shardSegments.shardRouting().relocatingNodeId() != null) {\n                    builder.field(Fields.RELOCATING_NODE, shardSegments.shardRouting().relocatingNodeId());\n                }\n                builder.endObject();\n                builder.field(Fields.NUM_COMMITTED_SEGMENTS, shardSegments.numberOfCommitted());\n                builder.field(Fields.NUM_SEARCH_SEGMENTS, shardSegments.numberOfSearch());\n                builder.startObject(Fields.SEGMENTS);\n                for (Segment segment : shardSegments) {\n                    builder.startObject(segment.name());\n                    builder.field(Fields.GENERATION, segment.generation());\n                    builder.field(Fields.NUM_DOCS, segment.numDocs());\n                    builder.field(Fields.DELETED_DOCS, segment.deletedDocs());\n                    builder.field(Fields.SIZE, segment.size().toString());\n                    builder.field(Fields.SIZE_IN_BYTES, segment.sizeInBytes());\n                    builder.field(Fields.COMMITTED, segment.committed());\n                    builder.field(Fields.SEARCH, segment.search());\n                    builder.endObject();\n                }\n                builder.endObject();\n                builder.endObject();\n            }\n            builder.endArray();\n        }\n        builder.endObject();\n        builder.endObject();\n    }\n    builder.endObject();\n    return builder;\n}"
    },
    {
      "commit": "b670a7f2a345aa2507714c1e8b61906c679c1107",
      "startLine": 19,
      "endLine": 31,
      "methodCode": "@Override\npublic XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n    builder.startObject(Fields.INDICES);\n    for (IndexSegments indexSegments : indices().values()) {\n        builder.startObject(indexSegments.index(), XContentBuilder.FieldCaseConversion.NONE);\n        builder.startObject(Fields.SHARDS);\n        for (IndexShardSegments indexSegment : indexSegments) {\n            builder.startArray(Integer.toString(indexSegment.shardId().id()));\n            for (ShardSegments shardSegments : indexSegment) {\n                builder.startObject();\n                builder.startObject(Fields.ROUTING);\n                builder.field(Fields.STATE, shardSegments.shardRouting().state());\n                builder.field(Fields.PRIMARY, shardSegments.shardRouting().primary());\n                builder.field(Fields.NODE, shardSegments.shardRouting().currentNodeId());\n                if (shardSegments.shardRouting().relocatingNodeId() != null) {\n                    builder.field(Fields.RELOCATING_NODE, shardSegments.shardRouting().relocatingNodeId());\n                }\n                builder.endObject();\n                builder.startObject(Fields.SEGMENTS);\n                for (Segment segment : shardSegments) {\n                    builder.startObject(segment.name());\n                    builder.field(Fields.GENERATION, segment.generation());\n                    builder.field(Fields.NUM_DOCS, segment.numDocs());\n                    builder.field(Fields.DELETED_DOCS, segment.deletedDocs());\n                    builder.field(Fields.SIZE, segment.size().toString());\n                    builder.field(Fields.SIZE_IN_BYTES, segment.sizeInBytes());\n                    builder.field(Fields.COMMITTED, segment.committed());\n                    builder.field(Fields.SEARCH, segment.search());\n                    builder.endObject();\n                }\n                builder.endObject();\n                builder.endObject();\n            }\n            builder.endArray();\n        }\n        builder.endObject();\n        builder.endObject();\n    }\n    builder.endObject();\n    return builder;\n}"
    }
  ]
}