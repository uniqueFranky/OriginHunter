{
  "statementVersions": [
    {
      "commit": "467386105ad855e793a09632142c00cd01c5dd10",
      "startLine": 5,
      "endLine": 20,
      "methodCode": "@Override\npublic void run() {\n    RandomAccessFile reader = null;\n    try {\n        long last = 0;\n        long position = 0;\n        while (getRun() && reader == null) {\n            try {\n                reader = new RandomAccessFile(file, RAF_MODE);\n            } catch (final FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader == null) {\n                Thread.sleep(delayMillis);\n            } else {\n                position = end ? file.length() : 0;\n                last = file.lastModified();\n                reader.seek(position);\n            }\n        }\n        while (getRun()) {\n            final boolean newer = FileUtils.isFileNewer(file, last);\n            final long length = file.length();\n            if (length < position) {\n                listener.fileRotated();\n                try (RandomAccessFile save = reader) {\n                    reader = new RandomAccessFile(file, RAF_MODE);\n                    try {\n                        readLines(save);\n                    } catch (final IOException ioe) {\n                        listener.handle(ioe);\n                    }\n                    position = 0;\n                } catch (final FileNotFoundException e) {\n                    listener.fileNotFound();\n                    Thread.sleep(delayMillis);\n                }\n                continue;\n            }\n            if (length > position) {\n                position = readLines(reader);\n                last = file.lastModified();\n            } else if (newer) {\n                position = 0;\n                reader.seek(position);\n                position = readLines(reader);\n                last = file.lastModified();\n            }\n            if (reOpen && reader != null) {\n                reader.close();\n            }\n            Thread.sleep(delayMillis);\n            if (getRun() && reOpen) {\n                reader = new RandomAccessFile(file, RAF_MODE);\n                reader.seek(position);\n            }\n        }\n    } catch (final InterruptedException e) {\n        Thread.currentThread().interrupt();\n        listener.handle(e);\n    } catch (final Exception e) {\n        listener.handle(e);\n    } finally {\n        try {\n            if (reader != null) {\n                reader.close();\n            }\n        } catch (final IOException e) {\n            listener.handle(e);\n        }\n        stop();\n    }\n}"
    },
    {
      "commit": "56f2a758983611adea7308e90ae9934c973efa72",
      "startLine": 5,
      "endLine": 20,
      "methodCode": "@Override\npublic void run() {\n    RandomAccessFile reader = null;\n    try {\n        long last = 0;\n        long position = 0;\n        while (getRun() && reader == null) {\n            try {\n                reader = new RandomAccessFile(file, RAF_MODE);\n            } catch (final FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader == null) {\n                Thread.sleep(delayMillis);\n            } else {\n                position = end ? file.length() : 0;\n                last = file.lastModified();\n                reader.seek(position);\n            }\n        }\n        while (getRun()) {\n            final boolean newer = FileUtils.isFileNewer(file, last);\n            final long length = file.length();\n            if (length < position) {\n                listener.fileRotated();\n                try (RandomAccessFile save = reader) {\n                    reader = new RandomAccessFile(file, RAF_MODE);\n                    try {\n                        readLines(save);\n                    } catch (final IOException ioe) {\n                        listener.handle(ioe);\n                    }\n                    position = 0;\n                } catch (final FileNotFoundException e) {\n                    listener.fileNotFound();\n                    Thread.sleep(delayMillis);\n                }\n                continue;\n            } else {\n                if (length > position) {\n                    position = readLines(reader);\n                    last = file.lastModified();\n                } else if (newer) {\n                    position = 0;\n                    reader.seek(position);\n                    position = readLines(reader);\n                    last = file.lastModified();\n                }\n            }\n            if (reOpen && reader != null) {\n                reader.close();\n            }\n            Thread.sleep(delayMillis);\n            if (getRun() && reOpen) {\n                reader = new RandomAccessFile(file, RAF_MODE);\n                reader.seek(position);\n            }\n        }\n    } catch (final InterruptedException e) {\n        Thread.currentThread().interrupt();\n        listener.handle(e);\n    } catch (final Exception e) {\n        listener.handle(e);\n    } finally {\n        try {\n            if (reader != null) {\n                reader.close();\n            }\n        } catch (final IOException e) {\n            listener.handle(e);\n        }\n        stop();\n    }\n}"
    },
    {
      "commit": "45fbfb82fd1f5168a7183e78ece89da7a60e21fe",
      "startLine": 5,
      "endLine": 20,
      "methodCode": "@Override\npublic void run() {\n    RandomAccessFile reader = null;\n    try {\n        long last = 0;\n        long position = 0;\n        while (getRun() && reader == null) {\n            try {\n                reader = new RandomAccessFile(file, RAF_MODE);\n            } catch (final FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader == null) {\n                Thread.sleep(delayMillis);\n            } else {\n                position = end ? file.length() : 0;\n                last = file.lastModified();\n                reader.seek(position);\n            }\n        }\n        while (getRun()) {\n            final boolean newer = FileUtils.isFileNewer(file, last);\n            final long length = file.length();\n            if (length < position) {\n                listener.fileRotated();\n                try (RandomAccessFile save = reader) {\n                    reader = new RandomAccessFile(file, RAF_MODE);\n                    try {\n                        readLines(save);\n                    } catch (IOException ioe) {\n                        listener.handle(ioe);\n                    }\n                    position = 0;\n                } catch (final FileNotFoundException e) {\n                    listener.fileNotFound();\n                    Thread.sleep(delayMillis);\n                }\n                continue;\n            } else {\n                if (length > position) {\n                    position = readLines(reader);\n                    last = file.lastModified();\n                } else if (newer) {\n                    position = 0;\n                    reader.seek(position);\n                    position = readLines(reader);\n                    last = file.lastModified();\n                }\n            }\n            if (reOpen && reader != null) {\n                reader.close();\n            }\n            Thread.sleep(delayMillis);\n            if (getRun() && reOpen) {\n                reader = new RandomAccessFile(file, RAF_MODE);\n                reader.seek(position);\n            }\n        }\n    } catch (final InterruptedException e) {\n        Thread.currentThread().interrupt();\n        listener.handle(e);\n    } catch (final Exception e) {\n        listener.handle(e);\n    } finally {\n        try {\n            if (reader != null) {\n                reader.close();\n            }\n        } catch (final IOException e) {\n            listener.handle(e);\n        }\n        stop();\n    }\n}"
    },
    {
      "commit": "2a915f5872beca562a72a1ded95652f87b5daaa3",
      "startLine": 5,
      "endLine": 20,
      "methodCode": "@Override\npublic void run() {\n    RandomAccessFile reader = null;\n    try {\n        long last = 0;\n        long position = 0;\n        while (getRun() && reader == null) {\n            try {\n                reader = new RandomAccessFile(file, RAF_MODE);\n            } catch (final FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader == null) {\n                Thread.sleep(delayMillis);\n            } else {\n                position = end ? file.length() : 0;\n                last = file.lastModified();\n                reader.seek(position);\n            }\n        }\n        while (getRun()) {\n            final boolean newer = FileUtils.isFileNewer(file, last);\n            final long length = file.length();\n            if (length < position) {\n                listener.fileRotated();\n                try (RandomAccessFile save = reader) {\n                    reader = new RandomAccessFile(file, RAF_MODE);\n                    try {\n                        readLines(save);\n                    } catch (IOException ioe) {\n                        listener.handle(ioe);\n                    }\n                    position = 0;\n                } catch (final FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length > position) {\n                    position = readLines(reader);\n                    last = file.lastModified();\n                } else if (newer) {\n                    position = 0;\n                    reader.seek(position);\n                    position = readLines(reader);\n                    last = file.lastModified();\n                }\n            }\n            if (reOpen && reader != null) {\n                reader.close();\n            }\n            Thread.sleep(delayMillis);\n            if (getRun() && reOpen) {\n                reader = new RandomAccessFile(file, RAF_MODE);\n                reader.seek(position);\n            }\n        }\n    } catch (final InterruptedException e) {\n        Thread.currentThread().interrupt();\n        listener.handle(e);\n    } catch (final Exception e) {\n        listener.handle(e);\n    } finally {\n        try {\n            if (reader != null) {\n                reader.close();\n            }\n        } catch (final IOException e) {\n            listener.handle(e);\n        }\n        stop();\n    }\n}"
    },
    {
      "commit": "4dc97b64005f0083b2facaa70f661138a4fa3fc0",
      "startLine": 4,
      "endLine": 19,
      "methodCode": "public void run() {\n    RandomAccessFile reader = null;\n    try {\n        long last = 0;\n        long position = 0;\n        while (getRun() && reader == null) {\n            try {\n                reader = new RandomAccessFile(file, RAF_MODE);\n            } catch (final FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader == null) {\n                Thread.sleep(delayMillis);\n            } else {\n                position = end ? file.length() : 0;\n                last = file.lastModified();\n                reader.seek(position);\n            }\n        }\n        while (getRun()) {\n            final boolean newer = FileUtils.isFileNewer(file, last);\n            final long length = file.length();\n            if (length < position) {\n                listener.fileRotated();\n                try (RandomAccessFile save = reader) {\n                    reader = new RandomAccessFile(file, RAF_MODE);\n                    try {\n                        readLines(save);\n                    } catch (IOException ioe) {\n                        listener.handle(ioe);\n                    }\n                    position = 0;\n                } catch (final FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length > position) {\n                    position = readLines(reader);\n                    last = file.lastModified();\n                } else if (newer) {\n                    position = 0;\n                    reader.seek(position);\n                    position = readLines(reader);\n                    last = file.lastModified();\n                }\n            }\n            if (reOpen && reader != null) {\n                reader.close();\n            }\n            Thread.sleep(delayMillis);\n            if (getRun() && reOpen) {\n                reader = new RandomAccessFile(file, RAF_MODE);\n                reader.seek(position);\n            }\n        }\n    } catch (final InterruptedException e) {\n        Thread.currentThread().interrupt();\n        listener.handle(e);\n    } catch (final Exception e) {\n        listener.handle(e);\n    } finally {\n        try {\n            if (reader != null) {\n                reader.close();\n            }\n        } catch (final IOException e) {\n            listener.handle(e);\n        }\n        stop();\n    }\n}"
    },
    {
      "commit": "7705470ba1ca2bf95f6442f06f68f007f33a4aeb",
      "startLine": 4,
      "endLine": 19,
      "methodCode": "public void run() {\n    RandomAccessFile reader = null;\n    try {\n        long last = 0;\n        long position = 0;\n        while (getRun() && reader == null) {\n            try {\n                reader = new RandomAccessFile(file, RAF_MODE);\n            } catch (final FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader == null) {\n                Thread.sleep(delayMillis);\n            } else {\n                position = end ? file.length() : 0;\n                last = file.lastModified();\n                reader.seek(position);\n            }\n        }\n        while (getRun()) {\n            final boolean newer = FileUtils.isFileNewer(file, last);\n            final long length = file.length();\n            if (length < position) {\n                listener.fileRotated();\n                try {\n                    final RandomAccessFile save = reader;\n                    reader = new RandomAccessFile(file, RAF_MODE);\n                    try {\n                        readLines(save);\n                    } catch (IOException ioe) {\n                        listener.handle(ioe);\n                    }\n                    position = 0;\n                    IOUtils.closeQuietly(save);\n                } catch (final FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length > position) {\n                    position = readLines(reader);\n                    last = file.lastModified();\n                } else if (newer) {\n                    position = 0;\n                    reader.seek(position);\n                    position = readLines(reader);\n                    last = file.lastModified();\n                }\n            }\n            if (reOpen) {\n                IOUtils.closeQuietly(reader);\n            }\n            Thread.sleep(delayMillis);\n            if (getRun() && reOpen) {\n                reader = new RandomAccessFile(file, RAF_MODE);\n                reader.seek(position);\n            }\n        }\n    } catch (final InterruptedException e) {\n        Thread.currentThread().interrupt();\n        stop(e);\n    } catch (final Exception e) {\n        stop(e);\n    } finally {\n        IOUtils.closeQuietly(reader);\n    }\n}"
    },
    {
      "commit": "62a47bf10c42039875bc9bf7790feb470b3205aa",
      "startLine": 4,
      "endLine": 19,
      "methodCode": "public void run() {\n    RandomAccessFile reader = null;\n    try {\n        long last = 0;\n        long position = 0;\n        while (getRun() && reader == null) {\n            try {\n                reader = new RandomAccessFile(file, RAF_MODE);\n            } catch (final FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader == null) {\n                Thread.sleep(delayMillis);\n            } else {\n                position = end ? file.length() : 0;\n                last = System.currentTimeMillis();\n                reader.seek(position);\n            }\n        }\n        while (getRun()) {\n            final boolean newer = FileUtils.isFileNewer(file, last);\n            final long length = file.length();\n            if (length < position) {\n                listener.fileRotated();\n                try {\n                    final RandomAccessFile save = reader;\n                    reader = new RandomAccessFile(file, RAF_MODE);\n                    try {\n                        readLines(save);\n                    } catch (IOException ioe) {\n                        listener.handle(ioe);\n                    }\n                    position = 0;\n                    IOUtils.closeQuietly(save);\n                } catch (final FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length > position) {\n                    position = readLines(reader);\n                    last = System.currentTimeMillis();\n                } else if (newer) {\n                    position = 0;\n                    reader.seek(position);\n                    position = readLines(reader);\n                    last = System.currentTimeMillis();\n                }\n            }\n            if (reOpen) {\n                IOUtils.closeQuietly(reader);\n            }\n            Thread.sleep(delayMillis);\n            if (getRun() && reOpen) {\n                reader = new RandomAccessFile(file, RAF_MODE);\n                reader.seek(position);\n            }\n        }\n    } catch (final InterruptedException e) {\n        Thread.currentThread().interrupt();\n        stop(e);\n    } catch (final Exception e) {\n        stop(e);\n    } finally {\n        IOUtils.closeQuietly(reader);\n    }\n}"
    },
    {
      "commit": "6aa00766b9103d75c763160280429af8e1f0549e",
      "startLine": 4,
      "endLine": 19,
      "methodCode": "public void run() {\n    RandomAccessFile reader = null;\n    try {\n        long last = 0;\n        long position = 0;\n        while (getRun() && reader == null) {\n            try {\n                reader = new RandomAccessFile(file, RAF_MODE);\n            } catch (final FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader == null) {\n                Thread.sleep(delayMillis);\n            } else {\n                position = end ? file.length() : 0;\n                last = System.currentTimeMillis();\n                reader.seek(position);\n            }\n        }\n        while (getRun()) {\n            final boolean newer = FileUtils.isFileNewer(file, last);\n            final long length = file.length();\n            if (length < position) {\n                listener.fileRotated();\n                try {\n                    final RandomAccessFile save = reader;\n                    reader = new RandomAccessFile(file, RAF_MODE);\n                    position = 0;\n                    IOUtils.closeQuietly(save);\n                } catch (final FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length > position) {\n                    position = readLines(reader);\n                    last = System.currentTimeMillis();\n                } else if (newer) {\n                    position = 0;\n                    reader.seek(position);\n                    position = readLines(reader);\n                    last = System.currentTimeMillis();\n                }\n            }\n            if (reOpen) {\n                IOUtils.closeQuietly(reader);\n            }\n            Thread.sleep(delayMillis);\n            if (getRun() && reOpen) {\n                reader = new RandomAccessFile(file, RAF_MODE);\n                reader.seek(position);\n            }\n        }\n    } catch (final InterruptedException e) {\n        Thread.currentThread().interrupt();\n        stop(e);\n    } catch (final Exception e) {\n        stop(e);\n    } finally {\n        IOUtils.closeQuietly(reader);\n    }\n}"
    },
    {
      "commit": "3789b1aa9669cff2f434eba56f57c500662ead10",
      "startLine": 4,
      "endLine": 19,
      "methodCode": "public void run() {\n    RandomAccessFile reader = null;\n    try {\n        long last = 0;\n        long position = 0;\n        while (getRun() && reader == null) {\n            try {\n                reader = new RandomAccessFile(file, RAF_MODE);\n            } catch (FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader == null) {\n                Thread.sleep(delayMillis);\n            } else {\n                position = end ? file.length() : 0;\n                last = System.currentTimeMillis();\n                reader.seek(position);\n            }\n        }\n        while (getRun()) {\n            boolean newer = FileUtils.isFileNewer(file, last);\n            long length = file.length();\n            if (length < position) {\n                listener.fileRotated();\n                try {\n                    RandomAccessFile save = reader;\n                    reader = new RandomAccessFile(file, RAF_MODE);\n                    position = 0;\n                    IOUtils.closeQuietly(save);\n                } catch (FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length > position) {\n                    position = readLines(reader);\n                    last = System.currentTimeMillis();\n                } else if (newer) {\n                    position = 0;\n                    reader.seek(position);\n                    position = readLines(reader);\n                    last = System.currentTimeMillis();\n                }\n            }\n            if (reOpen) {\n                IOUtils.closeQuietly(reader);\n            }\n            Thread.sleep(delayMillis);\n            if (getRun() && reOpen) {\n                reader = new RandomAccessFile(file, RAF_MODE);\n                reader.seek(position);\n            }\n        }\n    } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        stop(e);\n    } catch (Exception e) {\n        stop(e);\n    } finally {\n        IOUtils.closeQuietly(reader);\n    }\n}"
    },
    {
      "commit": "3db2debddb4840f415570f88fb4a7794724b7930",
      "startLine": 4,
      "endLine": 22,
      "methodCode": "public void run() {\n    RandomAccessFile reader = null;\n    try {\n        long last = 0;\n        long position = 0;\n        while (getRun() && reader == null) {\n            try {\n                reader = new RandomAccessFile(file, RAF_MODE);\n            } catch (FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader == null) {\n                try {\n                    Thread.sleep(delayMillis);\n                } catch (InterruptedException e) {\n                }\n            } else {\n                position = end ? file.length() : 0;\n                last = System.currentTimeMillis();\n                reader.seek(position);\n            }\n        }\n        while (getRun()) {\n            boolean newer = FileUtils.isFileNewer(file, last);\n            long length = file.length();\n            if (length < position) {\n                listener.fileRotated();\n                try {\n                    RandomAccessFile save = reader;\n                    reader = new RandomAccessFile(file, RAF_MODE);\n                    position = 0;\n                    IOUtils.closeQuietly(save);\n                } catch (FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length > position) {\n                    position = readLines(reader);\n                    last = System.currentTimeMillis();\n                } else if (newer) {\n                    position = 0;\n                    reader.seek(position);\n                    position = readLines(reader);\n                    last = System.currentTimeMillis();\n                }\n            }\n            if (reOpen) {\n                IOUtils.closeQuietly(reader);\n            }\n            try {\n                Thread.sleep(delayMillis);\n            } catch (InterruptedException e) {\n            }\n            if (getRun() && reOpen) {\n                reader = new RandomAccessFile(file, RAF_MODE);\n                reader.seek(position);\n            }\n        }\n    } catch (Exception e) {\n        listener.handle(e);\n    } finally {\n        IOUtils.closeQuietly(reader);\n    }\n}"
    },
    {
      "commit": "c395904915ca330d8944d74f9502c0f4bcf65907",
      "startLine": 4,
      "endLine": 22,
      "methodCode": "public void run() {\n    RandomAccessFile reader = null;\n    try {\n        long last = 0;\n        long position = 0;\n        while (run && reader == null) {\n            try {\n                reader = new RandomAccessFile(file, RAF_MODE);\n            } catch (FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader == null) {\n                try {\n                    Thread.sleep(delayMillis);\n                } catch (InterruptedException e) {\n                }\n            } else {\n                position = end ? file.length() : 0;\n                last = System.currentTimeMillis();\n                reader.seek(position);\n            }\n        }\n        while (run) {\n            boolean newer = FileUtils.isFileNewer(file, last);\n            long length = file.length();\n            if (length < position) {\n                listener.fileRotated();\n                try {\n                    RandomAccessFile save = reader;\n                    reader = new RandomAccessFile(file, RAF_MODE);\n                    position = 0;\n                    IOUtils.closeQuietly(save);\n                } catch (FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length > position) {\n                    position = readLines(reader);\n                    last = System.currentTimeMillis();\n                } else if (newer) {\n                    position = 0;\n                    reader.seek(position);\n                    position = readLines(reader);\n                    last = System.currentTimeMillis();\n                }\n            }\n            if (reOpen) {\n                IOUtils.closeQuietly(reader);\n            }\n            try {\n                Thread.sleep(delayMillis);\n            } catch (InterruptedException e) {\n            }\n            if (run && reOpen) {\n                reader = new RandomAccessFile(file, RAF_MODE);\n                reader.seek(position);\n            }\n        }\n    } catch (Exception e) {\n        listener.handle(e);\n    } finally {\n        IOUtils.closeQuietly(reader);\n    }\n}"
    },
    {
      "commit": "199dd8dfd1cef867ad8712c7565f090f81be0e7f",
      "startLine": 4,
      "endLine": 22,
      "methodCode": "public void run() {\n    RandomAccessFile reader = null;\n    try {\n        long last = 0;\n        long position = 0;\n        while (run && reader == null) {\n            try {\n                reader = new RandomAccessFile(file, RAF_MODE);\n            } catch (FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader == null) {\n                try {\n                    Thread.sleep(delayMillis);\n                } catch (InterruptedException e) {\n                }\n            } else {\n                position = end ? file.length() : 0;\n                last = System.currentTimeMillis();\n                reader.seek(position);\n            }\n        }\n        while (run) {\n            boolean newer = FileUtils.isFileNewer(file, last);\n            long length = file.length();\n            if (length < position) {\n                listener.fileRotated();\n                try {\n                    RandomAccessFile save = reader;\n                    reader = new RandomAccessFile(file, RAF_MODE);\n                    position = 0;\n                    IOUtils.closeQuietly(save);\n                } catch (FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length > position) {\n                    position = readLines(reader);\n                    last = System.currentTimeMillis();\n                } else if (newer) {\n                    position = 0;\n                    reader.seek(position);\n                    position = readLines(reader);\n                    last = System.currentTimeMillis();\n                }\n            }\n            try {\n                Thread.sleep(delayMillis);\n            } catch (InterruptedException e) {\n            }\n        }\n    } catch (Exception e) {\n        listener.handle(e);\n    } finally {\n        IOUtils.closeQuietly(reader);\n    }\n}"
    },
    {
      "commit": "24330e7703383c78411225dd9b99ebfe57b31ad5",
      "startLine": 4,
      "endLine": 22,
      "methodCode": "public void run() {\n    RandomAccessFile reader = null;\n    try {\n        long last = 0;\n        long position = 0;\n        while (run && reader == null) {\n            try {\n                reader = new RandomAccessFile(file, RAF_MODE);\n            } catch (FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader == null) {\n                try {\n                    Thread.sleep(delayMillis);\n                } catch (InterruptedException e) {\n                }\n            } else {\n                position = end ? file.length() : 0;\n                last = System.currentTimeMillis();\n                reader.seek(position);\n            }\n        }\n        while (run) {\n            long length = file.length();\n            if (length < position) {\n                listener.fileRotated();\n                try {\n                    RandomAccessFile save = reader;\n                    reader = new RandomAccessFile(file, RAF_MODE);\n                    position = 0;\n                    IOUtils.closeQuietly(save);\n                } catch (FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length > position) {\n                    last = System.currentTimeMillis();\n                    position = readLines(reader);\n                } else if (FileUtils.isFileNewer(file, last)) {\n                    position = 0;\n                    reader.seek(position);\n                    last = System.currentTimeMillis();\n                    position = readLines(reader);\n                }\n            }\n            try {\n                Thread.sleep(delayMillis);\n            } catch (InterruptedException e) {\n            }\n        }\n    } catch (Exception e) {\n        listener.handle(e);\n    } finally {\n        IOUtils.closeQuietly(reader);\n    }\n}"
    },
    {
      "commit": "59ffcad15d220c2bc1f70f01d58bc31dec04b423",
      "startLine": 4,
      "endLine": 22,
      "methodCode": "public void run() {\n    RandomAccessFile reader = null;\n    try {\n        long last = 0;\n        long position = 0;\n        while (run && reader == null) {\n            try {\n                reader = new RandomAccessFile(file, RAF_MODE);\n            } catch (FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader == null) {\n                try {\n                    Thread.sleep(delay);\n                } catch (InterruptedException e) {\n                }\n            } else {\n                position = end ? file.length() : 0;\n                last = System.currentTimeMillis();\n                reader.seek(position);\n            }\n        }\n        while (run) {\n            long length = file.length();\n            if (length < position) {\n                listener.fileRotated();\n                try {\n                    RandomAccessFile save = reader;\n                    reader = new RandomAccessFile(file, RAF_MODE);\n                    position = 0;\n                    IOUtils.closeQuietly(save);\n                } catch (FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length > position) {\n                    last = System.currentTimeMillis();\n                    position = readLines(reader);\n                } else if (FileUtils.isFileNewer(file, last)) {\n                    position = 0;\n                    reader.seek(position);\n                    last = System.currentTimeMillis();\n                    position = readLines(reader);\n                }\n            }\n            try {\n                Thread.sleep(delay);\n            } catch (InterruptedException e) {\n            }\n        }\n    } catch (Exception e) {\n        listener.handle(e);\n    } finally {\n        IOUtils.closeQuietly(reader);\n    }\n}"
    },
    {
      "commit": "f6c8dcc99db1929435fd8bb05dc0cf77e956e6e6",
      "startLine": 4,
      "endLine": 22,
      "methodCode": "public void run() {\n    RandomAccessFile reader = null;\n    try {\n        long last = 0;\n        long position = 0;\n        while (run && reader == null) {\n            try {\n                reader = new RandomAccessFile(file, \"r\");\n            } catch (FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader == null) {\n                try {\n                    Thread.sleep(delay);\n                } catch (InterruptedException e) {\n                }\n            } else {\n                position = end ? file.length() : 0;\n                last = System.currentTimeMillis();\n                reader.seek(position);\n            }\n        }\n        while (run) {\n            long length = file.length();\n            if (length < position) {\n                listener.fileRotated();\n                try {\n                    RandomAccessFile save = reader;\n                    reader = new RandomAccessFile(file, \"r\");\n                    position = 0;\n                    IOUtils.closeQuietly(save);\n                } catch (FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length > position) {\n                    last = System.currentTimeMillis();\n                    position = readLines(reader);\n                } else if (FileUtils.isFileNewer(file, last)) {\n                    position = 0;\n                    reader.seek(position);\n                    last = System.currentTimeMillis();\n                    position = readLines(reader);\n                }\n            }\n            try {\n                Thread.sleep(delay);\n            } catch (InterruptedException e) {\n            }\n        }\n    } catch (Exception e) {\n        listener.handle(e);\n    } finally {\n        IOUtils.closeQuietly(reader);\n    }\n}"
    },
    {
      "commit": "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a",
      "startLine": 4,
      "endLine": 19,
      "methodCode": "public void run() {\n    RandomAccessFile reader = null;\n    try {\n        long last = 0;\n        long position = 0;\n        while (run && reader == null) {\n            try {\n                reader = new RandomAccessFile(file, \"r\");\n            } catch (FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader == null) {\n                Thread.sleep(delay);\n            } else {\n                position = end ? file.length() : 0;\n                last = System.currentTimeMillis();\n                reader.seek(position);\n            }\n        }\n        while (run) {\n            long length = file.length();\n            if (length < position) {\n                listener.fileRotated();\n                try {\n                    RandomAccessFile save = reader;\n                    reader = new RandomAccessFile(file, \"r\");\n                    position = 0;\n                    IOUtils.closeQuietly(save);\n                } catch (FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length > position) {\n                    last = System.currentTimeMillis();\n                    position = readLines(reader);\n                } else if (FileUtils.isFileNewer(file, last)) {\n                    position = 0;\n                    reader.seek(position);\n                    last = System.currentTimeMillis();\n                    position = readLines(reader);\n                }\n            }\n            Thread.sleep(delay);\n        }\n    } catch (Exception e) {\n        listener.handle(e);\n    } finally {\n        IOUtils.closeQuietly(reader);\n    }\n}"
    },
    {
      "commit": "4c17f2bcb464dc60c1937ee9ba5c5bbe2a84c2e8",
      "startLine": 4,
      "endLine": 19,
      "methodCode": "public void run() {\n    RandomAccessFile reader = null;\n    try {\n        long last = 0;\n        long position = 0;\n        while (run && reader == null) {\n            try {\n                reader = new RandomAccessFile(file, \"r\");\n            } catch (FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader == null) {\n                Thread.sleep(delay);\n            } else {\n                position = end ? file.length() : 0;\n                last = System.currentTimeMillis();\n                reader.seek(position);\n            }\n        }\n        while (run) {\n            long length = file.length();\n            if (length < position) {\n                listener.fileRotated();\n                try {\n                    RandomAccessFile save = reader;\n                    reader = new RandomAccessFile(file, \"r\");\n                    position = 0;\n                    IOUtils.closeQuietly(save);\n                } catch (FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length > position) {\n                    last = System.currentTimeMillis();\n                    position = readLines(reader);\n                } else if (FileUtils.isFileNewer(file, last)) {\n                    position = 0;\n                    reader.seek(position);\n                    last = System.currentTimeMillis();\n                    position = readLines(reader);\n                }\n            }\n            Thread.sleep(delay);\n        }\n    } catch (Exception e) {\n        listener.handle(e);\n    } finally {\n        IOUtils.closeQuietly(reader);\n    }\n}"
    },
    {
      "commit": "cdc2dadd24ee51a464cae08a98fb2da4f8ab4a76",
      "startLine": 4,
      "endLine": 19,
      "methodCode": "public void run() {\n    RandomAccessFile reader = null;\n    try {\n        long last = 0;\n        long position = 0;\n        while (run && reader == null) {\n            try {\n                reader = new RandomAccessFile(file, \"r\");\n            } catch (FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader == null) {\n                Thread.sleep(delay);\n            } else {\n                position = end ? file.length() : 0;\n                last = System.currentTimeMillis();\n                reader.seek(position);\n            }\n        }\n        while (run) {\n            long length = file.length();\n            if (length < position) {\n                listener.fileRotated();\n                try {\n                    RandomAccessFile save = reader;\n                    reader = new RandomAccessFile(file, \"r\");\n                    position = 0;\n                    IOUtils.closeQuietly(save);\n                } catch (FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length > position) {\n                    last = System.currentTimeMillis();\n                    position = readLines(reader);\n                } else if (FileUtils.isFileNewer(file, last)) {\n                    position = 0;\n                    reader.seek(position);\n                    last = System.currentTimeMillis();\n                    position = readLines(reader);\n                }\n            }\n            Thread.sleep(delay);\n        }\n    } catch (Exception e) {\n        listener.handle(e);\n    } finally {\n        IOUtils.closeQuietly(reader);\n    }\n}"
    },
    {
      "commit": "230a3c292c67918a019d96f15f2fb30bbb261bc1",
      "startLine": 4,
      "endLine": 19,
      "methodCode": "public void run() {\n    RandomAccessFile reader = null;\n    try {\n        long last = 0;\n        long position = 0;\n        while (run && reader == null) {\n            try {\n                reader = new RandomAccessFile(file, \"r\");\n            } catch (FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader == null) {\n                Thread.sleep(delay);\n            } else {\n                position = end ? file.length() : 0;\n                last = System.currentTimeMillis();\n                reader.seek(position);\n            }\n        }\n        while (run) {\n            long length = file.length();\n            if (length < position) {\n                listener.fileRotated();\n                try {\n                    IOUtils.closeQuietly(reader);\n                    reader = new RandomAccessFile(file, \"r\");\n                    position = 0;\n                } catch (FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length > position) {\n                    last = System.currentTimeMillis();\n                    position = readLines(reader);\n                } else if (FileUtils.isFileNewer(file, last)) {\n                    position = 0;\n                    reader.seek(position);\n                    last = System.currentTimeMillis();\n                    position = readLines(reader);\n                }\n            }\n            Thread.sleep(delay);\n        }\n    } catch (Exception e) {\n        listener.handle(e);\n    } finally {\n        IOUtils.closeQuietly(reader);\n    }\n}"
    },
    {
      "commit": "25032e70cbf8cb14de334a5002811852867d16dd",
      "startLine": 3,
      "endLine": 19,
      "methodCode": "public void run() {\n    try {\n        long last = 0;\n        long position = 0;\n        RandomAccessFile reader = null;\n        while (run && reader == null) {\n            try {\n                reader = new RandomAccessFile(file, \"r\");\n            } catch (FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader == null) {\n                Thread.sleep(delay);\n            } else {\n                position = end ? file.length() : 0;\n                last = System.currentTimeMillis();\n                reader.seek(position);\n            }\n        }\n        while (run) {\n            long length = file.length();\n            if (length < position) {\n                listener.fileRotated();\n                try {\n                    reader = new RandomAccessFile(file, \"r\");\n                    position = 0;\n                } catch (FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length > position) {\n                    last = System.currentTimeMillis();\n                    position = readLines(reader);\n                } else if (FileUtils.isFileNewer(file, last)) {\n                    position = 0;\n                    reader.seek(position);\n                    last = System.currentTimeMillis();\n                    position = readLines(reader);\n                }\n            }\n            Thread.sleep(delay);\n        }\n    } catch (Exception e) {\n        listener.handle(e);\n    }\n}"
    },
    {
      "commit": "a32a395a621098ce652ee8158e6320fa422f9fa3",
      "startLine": 3,
      "endLine": 16,
      "methodCode": "public void run() {\n    try {\n        while (run && reader == null) {\n            try {\n                reader = new RandomAccessFile(file, \"r\");\n            } catch (FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader == null) {\n                Thread.sleep(delay);\n            } else {\n                position = end ? file.length() : 0;\n                last = System.currentTimeMillis();\n                reader.seek(position);\n            }\n        }\n        while (run) {\n            long length = file.length();\n            if (length < position) {\n                listener.fileRotated();\n                try {\n                    reader = new RandomAccessFile(file, \"r\");\n                    position = 0;\n                } catch (FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length > position) {\n                    readLines();\n                } else if (FileUtils.isFileNewer(file, last)) {\n                    position = 0;\n                    reader.seek(position);\n                    readLines();\n                }\n            }\n            Thread.sleep(delay);\n        }\n    } catch (Exception e) {\n        listener.handle(e);\n    }\n}"
    },
    {
      "commit": "587f5571c6eb5a55b752fd7bfd66c2c535f5e566",
      "startLine": 3,
      "endLine": 12,
      "methodCode": "public void run() {\n    try {\n        while (run && reader == null) {\n            try {\n                reader = new RandomAccessFile(file, \"r\");\n            } catch (FileNotFoundException e) {\n                listener.fileNotFound();\n            }\n            if (reader == null) {\n                Thread.sleep(delay);\n            }\n        }\n        position = end ? file.length() : 0;\n        last = System.currentTimeMillis();\n        reader.seek(position);\n        while (run) {\n            long length = file.length();\n            if (length < position) {\n                listener.fileRotated();\n                try {\n                    reader = new RandomAccessFile(file, \"r\");\n                    position = 0;\n                } catch (FileNotFoundException e) {\n                    listener.fileNotFound();\n                }\n                continue;\n            } else {\n                if (length > position) {\n                    readLines();\n                } else if (FileUtils.isFileNewer(file, last)) {\n                    position = 0;\n                    reader.seek(position);\n                    readLines();\n                }\n            }\n            Thread.sleep(delay);\n        }\n    } catch (Exception e) {\n        listener.handle(e);\n    }\n}"
    }
  ]
}