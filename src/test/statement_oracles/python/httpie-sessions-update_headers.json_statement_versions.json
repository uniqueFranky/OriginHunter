{
  "statementVersions": [
    {
      "commit": "45e8e4e4ea001d80d76c202ccfa1aec06e71b809",
      "startLine": 7,
      "endLine": 21,
      "methodCode": "    def update_headers(self, request_headers: RequestHeadersDict):\n        \"\"\"\n        Update the session headers with the request ones while ignoring\n        certain name prefixes.\n\n        \"\"\"\n        headers = self.headers\n        for name, value in request_headers.items():\n\n            if value is None:\n                continue  # Ignore explicitly unset headers\n\n            value = value.decode('utf8')\n            if name == 'User-Agent' and value.startswith('HTTPie/'):\n                continue\n\n            for prefix in SESSION_IGNORED_HEADER_PREFIXES:\n                if name.lower().startswith(prefix.lower()):\n                    break\n            else:\n                headers[name] = value\n\n        self['headers'] = dict(headers)\n"
    },
    {
      "commit": "0f654388fc49c0ab7af4c45c7b5294117c435074",
      "startLine": 9,
      "endLine": 22,
      "methodCode": "    def update_headers(self, request_headers: dict):\n        \"\"\"\n        Update the session headers with the request ones while ignoring\n        certain name prefixes.\n\n        :type request_headers: dict\n\n        \"\"\"\n        for name, value in request_headers.items():\n\n            if value is None:\n                continue  # Ignore explicitly unset headers\n\n            value = value.decode('utf8')\n            if name == 'User-Agent' and value.startswith('HTTPie/'):\n                continue\n\n            for prefix in SESSION_IGNORED_HEADER_PREFIXES:\n                if name.lower().startswith(prefix.lower()):\n                    break\n            else:\n                self['headers'][name] = value\n"
    },
    {
      "commit": "589887939507ff26d36ec74bd2c045819cfa3d56",
      "startLine": 9,
      "endLine": 22,
      "methodCode": "    def update_headers(self, request_headers):\n        \"\"\"\n        Update the session headers with the request ones while ignoring\n        certain name prefixes.\n\n        :type request_headers: dict\n\n        \"\"\"\n        for name, value in request_headers.items():\n\n            if value is None:\n                continue  # Ignore explicitely unset headers\n\n            value = value.decode('utf8')\n            if name == 'User-Agent' and value.startswith('HTTPie/'):\n                continue\n\n            for prefix in SESSION_IGNORED_HEADER_PREFIXES:\n                if name.lower().startswith(prefix.lower()):\n                    break\n            else:\n                self['headers'][name] = value\n"
    },
    {
      "commit": "467d126b6c67dd2ce6da703858cbe0cdf81782b3",
      "startLine": 9,
      "endLine": 18,
      "methodCode": "    def update_headers(self, request_headers):\n        \"\"\"\n        Update the session headers with the request ones while ignoring\n        certain name prefixes.\n\n        :type request_headers: dict\n\n        \"\"\"\n        for name, value in request_headers.items():\n            value = value.decode('utf8')\n            if name == 'User-Agent' and value.startswith('HTTPie/'):\n                continue\n\n            for prefix in SESSION_IGNORED_HEADER_PREFIXES:\n                if name.lower().startswith(prefix.lower()):\n                    break\n            else:\n                self['headers'][name] = value\n"
    },
    {
      "commit": "e09b74021c9c955fd7c3bab11f22801aaf9dc1b8",
      "startLine": 9,
      "endLine": 18,
      "methodCode": "    def update_headers(self, request_headers):\n        \"\"\"\n        Update the session headers with the request ones while ignoring\n        certain name prefixes.\n\n        :type request_headers: dict\n\n        \"\"\"\n        for name, value in request_headers.items():\n\n            if name == 'User-Agent' and value.startswith('HTTPie/'):\n                continue\n\n            for prefix in SESSION_IGNORED_HEADER_PREFIXES:\n                if name.lower().startswith(prefix.lower()):\n                    break\n            else:\n                self['headers'][name] = value\n"
    }
  ]
}