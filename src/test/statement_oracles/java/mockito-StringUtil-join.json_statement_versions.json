{
  "statementVersions": [
    {
      "commit": "3d2fb7a146e943003cb3e3cfe18c82f1663b833a",
      "startLine": 5,
      "endLine": 9,
      "methodCode": "public static String join(String start, String linePrefix, Collection<?> lines) {\n    if (lines.isEmpty()) {\n        return \"\";\n    }\n    StringBuilder out = new StringBuilder(start);\n    for (Object line : lines) {\n        out.append(linePrefix).append(line).append(\"\\n\");\n    }\n    return out.substring(0, out.length() - 1);\n}"
    },
    {
      "commit": "ec61a3b6c645b273d238b5e6e6b0cd621f31fb64",
      "startLine": 2,
      "endLine": 7,
      "methodCode": "public static String join(String start, Iterable<?> lines) {\n    StringBuilder out = new StringBuilder(start);\n    for (Object line : lines) {\n        out.append(line.toString()).append(\"\\n\");\n    }\n    int lastBreak = out.lastIndexOf(\"\\n\");\n    return out.replace(lastBreak, lastBreak + 1, \"\").toString();\n}"
    },
    {
      "commit": "0307f92995e165bd1d360f6b91e545e2ee60fe54",
      "startLine": 2,
      "endLine": 7,
      "methodCode": "public static String join(String start, Iterable<?> lines) {\n    StringBuilder out = new StringBuilder(start);\n    for (Object line : lines) {\n        out.append(line.toString()).append(\"\\n\");\n    }\n    int lastBreak = out.lastIndexOf(\"\\n\");\n    return out.replace(lastBreak, lastBreak + 1, \"\").toString();\n}"
    },
    {
      "commit": "9d5176f738f887cd6b2a7447deedd21f9518fae0",
      "startLine": 2,
      "endLine": 7,
      "methodCode": "public static String join(String start, Iterable<String> lines) {\n    StringBuilder out = new StringBuilder(start);\n    for (Object line : lines) {\n        out.append(line.toString()).append(\"\\n\");\n    }\n    int lastBreak = out.lastIndexOf(\"\\n\");\n    return out.replace(lastBreak, lastBreak + 1, \"\").toString();\n}"
    },
    {
      "commit": "05f8ff853250918a97a9954cd3341787fe7a1cc0",
      "startLine": 2,
      "endLine": 7,
      "methodCode": "public static String join(Iterable<String> lines) {\n    StringBuilder out = new StringBuilder(\"\\n\");\n    for (Object line : lines) {\n        out.append(line.toString()).append(\"\\n\");\n    }\n    int lastBreak = out.lastIndexOf(\"\\n\");\n    return out.replace(lastBreak, lastBreak + 1, \"\").toString();\n}"
    },
    {
      "commit": "fe7bbabb82ce3d1000c13d39d6355c134e94ac27",
      "startLine": 2,
      "endLine": 6,
      "methodCode": "private static String join(StringBuilder out, Object[] linesToBreak) {\n    for (Object line : linesToBreak) {\n        out.append(line.toString()).append(\"\\n\");\n    }\n    int lastBreak = out.lastIndexOf(\"\\n\");\n    return out.replace(lastBreak, lastBreak + 1, \"\").toString();\n}"
    },
    {
      "commit": "98f7799a2bf0e2016eb4c7e0cce46e17fb796966",
      "startLine": 2,
      "endLine": 6,
      "methodCode": "private static String join(StringBuilder out, Object[] linesToBreak) {\n    for (Object line : linesToBreak) {\n        out.append(line.toString()).append(\"\\n\");\n    }\n    int lastBreak = out.lastIndexOf(\"\\n\");\n    return out.replace(lastBreak, lastBreak + 1, \"\").toString();\n}"
    }
  ]
}