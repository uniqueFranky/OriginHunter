{
  "statementVersions": [
    {
      "commit": "327c0bc843612486ab4ded32a2f01038e1271fd0",
      "startLine": 3,
      "endLine": 9,
      "methodCode": "@Override\npublic int process(List<File> files) throws CheckstyleException {\n    if (cacheFile != null) {\n        cacheFile.putExternalResources(getExternalResourceLocations());\n    }\n    fireAuditStarted();\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.beginProcessing(charset);\n    }\n    processFiles(files);\n    fileSetChecks.forEach(FileSetCheck::finishProcessing);\n    fileSetChecks.forEach(FileSetCheck::destroy);\n    final int errorCount = counter.getCount();\n    fireAuditFinished();\n    return errorCount;\n}"
    },
    {
      "commit": "8c8fee7432c89b47936c27bcc2c7f60f5cc79923",
      "startLine": 3,
      "endLine": 9,
      "methodCode": "@Override\npublic int process(List<File> files) throws CheckstyleException {\n    if (cache != null) {\n        cache.putExternalResources(getExternalResourceLocations());\n    }\n    fireAuditStarted();\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.beginProcessing(charset);\n    }\n    processFiles(files);\n    fileSetChecks.forEach(FileSetCheck::finishProcessing);\n    fileSetChecks.forEach(FileSetCheck::destroy);\n    final int errorCount = counter.getCount();\n    fireAuditFinished();\n    return errorCount;\n}"
    },
    {
      "commit": "de022d2434e58dd633fd50a7f9bb50565a8767b5",
      "startLine": 2,
      "endLine": 8,
      "methodCode": "public int process(List<File> files) throws CheckstyleException {\n    if (cache != null) {\n        cache.putExternalResources(getExternalResourceLocations());\n    }\n    fireAuditStarted();\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.beginProcessing(charset);\n    }\n    processFiles(files);\n    fileSetChecks.forEach(FileSetCheck::finishProcessing);\n    fileSetChecks.forEach(FileSetCheck::destroy);\n    final int errorCount = counter.getCount();\n    fireAuditFinished();\n    return errorCount;\n}"
    },
    {
      "commit": "ecbeaa6e1df7cb021745e111b04395b9fbd509c7",
      "startLine": 2,
      "endLine": 8,
      "methodCode": "public int process(List<File> files) throws CheckstyleException {\n    if (cache != null) {\n        cache.putExternalResources(getExternalResourceLocations());\n    }\n    fireAuditStarted();\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.beginProcessing(charset);\n    }\n    processFiles(files);\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.finishProcessing();\n    }\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.destroy();\n    }\n    final int errorCount = counter.getCount();\n    fireAuditFinished();\n    return errorCount;\n}"
    },
    {
      "commit": "d46c2cf0e9df06bb5f424dbd7645574f082f7609",
      "startLine": 2,
      "endLine": 5,
      "methodCode": "public int process(List<File> files) throws CheckstyleException {\n    fireAuditStarted();\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.beginProcessing(charset);\n    }\n    processFiles(files);\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.finishProcessing();\n    }\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.destroy();\n    }\n    final int errorCount = counter.getCount();\n    fireAuditFinished();\n    return errorCount;\n}"
    },
    {
      "commit": "f020066f8bdfb378df36904af3df8b5bc48858fd",
      "startLine": 2,
      "endLine": 5,
      "methodCode": "public int process(List<File> files) throws CheckstyleException {\n    fireAuditStarted();\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.beginProcessing(charset);\n    }\n    for (final File file : files) {\n        try {\n            if (!CommonUtils.matchesFileExtension(file, fileExtensions)) {\n                continue;\n            }\n            final String fileName = file.getAbsolutePath();\n            fireFileStarted(fileName);\n            final SortedSet<LocalizedMessage> fileMessages = Sets.newTreeSet();\n            try {\n                final FileText theText = new FileText(file.getAbsoluteFile(), charset);\n                for (final FileSetCheck fsc : fileSetChecks) {\n                    fileMessages.addAll(fsc.process(file, theText));\n                }\n            } catch (final IOException ioe) {\n                LOG.debug(\"IOException occurred.\", ioe);\n                fileMessages.add(new LocalizedMessage(0, Definitions.CHECKSTYLE_BUNDLE, \"general.exception\", new String[] { ioe.getMessage() }, null, getClass(), null));\n            }\n            fireErrors(fileName, fileMessages);\n            fireFileFinished(fileName);\n        } catch (Exception ex) {\n            throw new CheckstyleException(\"Exception was thrown while processing \" + file.getPath(), ex);\n        }\n    }\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.finishProcessing();\n    }\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.destroy();\n    }\n    final int errorCount = counter.getCount();\n    fireAuditFinished();\n    return errorCount;\n}"
    },
    {
      "commit": "2b4a02d2c8a498a8a1ee38e9396426209fa65fad",
      "startLine": 2,
      "endLine": 5,
      "methodCode": "public int process(List<File> files) throws CheckstyleException {\n    fireAuditStarted();\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.beginProcessing(charset);\n    }\n    for (final File file : files) {\n        if (!CommonUtils.matchesFileExtension(file, fileExtensions)) {\n            continue;\n        }\n        final String fileName = file.getAbsolutePath();\n        fireFileStarted(fileName);\n        final SortedSet<LocalizedMessage> fileMessages = Sets.newTreeSet();\n        try {\n            final FileText theText = new FileText(file.getAbsoluteFile(), charset);\n            for (final FileSetCheck fsc : fileSetChecks) {\n                fileMessages.addAll(fsc.process(file, theText));\n            }\n        } catch (final IOException ioe) {\n            LOG.debug(\"IOException occurred.\", ioe);\n            fileMessages.add(new LocalizedMessage(0, Definitions.CHECKSTYLE_BUNDLE, \"general.exception\", new String[] { ioe.getMessage() }, null, getClass(), null));\n        }\n        fireErrors(fileName, fileMessages);\n        fireFileFinished(fileName);\n    }\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.finishProcessing();\n    }\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.destroy();\n    }\n    final int errorCount = counter.getCount();\n    fireAuditFinished();\n    return errorCount;\n}"
    },
    {
      "commit": "5922d5a6730d7582d7d66121eb911ef9426f9e24",
      "startLine": 2,
      "endLine": 5,
      "methodCode": "public int process(List<File> files) throws CheckstyleException {\n    fireAuditStarted();\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.beginProcessing(charset);\n    }\n    for (final File file : files) {\n        if (!CommonUtils.matchesFileExtension(file, fileExtensions)) {\n            continue;\n        }\n        final String fileName = file.getAbsolutePath();\n        fireFileStarted(fileName);\n        final SortedSet<LocalizedMessage> fileMessages = Sets.newTreeSet();\n        try {\n            final FileText theText = new FileText(file.getAbsoluteFile(), charset);\n            for (final FileSetCheck fsc : fileSetChecks) {\n                fileMessages.addAll(fsc.process(file, theText));\n            }\n        } catch (final IOException ioe) {\n            LOG.debug(\"IOException occured.\", ioe);\n            fileMessages.add(new LocalizedMessage(0, Definitions.CHECKSTYLE_BUNDLE, \"general.exception\", new String[] { ioe.getMessage() }, null, getClass(), null));\n        }\n        fireErrors(fileName, fileMessages);\n        fireFileFinished(fileName);\n    }\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.finishProcessing();\n    }\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.destroy();\n    }\n    final int errorCount = counter.getCount();\n    fireAuditFinished();\n    return errorCount;\n}"
    },
    {
      "commit": "46a52f84c014e4d25379f429f11ed3de11fe8ae7",
      "startLine": 2,
      "endLine": 5,
      "methodCode": "public int process(List<File> files) {\n    fireAuditStarted();\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.beginProcessing(charset);\n    }\n    for (final File file : files) {\n        if (!CommonUtils.matchesFileExtension(file, fileExtensions)) {\n            continue;\n        }\n        final String fileName = file.getAbsolutePath();\n        fireFileStarted(fileName);\n        final SortedSet<LocalizedMessage> fileMessages = Sets.newTreeSet();\n        try {\n            final FileText theText = new FileText(file.getAbsoluteFile(), charset);\n            for (final FileSetCheck fsc : fileSetChecks) {\n                fileMessages.addAll(fsc.process(file, theText));\n            }\n        } catch (final IOException ioe) {\n            LOG.debug(\"IOException occured.\", ioe);\n            fileMessages.add(new LocalizedMessage(0, Definitions.CHECKSTYLE_BUNDLE, \"general.exception\", new String[] { ioe.getMessage() }, null, getClass(), null));\n        }\n        fireErrors(fileName, fileMessages);\n        fireFileFinished(fileName);\n    }\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.finishProcessing();\n    }\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.destroy();\n    }\n    final int errorCount = counter.getCount();\n    fireAuditFinished();\n    return errorCount;\n}"
    },
    {
      "commit": "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
      "startLine": 2,
      "endLine": 5,
      "methodCode": "public int process(List<File> files) {\n    fireAuditStarted();\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.beginProcessing(charset);\n    }\n    for (final File file : files) {\n        if (!CommonUtils.fileExtensionMatches(file, fileExtensions)) {\n            continue;\n        }\n        final String fileName = file.getAbsolutePath();\n        fireFileStarted(fileName);\n        final SortedSet<LocalizedMessage> fileMessages = Sets.newTreeSet();\n        try {\n            final FileText theText = new FileText(file.getAbsoluteFile(), charset);\n            for (final FileSetCheck fsc : fileSetChecks) {\n                fileMessages.addAll(fsc.process(file, theText));\n            }\n        } catch (final IOException ioe) {\n            LOG.debug(\"IOException occured.\", ioe);\n            fileMessages.add(new LocalizedMessage(0, Definitions.CHECKSTYLE_BUNDLE, \"general.exception\", new String[] { ioe.getMessage() }, null, getClass(), null));\n        }\n        fireErrors(fileName, fileMessages);\n        fireFileFinished(fileName);\n    }\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.finishProcessing();\n    }\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.destroy();\n    }\n    final int errorCount = counter.getCount();\n    fireAuditFinished();\n    return errorCount;\n}"
    },
    {
      "commit": "6d5c0da42fa54ceabbc1959e9db354ed64a2ff86",
      "startLine": 2,
      "endLine": 5,
      "methodCode": "public int process(List<File> files) {\n    fireAuditStarted();\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.beginProcessing(charset);\n    }\n    for (final File file : files) {\n        if (!Utils.fileExtensionMatches(file, fileExtensions)) {\n            continue;\n        }\n        final String fileName = file.getAbsolutePath();\n        fireFileStarted(fileName);\n        final SortedSet<LocalizedMessage> fileMessages = Sets.newTreeSet();\n        try {\n            final FileText theText = new FileText(file.getAbsoluteFile(), charset);\n            for (final FileSetCheck fsc : fileSetChecks) {\n                fileMessages.addAll(fsc.process(file, theText));\n            }\n        } catch (final IOException ioe) {\n            LOG.debug(\"IOException occured.\", ioe);\n            fileMessages.add(new LocalizedMessage(0, Definitions.CHECKSTYLE_BUNDLE, \"general.exception\", new String[] { ioe.getMessage() }, null, getClass(), null));\n        }\n        fireErrors(fileName, fileMessages);\n        fireFileFinished(fileName);\n    }\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.finishProcessing();\n    }\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.destroy();\n    }\n    final int errorCount = counter.getCount();\n    fireAuditFinished();\n    return errorCount;\n}"
    },
    {
      "commit": "f1e80e4ecae727087ca135dfd02f72e2d6213efb",
      "startLine": 2,
      "endLine": 5,
      "methodCode": "public int process(List<File> files) {\n    fireAuditStarted();\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.beginProcessing(charset);\n    }\n    for (final File file : files) {\n        if (!Utils.fileExtensionMatches(file, fileExtensions)) {\n            continue;\n        }\n        final String fileName = file.getAbsolutePath();\n        fireFileStarted(fileName);\n        final SortedSet<LocalizedMessage> fileMessages = Sets.newTreeSet();\n        try {\n            final FileText theText = new FileText(file.getAbsoluteFile(), charset);\n            for (final FileSetCheck fsc : fileSetChecks) {\n                fileMessages.addAll(fsc.process(file, theText));\n            }\n        } catch (final IOException ioe) {\n            LOG.debug(\"IOException occured.\", ioe);\n            fileMessages.add(new LocalizedMessage(0, Definitions.CHECKSTYLE_BUNDLE, \"general.exception\", new String[] { ioe.getMessage() }, null, this.getClass(), null));\n        }\n        fireErrors(fileName, fileMessages);\n        fireFileFinished(fileName);\n    }\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.finishProcessing();\n    }\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.destroy();\n    }\n    final int errorCount = counter.getCount();\n    fireAuditFinished();\n    return errorCount;\n}"
    },
    {
      "commit": "ead1a5e5dca96e2ad15426696f48a9c244385aff",
      "startLine": 2,
      "endLine": 5,
      "methodCode": "public int process(List<File> files) {\n    fireAuditStarted();\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.beginProcessing(charset);\n    }\n    for (final File f : files) {\n        if (!Utils.fileExtensionMatches(f, fileExtensions)) {\n            continue;\n        }\n        final String fileName = f.getAbsolutePath();\n        fireFileStarted(fileName);\n        final SortedSet<LocalizedMessage> fileMessages = Sets.newTreeSet();\n        try {\n            final FileText theText = new FileText(f.getAbsoluteFile(), charset);\n            for (final FileSetCheck fsc : fileSetChecks) {\n                fileMessages.addAll(fsc.process(f, theText));\n            }\n        } catch (final IOException ioe) {\n            LOG.debug(\"IOException occured.\", ioe);\n            fileMessages.add(new LocalizedMessage(0, Definitions.CHECKSTYLE_BUNDLE, \"general.exception\", new String[] { ioe.getMessage() }, null, this.getClass(), null));\n        }\n        fireErrors(fileName, fileMessages);\n        fireFileFinished(fileName);\n    }\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.finishProcessing();\n    }\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.destroy();\n    }\n    final int errorCount = counter.getCount();\n    fireAuditFinished();\n    return errorCount;\n}"
    },
    {
      "commit": "f374e2e7a0b0fe2df21ed85aef77a91630b1dd66",
      "startLine": 2,
      "endLine": 5,
      "methodCode": "public int process(List<File> files) {\n    fireAuditStarted();\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.beginProcessing(charset);\n    }\n    for (final File f : files) {\n        if (!Utils.fileExtensionMatches(f, fileExtensions)) {\n            continue;\n        }\n        final String fileName = f.getAbsolutePath();\n        fireFileStarted(fileName);\n        final SortedSet<LocalizedMessage> fileMessages = Sets.newTreeSet();\n        try {\n            final FileText theText = new FileText(f.getAbsoluteFile(), charset);\n            for (final FileSetCheck fsc : fileSetChecks) {\n                fileMessages.addAll(fsc.process(f, theText));\n            }\n        } catch (final FileNotFoundException fnfe) {\n            LOG.debug(\"FileNotFoundException occured.\", fnfe);\n            fileMessages.add(new LocalizedMessage(0, Definitions.CHECKSTYLE_BUNDLE, \"general.fileNotFound\", null, null, this.getClass(), null));\n        } catch (final IOException ioe) {\n            LOG.debug(\"IOException occured.\", ioe);\n            fileMessages.add(new LocalizedMessage(0, Definitions.CHECKSTYLE_BUNDLE, \"general.exception\", new String[] { ioe.getMessage() }, null, this.getClass(), null));\n        }\n        fireErrors(fileName, fileMessages);\n        fireFileFinished(fileName);\n    }\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.finishProcessing();\n    }\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.destroy();\n    }\n    final int errorCount = counter.getCount();\n    fireAuditFinished();\n    return errorCount;\n}"
    },
    {
      "commit": "b29ca6b5f676e92243186abdba84a7501baea1bd",
      "startLine": 2,
      "endLine": 5,
      "methodCode": "public int process(List<File> files) {\n    fireAuditStarted();\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.beginProcessing(charset);\n    }\n    for (final File f : files) {\n        if (!fileExtensionMatches(f, fileExtensions)) {\n            continue;\n        }\n        final String fileName = f.getAbsolutePath();\n        fireFileStarted(fileName);\n        final SortedSet<LocalizedMessage> fileMessages = Sets.newTreeSet();\n        try {\n            final FileText theText = new FileText(f.getAbsoluteFile(), charset);\n            for (final FileSetCheck fsc : fileSetChecks) {\n                fileMessages.addAll(fsc.process(f, theText));\n            }\n        } catch (final FileNotFoundException fnfe) {\n            LOG.debug(\"FileNotFoundException occured.\", fnfe);\n            fileMessages.add(new LocalizedMessage(0, Definitions.CHECKSTYLE_BUNDLE, \"general.fileNotFound\", null, null, this.getClass(), null));\n        } catch (final IOException ioe) {\n            LOG.debug(\"IOException occured.\", ioe);\n            fileMessages.add(new LocalizedMessage(0, Definitions.CHECKSTYLE_BUNDLE, \"general.exception\", new String[] { ioe.getMessage() }, null, this.getClass(), null));\n        }\n        fireErrors(fileName, fileMessages);\n        fireFileFinished(fileName);\n    }\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.finishProcessing();\n    }\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.destroy();\n    }\n    final int errorCount = counter.getCount();\n    fireAuditFinished();\n    return errorCount;\n}"
    },
    {
      "commit": "ee518dfe86b29d1fa4d76f0dc0c11fb83afafda1",
      "startLine": 2,
      "endLine": 5,
      "methodCode": "public int process(List<File> files) {\n    fireAuditStarted();\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.beginProcessing(charset);\n    }\n    for (final File f : files) {\n        if (!fileExtensionMatches(f, fileExtensions)) {\n            continue;\n        }\n        final String fileName = f.getAbsolutePath();\n        fireFileStarted(fileName);\n        final SortedSet<LocalizedMessage> fileMessages = Sets.newTreeSet();\n        try {\n            final FileText theText = new FileText(f.getAbsoluteFile(), charset);\n            for (final FileSetCheck fsc : fileSetChecks) {\n                fileMessages.addAll(fsc.process(f, theText));\n            }\n        } catch (final FileNotFoundException fnfe) {\n            LOG.debug(\"FileNotFoundException occured.\", fnfe);\n            fileMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE, \"general.fileNotFound\", null, null, this.getClass(), null));\n        } catch (final IOException ioe) {\n            LOG.debug(\"IOException occured.\", ioe);\n            fileMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE, \"general.exception\", new String[] { ioe.getMessage() }, null, this.getClass(), null));\n        }\n        fireErrors(fileName, fileMessages);\n        fireFileFinished(fileName);\n    }\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.finishProcessing();\n    }\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.destroy();\n    }\n    final int errorCount = counter.getCount();\n    fireAuditFinished();\n    return errorCount;\n}"
    },
    {
      "commit": "d347f55756052db6b23ae41168c44e324807c621",
      "startLine": 2,
      "endLine": 5,
      "methodCode": "public int process(List<File> files) {\n    fireAuditStarted();\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.beginProcessing(charset);\n    }\n    for (final File f : files) {\n        if (!fileExtensionMatches(f, fileExtensions)) {\n            continue;\n        }\n        final String fileName = f.getAbsolutePath();\n        fireFileStarted(fileName);\n        final SortedSet<LocalizedMessage> fileMessages = Sets.newTreeSet();\n        try {\n            final FileText theText = new FileText(f.getAbsoluteFile(), charset);\n            for (final FileSetCheck fsc : fileSetChecks) {\n                fileMessages.addAll(fsc.process(f, theText));\n            }\n        } catch (final FileNotFoundException fnfe) {\n            Utils.getExceptionLogger().debug(\"FileNotFoundException occured.\", fnfe);\n            fileMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE, \"general.fileNotFound\", null, null, this.getClass(), null));\n        } catch (final IOException ioe) {\n            Utils.getExceptionLogger().debug(\"IOException occured.\", ioe);\n            fileMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE, \"general.exception\", new String[] { ioe.getMessage() }, null, this.getClass(), null));\n        }\n        fireErrors(fileName, fileMessages);\n        fireFileFinished(fileName);\n    }\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.finishProcessing();\n    }\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.destroy();\n    }\n    final int errorCount = counter.getCount();\n    fireAuditFinished();\n    return errorCount;\n}"
    },
    {
      "commit": "204c073294cdca6756bcd546d6af85a797ad7d79",
      "startLine": 2,
      "endLine": 5,
      "methodCode": "public int process(List<File> files) {\n    fireAuditStarted();\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.beginProcessing(charset);\n    }\n    for (final File f : files) {\n        if (!fileExtensionMatches(f, fileExtensions)) {\n            continue;\n        }\n        final String fileName = f.getAbsolutePath();\n        fireFileStarted(fileName);\n        final SortedSet<LocalizedMessage> fileMessages = Sets.newTreeSet();\n        try {\n            final FileText theText = new FileText(f.getAbsoluteFile(), charset);\n            for (final FileSetCheck fsc : fileSetChecks) {\n                fileMessages.addAll(fsc.process(f, theText));\n            }\n        } catch (final FileNotFoundException fnfe) {\n            Utils.getExceptionLogger().debug(\"FileNotFoundException occured.\", fnfe);\n            fileMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE, \"general.fileNotFound\", null, null, this.getClass(), null));\n        } catch (final IOException ioe) {\n            Utils.getExceptionLogger().debug(\"IOException occured.\", ioe);\n            fileMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE, \"general.exception\", new String[] { ioe.getMessage() }, null, this.getClass(), null));\n        }\n        fireErrors(fileName, fileMessages);\n        fireFileFinished(fileName);\n    }\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.finishProcessing();\n        fsc.destroy();\n    }\n    final int errorCount = counter.getCount();\n    fireAuditFinished();\n    return errorCount;\n}"
    },
    {
      "commit": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
      "startLine": 2,
      "endLine": 5,
      "methodCode": "public int process(List<File> files) {\n    fireAuditStarted();\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.beginProcessing(charset);\n    }\n    for (final File f : files) {\n        final String fileName = f.getAbsolutePath();\n        fireFileStarted(fileName);\n        final SortedSet<LocalizedMessage> fileMessages = Sets.newTreeSet();\n        try {\n            final FileText theText = new FileText(f.getAbsoluteFile(), charset);\n            for (final FileSetCheck fsc : fileSetChecks) {\n                fileMessages.addAll(fsc.process(f, theText));\n            }\n        } catch (final FileNotFoundException fnfe) {\n            Utils.getExceptionLogger().debug(\"FileNotFoundException occured.\", fnfe);\n            fileMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE, \"general.fileNotFound\", null, null, this.getClass(), null));\n        } catch (final IOException ioe) {\n            Utils.getExceptionLogger().debug(\"IOException occured.\", ioe);\n            fileMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE, \"general.exception\", new String[] { ioe.getMessage() }, null, this.getClass(), null));\n        }\n        fireErrors(fileName, fileMessages);\n        fireFileFinished(fileName);\n    }\n    for (final FileSetCheck fsc : fileSetChecks) {\n        fsc.finishProcessing();\n        fsc.destroy();\n    }\n    final int errorCount = counter.getCount();\n    fireAuditFinished();\n    return errorCount;\n}"
    },
    {
      "commit": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "startLine": 2,
      "endLine": 5,
      "methodCode": "public int process(List<File> aFiles) {\n    fireAuditStarted();\n    for (final FileSetCheck fsc : mFileSetChecks) {\n        fsc.beginProcessing(mCharset);\n    }\n    for (final File f : aFiles) {\n        final String fileName = f.getAbsolutePath();\n        fireFileStarted(fileName);\n        final SortedSet<LocalizedMessage> fileMessages = Sets.newTreeSet();\n        try {\n            final FileText theText = new FileText(f.getAbsoluteFile(), mCharset);\n            for (final FileSetCheck fsc : mFileSetChecks) {\n                fileMessages.addAll(fsc.process(f, theText));\n            }\n        } catch (final FileNotFoundException fnfe) {\n            Utils.getExceptionLogger().debug(\"FileNotFoundException occured.\", fnfe);\n            fileMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE, \"general.fileNotFound\", null, null, this.getClass(), null));\n        } catch (final IOException ioe) {\n            Utils.getExceptionLogger().debug(\"IOException occured.\", ioe);\n            fileMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE, \"general.exception\", new String[] { ioe.getMessage() }, null, this.getClass(), null));\n        }\n        fireErrors(fileName, fileMessages);\n        fireFileFinished(fileName);\n    }\n    for (final FileSetCheck fsc : mFileSetChecks) {\n        fsc.finishProcessing();\n        fsc.destroy();\n    }\n    final int errorCount = mCounter.getCount();\n    fireAuditFinished();\n    return errorCount;\n}"
    },
    {
      "commit": "1d614c3a7ecf8a3ede4df8a50da46e71792d0025",
      "startLine": 2,
      "endLine": 5,
      "methodCode": "public int process(List<File> aFiles) {\n    fireAuditStarted();\n    for (final FileSetCheck fsc : mFileSetChecks) {\n        fsc.beginProcessing(mCharset);\n    }\n    for (final File f : aFiles) {\n        final String fileName = f.getAbsolutePath();\n        fireFileStarted(fileName);\n        final SortedSet<LocalizedMessage> fileMessages = Sets.newTreeSet();\n        try {\n            final FileText theText = new FileText(f.getAbsoluteFile(), mCharset);\n            for (final FileSetCheck fsc : mFileSetChecks) {\n                fileMessages.addAll(fsc.process(f, theText));\n            }\n        } catch (final FileNotFoundException fnfe) {\n            Utils.getExceptionLogger().debug(\"FileNotFoundException occured.\", fnfe);\n            fileMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE, \"general.fileNotFound\", null, null, this.getClass(), null));\n        } catch (final IOException ioe) {\n            Utils.getExceptionLogger().debug(\"IOException occured.\", ioe);\n            fileMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE, \"general.exception\", new String[] { ioe.getMessage() }, null, this.getClass(), null));\n        }\n        fireErrors(fileName, fileMessages);\n        fireFileFinished(fileName);\n    }\n    for (final FileSetCheck fsc : mFileSetChecks) {\n        fsc.finishProcessing();\n        fsc.destroy();\n    }\n    final int errorCount = mCounter.getCount();\n    fireAuditFinished();\n    return errorCount;\n}"
    },
    {
      "commit": "e00c478dd61d9d883e41b500b780ab217582c2e7",
      "startLine": 2,
      "endLine": 5,
      "methodCode": "public int process(List<File> aFiles) {\n    fireAuditStarted();\n    for (final FileSetCheck fsc : mFileSetChecks) {\n        fsc.beginProcessing(mCharset);\n    }\n    for (final File f : aFiles) {\n        final String fileName = f.getAbsolutePath();\n        fireFileStarted(fileName);\n        final TreeSet<LocalizedMessage> fileMessages = Sets.newTreeSet();\n        try {\n            final FileText theText = new FileText(f.getAbsoluteFile(), mCharset);\n            for (final FileSetCheck fsc : mFileSetChecks) {\n                fileMessages.addAll(fsc.process(f, theText));\n            }\n        } catch (final FileNotFoundException fnfe) {\n            Utils.getExceptionLogger().debug(\"FileNotFoundException occured.\", fnfe);\n            fileMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE, \"general.fileNotFound\", null, null, this.getClass(), null));\n        } catch (final IOException ioe) {\n            Utils.getExceptionLogger().debug(\"IOException occured.\", ioe);\n            fileMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE, \"general.exception\", new String[] { ioe.getMessage() }, null, this.getClass(), null));\n        }\n        fireErrors(fileName, fileMessages);\n        fireFileFinished(fileName);\n    }\n    for (final FileSetCheck fsc : mFileSetChecks) {\n        fsc.finishProcessing();\n        fsc.destroy();\n    }\n    final int errorCount = mCounter.getCount();\n    fireAuditFinished();\n    return errorCount;\n}"
    },
    {
      "commit": "3cd6646941eca3da7d3b9a221c88e4c1d214876e",
      "startLine": 2,
      "endLine": 5,
      "methodCode": "public int process(List<File> aFiles) {\n    fireAuditStarted();\n    for (FileSetCheck fsc : mFileSetChecks) {\n        fsc.beginProcessing(mCharset);\n    }\n    for (File f : aFiles) {\n        final String fileName = f.getAbsolutePath();\n        fireFileStarted(fileName);\n        final TreeSet<LocalizedMessage> fileMessages = Sets.newTreeSet();\n        try {\n            final FileText theText = new FileText(f.getAbsoluteFile(), mCharset);\n            for (FileSetCheck fsc : mFileSetChecks) {\n                fileMessages.addAll(fsc.process(f, theText));\n            }\n        } catch (final FileNotFoundException fnfe) {\n            Utils.getExceptionLogger().debug(\"FileNotFoundException occured.\", fnfe);\n            fileMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE, \"general.fileNotFound\", null, null, this.getClass(), null));\n        } catch (final IOException ioe) {\n            Utils.getExceptionLogger().debug(\"IOException occured.\", ioe);\n            fileMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE, \"general.exception\", new String[] { ioe.getMessage() }, null, this.getClass(), null));\n        }\n        fireErrors(fileName, fileMessages);\n        fireFileFinished(fileName);\n    }\n    for (FileSetCheck fsc : mFileSetChecks) {\n        fsc.finishProcessing();\n        fsc.destroy();\n    }\n    final int errorCount = mCounter.getCount();\n    fireAuditFinished();\n    return errorCount;\n}"
    },
    {
      "commit": "f1fcae23142431016234774318e6ce3b5ccb48f4",
      "startLine": 2,
      "endLine": 5,
      "methodCode": "public int process(List<File> aFiles) {\n    fireAuditStarted();\n    for (FileSetCheck fsc : mFileSetChecks) {\n        fsc.beginProcessing(mCharset);\n    }\n    for (File f : aFiles) {\n        final String fileName = f.getAbsolutePath();\n        fireFileStarted(fileName);\n        final TreeSet<LocalizedMessage> fileMessages = Sets.newTreeSet();\n        try {\n            final String[] lines = Utils.getLines(f.getAbsolutePath(), mCharset);\n            final List<String> theLines = Lists.newArrayList(lines);\n            for (FileSetCheck fsc : mFileSetChecks) {\n                fileMessages.addAll(fsc.process(f, theLines));\n            }\n        } catch (final FileNotFoundException fnfe) {\n            Utils.getExceptionLogger().debug(\"FileNotFoundException occured.\", fnfe);\n            fileMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE, \"general.fileNotFound\", null, null, this.getClass(), null));\n        } catch (final IOException ioe) {\n            Utils.getExceptionLogger().debug(\"IOException occured.\", ioe);\n            fileMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE, \"general.exception\", new String[] { ioe.getMessage() }, null, this.getClass(), null));\n        }\n        fireErrors(fileName, fileMessages);\n        fireFileFinished(fileName);\n    }\n    for (FileSetCheck fsc : mFileSetChecks) {\n        fsc.finishProcessing();\n        fsc.destroy();\n    }\n    final int errorCount = mCounter.getCount();\n    fireAuditFinished();\n    return errorCount;\n}"
    },
    {
      "commit": "2e4762f1716c8d12c9652aad68cb4558181bb60c",
      "startLine": 2,
      "endLine": 5,
      "methodCode": "public int process(List<File> aFiles) {\n    fireAuditStarted();\n    for (FileSetCheck fsc : mFileSetChecks) {\n        fsc.beginProcessing(getCharset());\n    }\n    for (File f : aFiles) {\n        final String fileName = f.getAbsolutePath();\n        fireFileStarted(fileName);\n        final TreeSet<LocalizedMessage> fileMessages = Sets.newTreeSet();\n        try {\n            final String[] lines = Utils.getLines(f.getAbsolutePath(), getCharset());\n            final List<String> theLines = Lists.newArrayList(lines);\n            for (FileSetCheck fsc : mFileSetChecks) {\n                fileMessages.addAll(fsc.process(f, theLines));\n            }\n        } catch (final FileNotFoundException fnfe) {\n            Utils.getExceptionLogger().debug(\"FileNotFoundException occured.\", fnfe);\n            fileMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE, \"general.fileNotFound\", null, null, this.getClass(), null));\n        } catch (final IOException ioe) {\n            Utils.getExceptionLogger().debug(\"IOException occured.\", ioe);\n            fileMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE, \"general.exception\", new String[] { ioe.getMessage() }, null, this.getClass(), null));\n        }\n        fireErrors(fileName, fileMessages);\n        fireFileFinished(fileName);\n    }\n    for (FileSetCheck fsc : mFileSetChecks) {\n        fsc.finishProcessing();\n        fsc.destroy();\n    }\n    final int errorCount = mCounter.getCount();\n    fireAuditFinished();\n    return errorCount;\n}"
    },
    {
      "commit": "13b7c634337e38d20daa92ca9d5e069a2e72ec55",
      "startLine": 2,
      "endLine": 5,
      "methodCode": "public int process(List<File> aFiles) {\n    fireAuditStarted();\n    for (FileSetCheck fsc : mFileSetChecks) {\n        fsc.beginProcessing();\n    }\n    for (File f : aFiles) {\n        final String fileName = f.getAbsolutePath();\n        fireFileStarted(fileName);\n        final TreeSet<LocalizedMessage> fileMessages = Sets.newTreeSet();\n        try {\n            final String[] lines = Utils.getLines(f.getAbsolutePath());\n            final List<String> theLines = Lists.newArrayList(lines);\n            for (FileSetCheck fsc : mFileSetChecks) {\n                fileMessages.addAll(fsc.process(f, theLines));\n            }\n        } catch (final FileNotFoundException fnfe) {\n            Utils.getExceptionLogger().debug(\"FileNotFoundException occured.\", fnfe);\n            fileMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE, \"general.fileNotFound\", null, null, this.getClass(), null));\n        } catch (final IOException ioe) {\n            Utils.getExceptionLogger().debug(\"IOException occured.\", ioe);\n            fileMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE, \"general.exception\", new String[] { ioe.getMessage() }, null, this.getClass(), null));\n        }\n        fireErrors(fileName, fileMessages);\n        fireFileFinished(fileName);\n    }\n    for (FileSetCheck fsc : mFileSetChecks) {\n        fsc.finishProcessing();\n        fsc.destroy();\n    }\n    final int errorCount = mCounter.getCount();\n    fireAuditFinished();\n    return errorCount;\n}"
    },
    {
      "commit": "f38d8abd42c3e824635e542e6031b3da1997c02e",
      "startLine": 2,
      "endLine": 2,
      "methodCode": "public int process(List<File> aFiles) {\n    fireAuditStarted();\n    for (FileSetCheck fsc : mFileSetChecks) {\n        fsc.process(aFiles);\n        fsc.destroy();\n    }\n    final int errorCount = mCounter.getCount();\n    fireAuditFinished();\n    return errorCount;\n}"
    },
    {
      "commit": "f1afaf83f39b83cc3bd07a2388448b262652a76b",
      "startLine": 2,
      "endLine": 2,
      "methodCode": "public int process(File[] aFiles) {\n    fireAuditStarted();\n    for (FileSetCheck fsc : mFileSetChecks) {\n        fsc.process(aFiles);\n        fsc.destroy();\n    }\n    final int errorCount = mCounter.getCount();\n    fireAuditFinished();\n    return errorCount;\n}"
    },
    {
      "commit": "5d7063c660b241bce251f1a8c89394619f2791fb",
      "startLine": 2,
      "endLine": 2,
      "methodCode": "public int process(File[] aFiles) {\n    fireAuditStarted();\n    for (int i = 0; i < mFileSetChecks.size(); i++) {\n        final FileSetCheck fileSetCheck = (FileSetCheck) mFileSetChecks.get(i);\n        fileSetCheck.process(aFiles);\n        fileSetCheck.destroy();\n    }\n    final int errorCount = mCounter.getCount();\n    fireAuditFinished();\n    return errorCount;\n}"
    },
    {
      "commit": "ce9f55c439621cd2a130519aea0ca4367bc7c67c",
      "startLine": 2,
      "endLine": 2,
      "methodCode": "public int process(File[] aFiles) {\n    fireAuditStarted();\n    for (int i = 0; i < mFileSetChecks.size(); i++) {\n        FileSetCheck fileSetCheck = (FileSetCheck) mFileSetChecks.get(i);\n        fileSetCheck.process(aFiles);\n        fileSetCheck.destroy();\n    }\n    int errorCount = mCounter.getCount();\n    fireAuditFinished();\n    return errorCount;\n}"
    },
    {
      "commit": "abff1a2489ea8af10e1bc0a335551262d22f44e7",
      "startLine": 2,
      "endLine": 2,
      "methodCode": "public int process(File[] aFiles) {\n    fireAuditStarted();\n    for (int i = 0; i < mFileSetChecks.size(); i++) {\n        FileSetCheck fileSetCheck = (FileSetCheck) mFileSetChecks.get(i);\n        fileSetCheck.process(aFiles);\n    }\n    int errorCount = mCounter.getCount();\n    fireAuditFinished();\n    return errorCount;\n}"
    },
    {
      "commit": "54a09706ec1db32435b09e6b6910813325558f8d",
      "startLine": 2,
      "endLine": 2,
      "methodCode": "public int process(File[] aFiles) {\n    fireAuditStarted();\n    for (int i = 0; i < aFiles.length; i++) {\n        process(aFiles[i]);\n    }\n    int errorCount = mCounter.getCount();\n    fireAuditFinished();\n    return errorCount;\n}"
    },
    {
      "commit": "822384a711290170148b43b5ae390dd4e8cfaf4f",
      "startLine": 3,
      "endLine": 3,
      "methodCode": "public int process(File[] aFiles) {\n    int total = 0;\n    fireAuditStarted();\n    for (int i = 0; i < aFiles.length; i++) {\n        total += process(aFiles[i]);\n    }\n    fireAuditFinished();\n    return total;\n}"
    },
    {
      "commit": "788044ce8170fb926d33d0a048b3caa5152aca65",
      "startLine": 3,
      "endLine": 3,
      "methodCode": "public int process(String[] aFiles) {\n    int total = 0;\n    fireAuditStarted();\n    for (int i = 0; i < aFiles.length; i++) {\n        total += process(aFiles[i]);\n    }\n    fireAuditFinished();\n    return total;\n}"
    },
    {
      "commit": "4cbd709c019cf1b69796858506d673f7b66d37c7",
      "startLine": 3,
      "endLine": 3,
      "methodCode": "public int process(String[] aFiles) {\n    int total = 0;\n    fireAuditStarted();\n    total += checkPackageHtml(aFiles);\n    for (int i = 0; i < aFiles.length; i++) {\n        total += process(aFiles[i]);\n    }\n    fireAuditFinished();\n    return total;\n}"
    },
    {
      "commit": "b84b3fd04ad9c45e1466e35b707a2b59f5baf66b",
      "startLine": 3,
      "endLine": 3,
      "methodCode": "public int process(String[] aFiles) {\n    int total = 0;\n    fireAuditStarted();\n    total += checkPackageHtml(aFiles);\n    for (int i = 0; i < aFiles.length; i++) {\n        total += process(aFiles[i]);\n    }\n    fireAuditFinished();\n    return total;\n}"
    },
    {
      "commit": "6df3e84393d095000c982b2087344de84a91f9ef",
      "startLine": 3,
      "endLine": 3,
      "methodCode": "public int process(String[] aFiles) {\n    int total = 0;\n    fireAuditStarted();\n    total += checkPackageHtml(aFiles);\n    for (int i = 0; i < aFiles.length; i++) {\n        total += process(aFiles[i]);\n    }\n    fireAuditFinished();\n    return total;\n}"
    },
    {
      "commit": "c617457933a978f5fd861d7ea43d05bccf045c16",
      "startLine": 3,
      "endLine": 3,
      "methodCode": "public int process(String[] aFiles) {\n    int total = 0;\n    fireAuditStarted();\n    total += checkPackageHtml(aFiles);\n    for (int i = 0; i < aFiles.length; i++) {\n        total += process(aFiles[i]);\n    }\n    fireAuditFinished();\n    return total;\n}"
    },
    {
      "commit": "f755213c9e8f55286776975bfc62d91a99e8c7cb",
      "startLine": 3,
      "endLine": 3,
      "methodCode": "public int process(String[] aFiles) {\n    int total = 0;\n    fireAuditStarted();\n    for (int i = 0; i < aFiles.length; i++) {\n        total += process(aFiles[i]);\n    }\n    fireAuditFinished();\n    return total;\n}"
    },
    {
      "commit": "edf2c95634cd0c657465723eb0dc2e6f1834eeba",
      "startLine": 3,
      "endLine": 3,
      "methodCode": "public int process(String[] aFiles) {\n    int total = 0;\n    fireAuditStarted();\n    for (int i = 0; i < aFiles.length; i++) {\n        total += process(aFiles[i]);\n    }\n    fireAuditFinished();\n    return total;\n}"
    },
    {
      "commit": "0e3fe5643667a53079dbd114e5b1e9aa91fde083",
      "startLine": 3,
      "endLine": 3,
      "methodCode": "int process(String[] aFiles) {\n    int total = 0;\n    fireAuditStarted();\n    for (int i = 0; i < aFiles.length; i++) {\n        total += process(aFiles[i]);\n    }\n    fireAuditFinished();\n    return total;\n}"
    }
  ]
}