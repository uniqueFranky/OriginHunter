{
  "statementVersions": [
    {
      "commit": "d3146a545612422d3f8078f10afa00342b327199",
      "startLine": 20,
      "endLine": 24,
      "methodCode": "public static Locale toLocale(final String str) {\n    if (str == null) {\n        return null;\n    }\n    if (str.isEmpty()) {\n        return new Locale(StringUtils.EMPTY, StringUtils.EMPTY);\n    }\n    if (str.contains(\"#\")) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final char ch0 = str.charAt(0);\n    if (ch0 == '_') {\n        if (len < 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        final char ch1 = str.charAt(1);\n        final char ch2 = str.charAt(2);\n        if (!Character.isUpperCase(ch1) || !Character.isUpperCase(ch2)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 3) {\n            return new Locale(StringUtils.EMPTY, str.substring(1, 3));\n        }\n        if (len < 5) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.charAt(3) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(StringUtils.EMPTY, str.substring(1, 3), str.substring(4));\n    }\n    return parseLocale(str);\n}"
    },
    {
      "commit": "d547412bbd2a1ca56769a2bfa13b7ed9547310ca",
      "startLine": 20,
      "endLine": 24,
      "methodCode": "public static Locale toLocale(final String str) {\n    if (str == null) {\n        return null;\n    }\n    if (str.isEmpty()) {\n        return new Locale(StringUtils.EMPTY, StringUtils.EMPTY);\n    }\n    if (str.contains(\"#\")) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final char ch0 = str.charAt(0);\n    if (ch0 == '_') {\n        if (len < 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        final char ch1 = str.charAt(1);\n        final char ch2 = str.charAt(2);\n        if (!Character.isUpperCase(ch1) || !Character.isUpperCase(ch2)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 3) {\n            return new Locale(StringUtils.EMPTY, str.substring(1, 3));\n        }\n        if (len < 5) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.charAt(3) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(StringUtils.EMPTY, str.substring(1, 3), str.substring(4));\n    }\n    return parseLocale(str, len);\n}"
    },
    {
      "commit": "3c89994355f3574078c832b2dcacba0e65e87ed1",
      "startLine": 20,
      "endLine": 24,
      "methodCode": "public static Locale toLocale(final String str) {\n    if (str == null) {\n        return null;\n    }\n    if (str.isEmpty()) {\n        return new Locale(StringUtils.EMPTY, StringUtils.EMPTY);\n    }\n    if (str.contains(\"#\")) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final char ch0 = str.charAt(0);\n    if (ch0 == '_') {\n        if (len < 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        final char ch1 = str.charAt(1);\n        final char ch2 = str.charAt(2);\n        if (!Character.isUpperCase(ch1) || !Character.isUpperCase(ch2)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 3) {\n            return new Locale(StringUtils.EMPTY, str.substring(1, 3));\n        }\n        if (len < 5) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.charAt(3) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(StringUtils.EMPTY, str.substring(1, 3), str.substring(4));\n    }\n    final String[] segments = str.split(\"_\", -1);\n    final int segmentCount = segments.length - 1;\n    final String country = segments[0];\n    switch(segmentCount) {\n        case 0:\n            if (StringUtils.isAllLowerCase(str) && (len == 2 || len == 3)) {\n                return new Locale(str);\n            }\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        case 1:\n            if (StringUtils.isAllLowerCase(country) && (country.length() == 2 || country.length() == 3) && (segments[1].length() == 2 && StringUtils.isAllUpperCase(segments[1])) || (segments[1].length() == 3 && StringUtils.isNumeric(segments[1]))) {\n                return new Locale(country, segments[1]);\n            }\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        case 2:\n            if (StringUtils.isAllLowerCase(country) && (country.length() == 2 || country.length() == 3) && (segments[1].length() == 0 || segments[1].length() == 2 && StringUtils.isAllUpperCase(segments[1])) && segments[2].length() > 0) {\n                return new Locale(country, segments[1], segments[2]);\n            }\n        default:\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n}"
    },
    {
      "commit": "4bd982d1a1df87724682c17c39bf27b5cbe389be",
      "startLine": 20,
      "endLine": 24,
      "methodCode": "public static Locale toLocale(final String str) {\n    if (str == null) {\n        return null;\n    }\n    if (str.isEmpty()) {\n        return new Locale(StringUtils.EMPTY, StringUtils.EMPTY);\n    }\n    if (str.contains(\"#\")) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final char ch0 = str.charAt(0);\n    if (ch0 == '_') {\n        if (len < 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        final char ch1 = str.charAt(1);\n        final char ch2 = str.charAt(2);\n        if (!Character.isUpperCase(ch1) || !Character.isUpperCase(ch2)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 3) {\n            return new Locale(StringUtils.EMPTY, str.substring(1, 3));\n        }\n        if (len < 5) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.charAt(3) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(StringUtils.EMPTY, str.substring(1, 3), str.substring(4));\n    }\n    final String[] split = str.split(\"_\", -1);\n    final int occurrences = split.length - 1;\n    switch(occurrences) {\n        case 0:\n            if (StringUtils.isAllLowerCase(str) && (len == 2 || len == 3)) {\n                return new Locale(str);\n            }\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        case 1:\n            if (StringUtils.isAllLowerCase(split[0]) && (split[0].length() == 2 || split[0].length() == 3) && (split[1].length() == 2 && StringUtils.isAllUpperCase(split[1])) || (split[1].length() == 3 && StringUtils.isNumeric(split[1]))) {\n                return new Locale(split[0], split[1]);\n            }\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        case 2:\n            if (StringUtils.isAllLowerCase(split[0]) && (split[0].length() == 2 || split[0].length() == 3) && (split[1].length() == 0 || split[1].length() == 2 && StringUtils.isAllUpperCase(split[1])) && split[2].length() > 0) {\n                return new Locale(split[0], split[1], split[2]);\n            }\n        default:\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n}"
    },
    {
      "commit": "9c5b6cdc7108eb071785b0c4edd205650cdf1ca4",
      "startLine": 20,
      "endLine": 24,
      "methodCode": "public static Locale toLocale(final String str) {\n    if (str == null) {\n        return null;\n    }\n    if (str.isEmpty()) {\n        return new Locale(StringUtils.EMPTY, StringUtils.EMPTY);\n    }\n    if (str.contains(\"#\")) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final char ch0 = str.charAt(0);\n    if (ch0 == '_') {\n        if (len < 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        final char ch1 = str.charAt(1);\n        final char ch2 = str.charAt(2);\n        if (!Character.isUpperCase(ch1) || !Character.isUpperCase(ch2)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 3) {\n            return new Locale(StringUtils.EMPTY, str.substring(1, 3));\n        }\n        if (len < 5) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.charAt(3) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(StringUtils.EMPTY, str.substring(1, 3), str.substring(4));\n    }\n    final String[] split = str.split(\"_\", -1);\n    final int occurrences = split.length - 1;\n    switch(occurrences) {\n        case 0:\n            if (StringUtils.isAllLowerCase(str) && (len == 2 || len == 3)) {\n                return new Locale(str);\n            }\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        case 1:\n            if (StringUtils.isAllLowerCase(split[0]) && (split[0].length() == 2 || split[0].length() == 3) && split[1].length() == 2 && StringUtils.isAllUpperCase(split[1])) {\n                return new Locale(split[0], split[1]);\n            }\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        case 2:\n            if (StringUtils.isAllLowerCase(split[0]) && (split[0].length() == 2 || split[0].length() == 3) && (split[1].length() == 0 || split[1].length() == 2 && StringUtils.isAllUpperCase(split[1])) && split[2].length() > 0) {\n                return new Locale(split[0], split[1], split[2]);\n            }\n        default:\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n}"
    },
    {
      "commit": "15b80753a6e8f481ea5029bc278e362994cb7bee",
      "startLine": 20,
      "endLine": 24,
      "methodCode": "public static Locale toLocale(final String str) {\n    if (str == null) {\n        return null;\n    }\n    if (str.isEmpty()) {\n        return new Locale(StringUtils.EMPTY, StringUtils.EMPTY);\n    }\n    if (str.contains(\"#\")) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final char ch0 = str.charAt(0);\n    if (ch0 == '_') {\n        if (len < 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        final char ch1 = str.charAt(1);\n        final char ch2 = str.charAt(2);\n        if (!Character.isUpperCase(ch1) || !Character.isUpperCase(ch2)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 3) {\n            return new Locale(StringUtils.EMPTY, str.substring(1, 3));\n        }\n        if (len < 5) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.charAt(3) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(StringUtils.EMPTY, str.substring(1, 3), str.substring(4));\n    }\n    final String[] split = str.split(\"_\", -1);\n    final int occurrences = split.length - 1;\n    switch(occurrences) {\n        case 0:\n            if (StringUtils.isAllLowerCase(str) && (len == 2 || len == 3)) {\n                return new Locale(str);\n            }\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        case 1:\n            if (StringUtils.isAllLowerCase(split[0]) && (split[0].length() == 2 || split[0].length() == 3) && split[1].length() == 2 && StringUtils.isAllUpperCase(split[1])) {\n                return new Locale(split[0], split[1]);\n            }\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        case 2:\n            if (StringUtils.isAllLowerCase(split[0]) && (split[0].length() == 2 || split[0].length() == 3) && (split[1].length() == 0 || (split[1].length() == 2 && StringUtils.isAllUpperCase(split[1]))) && split[2].length() > 0) {\n                return new Locale(split[0], split[1], split[2]);\n            }\n        default:\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n}"
    },
    {
      "commit": "71966110f7918a6366f97ded3bab25c7b5864cb8",
      "startLine": 20,
      "endLine": 24,
      "methodCode": "public static Locale toLocale(final String str) {\n    if (str == null) {\n        return null;\n    }\n    if (str.isEmpty()) {\n        return new Locale(\"\", \"\");\n    }\n    if (str.contains(\"#\")) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final char ch0 = str.charAt(0);\n    if (ch0 == '_') {\n        if (len < 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        final char ch1 = str.charAt(1);\n        final char ch2 = str.charAt(2);\n        if (!Character.isUpperCase(ch1) || !Character.isUpperCase(ch2)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 3) {\n            return new Locale(\"\", str.substring(1, 3));\n        }\n        if (len < 5) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.charAt(3) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(\"\", str.substring(1, 3), str.substring(4));\n    }\n    final String[] split = str.split(\"_\", -1);\n    final int occurrences = split.length - 1;\n    switch(occurrences) {\n        case 0:\n            if (StringUtils.isAllLowerCase(str) && (len == 2 || len == 3)) {\n                return new Locale(str);\n            }\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        case 1:\n            if (StringUtils.isAllLowerCase(split[0]) && (split[0].length() == 2 || split[0].length() == 3) && split[1].length() == 2 && StringUtils.isAllUpperCase(split[1])) {\n                return new Locale(split[0], split[1]);\n            }\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        case 2:\n            if (StringUtils.isAllLowerCase(split[0]) && (split[0].length() == 2 || split[0].length() == 3) && (split[1].length() == 0 || (split[1].length() == 2 && StringUtils.isAllUpperCase(split[1]))) && split[2].length() > 0) {\n                return new Locale(split[0], split[1], split[2]);\n            }\n        default:\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n}"
    },
    {
      "commit": "f7e5f2c877a07c31010db8554125e77db6a605cc",
      "startLine": 20,
      "endLine": 24,
      "methodCode": "public static Locale toLocale(final String str) {\n    if (str == null) {\n        return null;\n    }\n    if (str.isEmpty()) {\n        return new Locale(\"\", \"\");\n    }\n    if (str.contains(\"#\")) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final char ch0 = str.charAt(0);\n    if (ch0 == '_') {\n        if (len < 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        final char ch1 = str.charAt(1);\n        final char ch2 = str.charAt(2);\n        if (!Character.isUpperCase(ch1) || !Character.isUpperCase(ch2)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 3) {\n            return new Locale(\"\", str.substring(1, 3));\n        }\n        if (len < 5) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.charAt(3) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(\"\", str.substring(1, 3), str.substring(4));\n    }\n    final String[] split = str.split(\"_\", -1);\n    final int occurrences = split.length - 1;\n    switch(occurrences) {\n        case 0:\n            if (StringUtils.isAllLowerCase(str) && (len == 2 || len == 3)) {\n                return new Locale(str);\n            } else {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n        case 1:\n            if (StringUtils.isAllLowerCase(split[0]) && (split[0].length() == 2 || split[0].length() == 3) && split[1].length() == 2 && StringUtils.isAllUpperCase(split[1])) {\n                return new Locale(split[0], split[1]);\n            }\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        case 2:\n            if (StringUtils.isAllLowerCase(split[0]) && (split[0].length() == 2 || split[0].length() == 3) && (split[1].length() == 0 || (split[1].length() == 2 && StringUtils.isAllUpperCase(split[1]))) && split[2].length() > 0) {\n                return new Locale(split[0], split[1], split[2]);\n            }\n        default:\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n}"
    },
    {
      "commit": "96c30e248d6d27a1df8e26be14aa10c633168cdb",
      "startLine": 20,
      "endLine": 24,
      "methodCode": "public static Locale toLocale(final String str) {\n    if (str == null) {\n        return null;\n    }\n    if (str.isEmpty()) {\n        return new Locale(\"\", \"\");\n    }\n    if (str.contains(\"#\")) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final char ch0 = str.charAt(0);\n    if (ch0 == '_') {\n        if (len < 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        final char ch1 = str.charAt(1);\n        final char ch2 = str.charAt(2);\n        if (!Character.isUpperCase(ch1) || !Character.isUpperCase(ch2)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 3) {\n            return new Locale(\"\", str.substring(1, 3));\n        }\n        if (len < 5) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.charAt(3) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(\"\", str.substring(1, 3), str.substring(4));\n    }\n    final String[] split = str.split(\"_\", -1);\n    final int occurrences = split.length - 1;\n    switch(occurrences) {\n        case 0:\n            if (StringUtils.isAllLowerCase(str) && (len == 2 || len == 3)) {\n                return new Locale(str);\n            } else {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n        case 1:\n            if (StringUtils.isAllLowerCase(split[0]) && (split[0].length() == 2 || split[0].length() == 3) && split[1].length() == 2 && StringUtils.isAllUpperCase(split[1])) {\n                return new Locale(split[0], split[1]);\n            } else {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n        case 2:\n            if (StringUtils.isAllLowerCase(split[0]) && (split[0].length() == 2 || split[0].length() == 3) && (split[1].length() == 0 || (split[1].length() == 2 && StringUtils.isAllUpperCase(split[1]))) && split[2].length() > 0) {\n                return new Locale(split[0], split[1], split[2]);\n            }\n        default:\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n}"
    },
    {
      "commit": "f27c439c8d8818e61c11019d1d58b311a831c301",
      "startLine": 20,
      "endLine": 24,
      "methodCode": "public static Locale toLocale(final String str) {\n    if (str == null) {\n        return null;\n    }\n    if (str.isEmpty()) {\n        return new Locale(\"\", \"\");\n    }\n    if (str.contains(\"#\")) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final char ch0 = str.charAt(0);\n    if (ch0 == '_') {\n        if (len < 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        final char ch1 = str.charAt(1);\n        final char ch2 = str.charAt(2);\n        if (!Character.isUpperCase(ch1) || !Character.isUpperCase(ch2)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 3) {\n            return new Locale(\"\", str.substring(1, 3));\n        }\n        if (len < 5) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.charAt(3) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(\"\", str.substring(1, 3), str.substring(4));\n    }\n    String[] split = str.split(\"_\", -1);\n    int occurrences = split.length - 1;\n    switch(occurrences) {\n        case 0:\n            if (StringUtils.isAllLowerCase(str) && (len == 2 || len == 3)) {\n                return new Locale(str);\n            } else {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n        case 1:\n            if (StringUtils.isAllLowerCase(split[0]) && (split[0].length() == 2 || split[0].length() == 3) && split[1].length() == 2 && StringUtils.isAllUpperCase(split[1])) {\n                return new Locale(split[0], split[1]);\n            } else {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n        case 2:\n            if (StringUtils.isAllLowerCase(split[0]) && (split[0].length() == 2 || split[0].length() == 3) && (split[1].length() == 0 || (split[1].length() == 2 && StringUtils.isAllUpperCase(split[1]))) && split[2].length() > 0) {\n                return new Locale(split[0], split[1], split[2]);\n            }\n        default:\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n}"
    },
    {
      "commit": "8ea0c0284810bd6ec00f608be31abd20dbd4b72b",
      "startLine": 20,
      "endLine": 24,
      "methodCode": "public static Locale toLocale(final String str) {\n    if (str == null) {\n        return null;\n    }\n    if (str.isEmpty()) {\n        return new Locale(\"\", \"\");\n    }\n    if (str.contains(\"#\")) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final char ch0 = str.charAt(0);\n    if (ch0 == '_') {\n        if (len < 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        final char ch1 = str.charAt(1);\n        final char ch2 = str.charAt(2);\n        if (!Character.isUpperCase(ch1) || !Character.isUpperCase(ch2)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 3) {\n            return new Locale(\"\", str.substring(1, 3));\n        }\n        if (len < 5) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.charAt(3) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(\"\", str.substring(1, 3), str.substring(4));\n    }\n    String[] split = str.split(\"_\", -1);\n    int occurrences = split.length - 1;\n    switch(occurrences) {\n        case 0:\n            if (StringUtils.isAllLowerCase(str) && (len == 2 || len == 3)) {\n                return new Locale(str);\n            } else {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n        case 1:\n            if (StringUtils.isAllLowerCase(split[0]) && (split[0].length() == 2 || split[0].length() == 3) && split[1].length() == 2 && StringUtils.isAllUpperCase(split[1])) {\n                return new Locale(split[0], split[1]);\n            } else {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n        case 2:\n            if (StringUtils.isAllLowerCase(split[0]) && (split[0].length() == 2 || split[0].length() == 3) && (split[1].length() == 0 || (split[1].length() == 2 && StringUtils.isAllUpperCase(split[1]))) && split[2].length() > 0) {\n                return new Locale(split[0], split[1], split[2]);\n            }\n        default:\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n}"
    },
    {
      "commit": "24b6a468ae6ba138c4f4a1f4793fed4e73bf3c15",
      "startLine": 20,
      "endLine": 24,
      "methodCode": "public static Locale toLocale(final String str) {\n    if (str == null) {\n        return null;\n    }\n    if (str.isEmpty()) {\n        return new Locale(\"\", \"\");\n    }\n    if (str.contains(\"#\")) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final char ch0 = str.charAt(0);\n    if (ch0 == '_') {\n        if (len < 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        final char ch1 = str.charAt(1);\n        final char ch2 = str.charAt(2);\n        if (!Character.isUpperCase(ch1) || !Character.isUpperCase(ch2)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 3) {\n            return new Locale(\"\", str.substring(1, 3));\n        }\n        if (len < 5) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.charAt(3) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(\"\", str.substring(1, 3), str.substring(4));\n    }\n    final char ch1 = str.charAt(1);\n    if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str);\n    }\n    if (len < 5) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (str.charAt(2) != '_') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final char ch3 = str.charAt(3);\n    if (ch3 == '_') {\n        return new Locale(str.substring(0, 2), \"\", str.substring(4));\n    }\n    final char ch4 = str.charAt(4);\n    if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 5) {\n        return new Locale(str.substring(0, 2), str.substring(3, 5));\n    }\n    if (len < 7) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (str.charAt(5) != '_') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n}"
    },
    {
      "commit": "c99a4a3ee24758ae6e2271752d91b58c116e81e9",
      "startLine": 20,
      "endLine": 24,
      "methodCode": "public static Locale toLocale(final String str) {\n    if (str == null) {\n        return null;\n    }\n    if (str.isEmpty()) {\n        throw new IllegalArgumentException(\"Cannot create locale from empty string\");\n    }\n    if (str.contains(\"#\")) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final char ch0 = str.charAt(0);\n    if (ch0 == '_') {\n        if (len < 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        final char ch1 = str.charAt(1);\n        final char ch2 = str.charAt(2);\n        if (!Character.isUpperCase(ch1) || !Character.isUpperCase(ch2)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 3) {\n            return new Locale(\"\", str.substring(1, 3));\n        }\n        if (len < 5) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.charAt(3) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(\"\", str.substring(1, 3), str.substring(4));\n    }\n    final char ch1 = str.charAt(1);\n    if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str);\n    }\n    if (len < 5) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (str.charAt(2) != '_') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final char ch3 = str.charAt(3);\n    if (ch3 == '_') {\n        return new Locale(str.substring(0, 2), \"\", str.substring(4));\n    }\n    final char ch4 = str.charAt(4);\n    if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 5) {\n        return new Locale(str.substring(0, 2), str.substring(3, 5));\n    }\n    if (len < 7) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (str.charAt(5) != '_') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n}"
    },
    {
      "commit": "8303f1efa3141509441c9268f292941e3b161355",
      "startLine": 17,
      "endLine": 21,
      "methodCode": "public static Locale toLocale(final String str) {\n    if (str == null) {\n        return null;\n    }\n    if (str.contains(\"#\")) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final char ch0 = str.charAt(0);\n    if (ch0 == '_') {\n        if (len < 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        final char ch1 = str.charAt(1);\n        final char ch2 = str.charAt(2);\n        if (!Character.isUpperCase(ch1) || !Character.isUpperCase(ch2)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 3) {\n            return new Locale(\"\", str.substring(1, 3));\n        }\n        if (len < 5) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.charAt(3) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(\"\", str.substring(1, 3), str.substring(4));\n    }\n    final char ch1 = str.charAt(1);\n    if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str);\n    }\n    if (len < 5) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (str.charAt(2) != '_') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final char ch3 = str.charAt(3);\n    if (ch3 == '_') {\n        return new Locale(str.substring(0, 2), \"\", str.substring(4));\n    }\n    final char ch4 = str.charAt(4);\n    if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 5) {\n        return new Locale(str.substring(0, 2), str.substring(3, 5));\n    }\n    if (len < 7) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (str.charAt(5) != '_') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n}"
    },
    {
      "commit": "d77fe491fd4e5bed5319379c23893d92ed7fc9da",
      "startLine": 17,
      "endLine": 21,
      "methodCode": "public static Locale toLocale(final String str) {\n    if (str == null) {\n        return null;\n    }\n    if (str.contains(\"#\")) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final char ch0 = str.charAt(0);\n    if (ch0 == '_') {\n        if (len < 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        final char ch1 = str.charAt(1);\n        final char ch2 = str.charAt(2);\n        if (!Character.isUpperCase(ch1) || !Character.isUpperCase(ch2)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 3) {\n            return new Locale(\"\", str.substring(1, 3));\n        }\n        if (len < 5) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.charAt(3) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(\"\", str.substring(1, 3), str.substring(4));\n    }\n    final char ch1 = str.charAt(1);\n    if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str);\n    }\n    if (len < 5) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (str.charAt(2) != '_') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final char ch3 = str.charAt(3);\n    if (ch3 == '_') {\n        return new Locale(str.substring(0, 2), \"\", str.substring(4));\n    }\n    final char ch4 = str.charAt(4);\n    if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 5) {\n        return new Locale(str.substring(0, 2), str.substring(3, 5));\n    }\n    if (len < 7) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (str.charAt(5) != '_') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n}"
    },
    {
      "commit": "dcde57852a97a9ac8021d2440b3de5be4870ecf6",
      "startLine": 17,
      "endLine": 21,
      "methodCode": "public static Locale toLocale(final String str) {\n    if (str == null) {\n        return null;\n    }\n    if (str.contains(\"#\")) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final char ch0 = str.charAt(0);\n    if (ch0 == '_') {\n        if (len < 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        final char ch1 = str.charAt(1);\n        final char ch2 = str.charAt(2);\n        if (!Character.isUpperCase(ch1) || !Character.isUpperCase(ch2)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 3) {\n            return new Locale(\"\", str.substring(1, 3));\n        }\n        if (len < 5) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.charAt(3) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(\"\", str.substring(1, 3), str.substring(4));\n    } else {\n        final char ch1 = str.charAt(1);\n        if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 2) {\n            return new Locale(str);\n        }\n        if (len < 5) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        final char ch3 = str.charAt(3);\n        if (ch3 == '_') {\n            return new Locale(str.substring(0, 2), \"\", str.substring(4));\n        }\n        final char ch4 = str.charAt(4);\n        if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 5) {\n            return new Locale(str.substring(0, 2), str.substring(3, 5));\n        }\n        if (len < 7) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.charAt(5) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n    }\n}"
    },
    {
      "commit": "4d46f014fb8ee44386feb5fec52509f35d0e36ea",
      "startLine": 14,
      "endLine": 18,
      "methodCode": "public static Locale toLocale(final String str) {\n    if (str == null) {\n        return null;\n    }\n    final int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final char ch0 = str.charAt(0);\n    if (ch0 == '_') {\n        if (len < 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        final char ch1 = str.charAt(1);\n        final char ch2 = str.charAt(2);\n        if (!Character.isUpperCase(ch1) || !Character.isUpperCase(ch2)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 3) {\n            return new Locale(\"\", str.substring(1, 3));\n        }\n        if (len < 5) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.charAt(3) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(\"\", str.substring(1, 3), str.substring(4));\n    } else {\n        final char ch1 = str.charAt(1);\n        if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 2) {\n            return new Locale(str);\n        }\n        if (len < 5) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        final char ch3 = str.charAt(3);\n        if (ch3 == '_') {\n            return new Locale(str.substring(0, 2), \"\", str.substring(4));\n        }\n        final char ch4 = str.charAt(4);\n        if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 5) {\n            return new Locale(str.substring(0, 2), str.substring(3, 5));\n        }\n        if (len < 7) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.charAt(5) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n    }\n}"
    },
    {
      "commit": "fc5c081e22a61bb5a6810af302be3f22f7966df4",
      "startLine": 9,
      "endLine": 13,
      "methodCode": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len != 2 && len != 5 && len < 7) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str, \"\");\n    } else {\n        if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        char ch3 = str.charAt(3);\n        if (ch3 == '_') {\n            return new Locale(str.substring(0, 2), \"\", str.substring(4));\n        }\n        char ch4 = str.charAt(4);\n        if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 5) {\n            return new Locale(str.substring(0, 2), str.substring(3, 5));\n        } else {\n            if (str.charAt(5) != '_') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n        }\n    }\n}"
    },
    {
      "commit": "debc02c6d9b94c717b4182ae4dd7a97d47293a52",
      "startLine": 9,
      "endLine": 13,
      "methodCode": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len != 2 && len != 5 && len < 7) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str, \"\");\n    } else {\n        if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        char ch3 = str.charAt(3);\n        if (ch3 == '_') {\n            return new Locale(str.substring(0, 2), \"\", str.substring(4));\n        }\n        char ch4 = str.charAt(4);\n        if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 5) {\n            return new Locale(str.substring(0, 2), str.substring(3, 5));\n        } else {\n            if (str.charAt(5) != '_') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n        }\n    }\n}"
    },
    {
      "commit": "75d931a3264b73caa9cdd7d3373375cc33008ddf",
      "startLine": 9,
      "endLine": 13,
      "methodCode": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len != 2 && len != 5 && len < 7) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str, \"\");\n    } else {\n        if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        char ch3 = str.charAt(3);\n        if (ch3 == '_') {\n            return new Locale(str.substring(0, 2), \"\", str.substring(4));\n        }\n        char ch4 = str.charAt(4);\n        if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 5) {\n            return new Locale(str.substring(0, 2), str.substring(3, 5));\n        } else {\n            if (str.charAt(5) != '_') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n        }\n    }\n}"
    },
    {
      "commit": "cfd9081647e732143fbdc2db99681afa5b403a0f",
      "startLine": 9,
      "endLine": 13,
      "methodCode": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len != 2 && len != 5 && len < 7) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str, \"\");\n    } else {\n        if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        char ch3 = str.charAt(3);\n        char ch4 = str.charAt(4);\n        if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 5) {\n            return new Locale(str.substring(0, 2), str.substring(3, 5));\n        } else {\n            if (str.charAt(5) != '_') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n        }\n    }\n}"
    },
    {
      "commit": "d1f5ebf4122aaf0675ef5547c2a6733f52a892d4",
      "startLine": 9,
      "endLine": 13,
      "methodCode": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len != 2 && len != 5 && len < 7) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str, \"\");\n    } else {\n        if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        char ch3 = str.charAt(3);\n        char ch4 = str.charAt(4);\n        if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 5) {\n            return new Locale(str.substring(0, 2), str.substring(3, 5));\n        } else {\n            if (str.charAt(5) != '_') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n        }\n    }\n}"
    },
    {
      "commit": "04e1537d3c41646fdb56b60fae70a630ae177796",
      "startLine": 8,
      "endLine": 10,
      "methodCode": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    if (str.length() != 2 && str.length() != 5 && str.length() < 7) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (Character.isLowerCase(str.charAt(0)) == false || Character.isLowerCase(str.charAt(1)) == false) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (str.length() == 2) {\n        return new Locale(str, \"\");\n    } else {\n        if (Character.isUpperCase(str.charAt(3)) == false || Character.isUpperCase(str.charAt(4)) == false) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.length() == 5) {\n            return new Locale(str.substring(0, 2), str.substring(3, 5));\n        } else {\n            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n        }\n    }\n}"
    }
  ]
}