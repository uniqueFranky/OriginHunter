{
  "statementVersions": [
    {
      "commit": "8993c0060e4eb2d5bca20e3529a829a9dd90efdf",
      "startLine": 3,
      "endLine": 12,
      "methodCode": "private String doHttpStream(final BOMInputStream bom, final BOMInputStream pis, final String httpContentType, final boolean lenient) throws IOException {\n    final String bomEnc = bom.getBOMCharsetName();\n    final String xmlGuessEnc = pis.getBOMCharsetName();\n    final String xmlEnc = getXmlProlog(pis, xmlGuessEnc);\n    try {\n        return calculateHttpEncoding(httpContentType, bomEnc, xmlGuessEnc, xmlEnc, lenient);\n    } catch (final XmlStreamReaderException ex) {\n        if (lenient) {\n            return doLenientDetection(httpContentType, ex);\n        }\n        throw ex;\n    }\n}"
    },
    {
      "commit": "6aa00766b9103d75c763160280429af8e1f0549e",
      "startLine": 3,
      "endLine": 13,
      "methodCode": "private String doHttpStream(final BOMInputStream bom, final BOMInputStream pis, final String httpContentType, final boolean lenient) throws IOException {\n    final String bomEnc = bom.getBOMCharsetName();\n    final String xmlGuessEnc = pis.getBOMCharsetName();\n    final String xmlEnc = getXmlProlog(pis, xmlGuessEnc);\n    try {\n        return calculateHttpEncoding(httpContentType, bomEnc, xmlGuessEnc, xmlEnc, lenient);\n    } catch (final XmlStreamReaderException ex) {\n        if (lenient) {\n            return doLenientDetection(httpContentType, ex);\n        } else {\n            throw ex;\n        }\n    }\n}"
    },
    {
      "commit": "97191772383bc267d16497c884a1c8b90033911b",
      "startLine": 3,
      "endLine": 13,
      "methodCode": "private String doHttpStream(BOMInputStream bom, BOMInputStream pis, String httpContentType, boolean lenient) throws IOException {\n    String bomEnc = bom.getBOMCharsetName();\n    String xmlGuessEnc = pis.getBOMCharsetName();\n    String xmlEnc = getXmlProlog(pis, xmlGuessEnc);\n    try {\n        return calculateHttpEncoding(httpContentType, bomEnc, xmlGuessEnc, xmlEnc, lenient);\n    } catch (XmlStreamReaderException ex) {\n        if (lenient) {\n            return doLenientDetection(httpContentType, ex);\n        } else {\n            throw ex;\n        }\n    }\n}"
    },
    {
      "commit": "294c570fcae9ca62e3157a9e7b8293a08e68dae2",
      "startLine": 5,
      "endLine": 15,
      "methodCode": "private String doHttpStream(InputStream is, String httpContentType, boolean lenient) throws IOException {\n    BOMInputStream bom = new BOMInputStream(new BufferedInputStream(is, BUFFER_SIZE), false, BOMS);\n    BOMInputStream pis = new BOMInputStream(bom, true, XML_GUESS_BYTES);\n    String bomEnc = bom.getBOMCharsetName();\n    String xmlGuessEnc = pis.getBOMCharsetName();\n    String xmlEnc = getXmlProlog(pis, xmlGuessEnc);\n    try {\n        return calculateHttpEncoding(httpContentType, bomEnc, xmlGuessEnc, xmlEnc, lenient);\n    } catch (XmlStreamReaderException ex) {\n        if (lenient) {\n            return doLenientDetection(httpContentType, is, ex);\n        } else {\n            throw ex;\n        }\n    }\n}"
    },
    {
      "commit": "8a1529917f7aa5604fbdaa689b086c04848779af",
      "startLine": 5,
      "endLine": 15,
      "methodCode": "private void doHttpStream(InputStream is, String httpContentType, boolean lenient) throws IOException {\n    BOMInputStream bom = new BOMInputStream(new BufferedInputStream(is, BUFFER_SIZE), false, BOMS);\n    BOMInputStream pis = new BOMInputStream(bom, true, XML_GUESS_BYTES);\n    String bomEnc = bom.getBOMCharsetName();\n    String xmlGuessEnc = pis.getBOMCharsetName();\n    String xmlEnc = getXmlProlog(pis, xmlGuessEnc);\n    try {\n        this.encoding = calculateHttpEncoding(httpContentType, bomEnc, xmlGuessEnc, xmlEnc, lenient);\n    } catch (XmlStreamReaderException ex) {\n        if (lenient) {\n            this.encoding = doLenientDetection(httpContentType, is, ex);\n        } else {\n            throw ex;\n        }\n    }\n    this.reader = new InputStreamReader(is, encoding);\n}"
    },
    {
      "commit": "7264eea73bc0f9560520ed6c423ff62f18ab4940",
      "startLine": 5,
      "endLine": 7,
      "methodCode": "private void doHttpStream(InputStream is, String httpContentType, boolean lenient) throws IOException {\n    BOMInputStream bom = new BOMInputStream(new BufferedInputStream(is, BUFFER_SIZE), false, BOMS);\n    BOMInputStream pis = new BOMInputStream(bom, true, XML_GUESS_BYTES);\n    String bomEnc = bom.getBOMCharsetName();\n    String xmlGuessEnc = pis.getBOMCharsetName();\n    String xmlEnc = getXmlProlog(pis, xmlGuessEnc);\n    this.encoding = calculateHttpEncoding(httpContentType, bomEnc, xmlGuessEnc, xmlEnc, lenient);\n    this.reader = new InputStreamReader(is, encoding);\n}"
    },
    {
      "commit": "e4540bba7aebd88d3d4b22e68a6a916ddfc48890",
      "startLine": 7,
      "endLine": 9,
      "methodCode": "private void doHttpStream(InputStream is, String httpContentType, boolean lenient) throws IOException {\n    BOMInputStream bom = new BOMInputStream(new BufferedInputStream(is, BUFFER_SIZE), false, BOMS);\n    BOMInputStream pis = new BOMInputStream(bom, true, XML_GUESS_BYTES);\n    String cTMime = getContentTypeMime(httpContentType);\n    String cTEnc = getContentTypeEncoding(httpContentType);\n    String bomEnc = bom.getBOMCharsetName();\n    String xmlGuessEnc = pis.getBOMCharsetName();\n    String xmlEnc = getXmlProlog(pis, xmlGuessEnc);\n    this.encoding = calculateHttpEncoding(cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc, lenient);\n    this.reader = new InputStreamReader(is, encoding);\n}"
    },
    {
      "commit": "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a",
      "startLine": 7,
      "endLine": 9,
      "methodCode": "private void doHttpStream(InputStream is, String httpContentType, boolean lenient) throws IOException {\n    BOMInputStream bom = new BOMInputStream(new BufferedInputStream(is, BUFFER_SIZE), false, BOMS);\n    BOMInputStream pis = new BOMInputStream(bom, true, XML_GUESS_BYTES);\n    String cTMime = getContentTypeMime(httpContentType);\n    String cTEnc = getContentTypeEncoding(httpContentType);\n    String bomEnc = bom.getBOMCharsetName();\n    String xmlGuessEnc = pis.getBOMCharsetName();\n    String xmlEnc = getXmlProlog(pis, xmlGuessEnc);\n    this.encoding = calculateHttpEncoding(cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc, pis, lenient);\n    this.reader = new InputStreamReader(is, encoding);\n}"
    },
    {
      "commit": "5a21350fb904af0f0e0f8d1cc5ce484c7183dd13",
      "startLine": 7,
      "endLine": 9,
      "methodCode": "private void doHttpStream(InputStream is, String httpContentType, boolean lenient) throws IOException {\n    BOMInputStream bom = new BOMInputStream(new BufferedInputStream(is, BUFFER_SIZE), false, BOMS);\n    BOMInputStream pis = new BOMInputStream(bom, true, XML_GUESS_BYTES);\n    String cTMime = getContentTypeMime(httpContentType);\n    String cTEnc = getContentTypeEncoding(httpContentType);\n    String bomEnc = bom.getBOMCharsetName();\n    String xmlGuessEnc = pis.getBOMCharsetName();\n    String xmlEnc = getXmlProlog(pis, xmlGuessEnc);\n    this.encoding = calculateHttpEncoding(cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc, pis, lenient);\n    this.reader = new InputStreamReader(is, encoding);\n}"
    },
    {
      "commit": "50d5aeea6180c582b788aedc44c3ae2c3c441eff",
      "startLine": 6,
      "endLine": 9,
      "methodCode": "private void doHttpStream(InputStream is, String httpContentType, boolean lenient) throws IOException {\n    BOMInputStream bom = new BOMInputStream(new BufferedInputStream(is, BUFFER_SIZE), false, BOMS);\n    BOMInputStream pis = new BOMInputStream(bom, true, XML_GUESS_BYTES);\n    String cTMime = getContentTypeMime(httpContentType);\n    String cTEnc = getContentTypeEncoding(httpContentType);\n    String bomEnc = (bom.hasBOM() ? bom.getBOM().getCharsetName() : null);\n    String xmlGuessEnc = (pis.hasBOM() ? pis.getBOM().getCharsetName() : null);\n    String xmlEnc = getXmlProlog(pis, xmlGuessEnc);\n    this.encoding = calculateHttpEncoding(cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc, pis, lenient);\n    this.reader = new InputStreamReader(is, encoding);\n}"
    },
    {
      "commit": "a2800c889834ee30b5e8c0971cd1efbfa980bf9a",
      "startLine": 6,
      "endLine": 9,
      "methodCode": "private void doHttpStream(InputStream is, String httpContentType, boolean lenient) throws IOException {\n    BOMInputStream bom = createBomStream(new BufferedInputStream(is, BUFFER_SIZE));\n    BOMInputStream pis = createXmlStream(bom);\n    String cTMime = getContentTypeMime(httpContentType);\n    String cTEnc = getContentTypeEncoding(httpContentType);\n    String bomEnc = (bom.hasBOM() ? bom.getBOM().getCharsetName() : null);\n    String xmlGuessEnc = (pis.hasBOM() ? pis.getBOM().getCharsetName() : null);\n    String xmlEnc = getXmlProlog(pis, xmlGuessEnc);\n    String encoding = calculateHttpEncoding(cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc, pis, lenient);\n    prepareReader(pis, encoding);\n}"
    },
    {
      "commit": "2fbbf47aaf12f3efc333caf06bb61d63472d610e",
      "startLine": 6,
      "endLine": 9,
      "methodCode": "private void doHttpStream(InputStream is, String httpContentType, boolean lenient) throws IOException {\n    BOMInputStream bom = createBomStream(new BufferedInputStream(is, BUFFER_SIZE));\n    BOMInputStream pis = createXmlStream(bom);\n    String cTMime = getContentTypeMime(httpContentType);\n    String cTEnc = getContentTypeEncoding(httpContentType);\n    String bomEnc = (bom.hasBOM() ? bom.getBOM().getCharsetName() : null);\n    String xmlGuessEnc = (pis.hasBOM() ? pis.getBOM().getCharsetName() : null);\n    String xmlEnc = getXmlProlog(pis, xmlGuessEnc);\n    String encoding = calculateHttpEncoding(cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc, pis, lenient);\n    prepareReader(pis, encoding);\n}"
    },
    {
      "commit": "5b75cf83b2db408f8228b26910a8d3d3633cd54f",
      "startLine": 5,
      "endLine": 8,
      "methodCode": "private void doHttpStream(InputStream is, String httpContentType, boolean lenient) throws IOException {\n    BufferedInputStream pis = new BufferedInputStream(is, BUFFER_SIZE);\n    String cTMime = getContentTypeMime(httpContentType);\n    String cTEnc = getContentTypeEncoding(httpContentType);\n    String bomEnc = getBOMEncoding(pis);\n    String xmlGuessEnc = getXMLGuessEncoding(pis);\n    String xmlEnc = getXmlProlog(pis, xmlGuessEnc);\n    String encoding = calculateHttpEncoding(cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc, pis, lenient);\n    prepareReader(pis, encoding);\n}"
    }
  ]
}