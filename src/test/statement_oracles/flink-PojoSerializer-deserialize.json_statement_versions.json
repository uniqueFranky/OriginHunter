{
  "statementVersions": [
    {
      "commit": "ae285f9bd5398fe4d8d86eb3207bbc5beb8a24c8",
      "startLine": 8,
      "endLine": 28,
      "methodCode": "@Override\n@SuppressWarnings({ \"unchecked\", \"rawtypes\" })\npublic T deserialize(DataInputView source) throws IOException {\n    int flags = source.readByte();\n    if ((flags & IS_NULL) != 0) {\n        return null;\n    }\n    T target;\n    Class<?> actualSubclass = null;\n    TypeSerializer subclassSerializer = null;\n    if ((flags & IS_SUBCLASS) != 0) {\n        String subclassName = source.readUTF();\n        try {\n            actualSubclass = Class.forName(subclassName, true, cl);\n        } catch (ClassNotFoundException e) {\n            throw new RuntimeException(\"Cannot instantiate class.\", e);\n        }\n        subclassSerializer = getSubclassSerializer(actualSubclass);\n        target = (T) subclassSerializer.createInstance();\n        initializeFields(target);\n    } else if ((flags & IS_TAGGED_SUBCLASS) != 0) {\n        int subclassTag = source.readByte();\n        subclassSerializer = registeredSerializers[subclassTag];\n        target = (T) subclassSerializer.createInstance();\n        initializeFields(target);\n    } else {\n        target = createInstance();\n    }\n    if ((flags & NO_SUBCLASS) != 0) {\n        try {\n            for (int i = 0; i < numFields; i++) {\n                boolean isNull = source.readBoolean();\n                if (fields[i] != null) {\n                    if (isNull) {\n                        fields[i].set(target, null);\n                    } else {\n                        Object field = fieldSerializers[i].deserialize(source);\n                        fields[i].set(target, field);\n                    }\n                } else if (!isNull) {\n                    fieldSerializers[i].deserialize(source);\n                }\n            }\n        } catch (IllegalAccessException e) {\n            throw new RuntimeException(\"Error during POJO copy, this should not happen since we check the fields before.\", e);\n        }\n    } else {\n        if (subclassSerializer != null) {\n            target = (T) subclassSerializer.deserialize(target, source);\n        }\n    }\n    return target;\n}"
    },
    {
      "commit": "8aa5e05733655e7b3d1f11ed15f61672d61e5cb5",
      "startLine": 8,
      "endLine": 28,
      "methodCode": "@Override\n@SuppressWarnings({ \"unchecked\", \"rawtypes\" })\npublic T deserialize(DataInputView source) throws IOException {\n    int flags = source.readByte();\n    if ((flags & IS_NULL) != 0) {\n        return null;\n    }\n    T target;\n    Class<?> actualSubclass = null;\n    TypeSerializer subclassSerializer = null;\n    if ((flags & IS_SUBCLASS) != 0) {\n        String subclassName = source.readUTF();\n        try {\n            actualSubclass = Class.forName(subclassName, true, cl);\n        } catch (ClassNotFoundException e) {\n            throw new RuntimeException(\"Cannot instantiate class.\", e);\n        }\n        subclassSerializer = getSubclassSerializer(actualSubclass);\n        target = (T) subclassSerializer.createInstance();\n        initializeFields(target);\n    } else if ((flags & IS_TAGGED_SUBCLASS) != 0) {\n        int subclassTag = source.readByte();\n        subclassSerializer = registeredSerializers[subclassTag];\n        target = (T) subclassSerializer.createInstance();\n        initializeFields(target);\n    } else {\n        target = createInstance();\n    }\n    if ((flags & NO_SUBCLASS) != 0) {\n        try {\n            for (int i = 0; i < numFields; i++) {\n                boolean isNull = source.readBoolean();\n                if (isNull) {\n                    fields[i].set(target, null);\n                } else {\n                    Object field = fieldSerializers[i].deserialize(source);\n                    fields[i].set(target, field);\n                }\n            }\n        } catch (IllegalAccessException e) {\n            throw new RuntimeException(\"Error during POJO copy, this should not happen since we check the fields before.\", e);\n        }\n    } else {\n        if (subclassSerializer != null) {\n            target = (T) subclassSerializer.deserialize(target, source);\n        }\n    }\n    return target;\n}"
    },
    {
      "commit": "21a715867d655bb61df9a9f7eef37e42b99e206a",
      "startLine": 8,
      "endLine": 28,
      "methodCode": "@Override\n@SuppressWarnings({ \"unchecked\", \"rawtypes\" })\npublic T deserialize(DataInputView source) throws IOException {\n    int flags = source.readByte();\n    if ((flags & IS_NULL) != 0) {\n        return null;\n    }\n    T target;\n    Class<?> actualSubclass = null;\n    TypeSerializer subclassSerializer = null;\n    if ((flags & IS_SUBCLASS) != 0) {\n        String subclassName = source.readUTF();\n        try {\n            actualSubclass = Class.forName(subclassName, true, cl);\n        } catch (ClassNotFoundException e) {\n            throw new RuntimeException(\"Cannot instantiate class.\", e);\n        }\n        subclassSerializer = getSubclassSerializer(actualSubclass);\n        target = (T) subclassSerializer.createInstance();\n        initializeFields(target);\n    } else if ((flags & IS_TAGGED_SUBCLASS) != 0) {\n        int subclassTag = source.readByte();\n        subclassSerializer = registeredSerializers[subclassTag];\n        target = (T) subclassSerializer.createInstance();\n        initializeFields(target);\n    } else {\n        target = createInstance();\n    }\n    if ((flags & NO_SUBCLASS) != 0) {\n        try {\n            for (int i = 0; i < numFields; i++) {\n                boolean isNull = source.readBoolean();\n                if (isNull) {\n                    fields[i].set(target, null);\n                } else {\n                    Object field = fieldSerializers[i].deserialize(source);\n                    fields[i].set(target, field);\n                }\n            }\n        } catch (IllegalAccessException e) {\n            throw new RuntimeException(\"Error during POJO copy, this should not happen since we check the fields\" + \"before.\");\n        }\n    } else {\n        if (subclassSerializer != null) {\n            target = (T) subclassSerializer.deserialize(target, source);\n        }\n    }\n    return target;\n}"
    },
    {
      "commit": "6ba5fcdf85f802748fd47218ce8c41a617d224c9",
      "startLine": 8,
      "endLine": 28,
      "methodCode": "@Override\n@SuppressWarnings({ \"unchecked\", \"rawtypes\" })\npublic T deserialize(DataInputView source) throws IOException {\n    int flags = source.readByte();\n    if ((flags & IS_NULL) != 0) {\n        return null;\n    }\n    T target;\n    Class<?> actualSubclass = null;\n    TypeSerializer subclassSerializer = null;\n    if ((flags & IS_SUBCLASS) != 0) {\n        String subclassName = source.readUTF();\n        try {\n            actualSubclass = Class.forName(subclassName, true, cl);\n        } catch (ClassNotFoundException e) {\n            throw new RuntimeException(\"Cannot instantiate class.\", e);\n        }\n        subclassSerializer = getSubclassSerializer(actualSubclass);\n        target = (T) subclassSerializer.createInstance();\n        initializeFields(target);\n    } else if ((flags & IS_TAGGED_SUBCLASS) != 0) {\n        int subclassTag = source.readByte();\n        subclassSerializer = registeredSerializers[subclassTag];\n        target = (T) subclassSerializer.createInstance();\n        initializeFields(target);\n    } else {\n        target = createInstance();\n    }\n    if ((flags & NO_SUBCLASS) != 0) {\n        try {\n            for (int i = 0; i < numFields; i++) {\n                boolean isNull = source.readBoolean();\n                if (isNull) {\n                    fields[i].set(target, null);\n                } else {\n                    Object field = fieldSerializers[i].deserialize(source);\n                    fields[i].set(target, field);\n                }\n            }\n        } catch (IllegalAccessException e) {\n            throw new RuntimeException(\"Error during POJO copy, this should not happen since we check the fields\" + \"before.\");\n        }\n    } else {\n        if (subclassSerializer != null) {\n            target = (T) subclassSerializer.deserialize(target, source);\n        }\n    }\n    return target;\n}"
    },
    {
      "commit": "7407076d3990752eb5fa4072cd036efd2f656cbc",
      "startLine": 8,
      "endLine": 28,
      "methodCode": "@Override\n@SuppressWarnings(\"unchecked\")\npublic T deserialize(DataInputView source) throws IOException {\n    int flags = source.readByte();\n    if ((flags & IS_NULL) != 0) {\n        return null;\n    }\n    T target;\n    Class<?> actualSubclass = null;\n    TypeSerializer subclassSerializer = null;\n    if ((flags & IS_SUBCLASS) != 0) {\n        String subclassName = source.readUTF();\n        try {\n            actualSubclass = Class.forName(subclassName, true, cl);\n        } catch (ClassNotFoundException e) {\n            throw new RuntimeException(\"Cannot instantiate class.\", e);\n        }\n        subclassSerializer = getSubclassSerializer(actualSubclass);\n        target = (T) subclassSerializer.createInstance();\n        initializeFields(target);\n    } else if ((flags & IS_TAGGED_SUBCLASS) != 0) {\n        int subclassTag = source.readByte();\n        subclassSerializer = registeredSerializers[subclassTag];\n        target = (T) subclassSerializer.createInstance();\n        initializeFields(target);\n    } else {\n        target = createInstance();\n    }\n    if ((flags & NO_SUBCLASS) != 0) {\n        try {\n            for (int i = 0; i < numFields; i++) {\n                boolean isNull = source.readBoolean();\n                if (isNull) {\n                    fields[i].set(target, null);\n                } else {\n                    Object field = fieldSerializers[i].deserialize(source);\n                    fields[i].set(target, field);\n                }\n            }\n        } catch (IllegalAccessException e) {\n            throw new RuntimeException(\"Error during POJO copy, this should not happen since we check the fields\" + \"before.\");\n        }\n    } else {\n        if (subclassSerializer != null) {\n            target = (T) subclassSerializer.deserialize(target, source);\n        }\n    }\n    return target;\n}"
    },
    {
      "commit": "926f835adb9cb77bcda19e4ed009cc07c89cea74",
      "startLine": 7,
      "endLine": 12,
      "methodCode": "@Override\npublic T deserialize(DataInputView source) throws IOException {\n    boolean isNull = source.readBoolean();\n    if (isNull) {\n        return null;\n    }\n    T target;\n    try {\n        target = clazz.newInstance();\n    } catch (Throwable t) {\n        throw new RuntimeException(\"Cannot instantiate class.\", t);\n    }\n    try {\n        for (int i = 0; i < numFields; i++) {\n            isNull = source.readBoolean();\n            if (isNull) {\n                fields[i].set(target, null);\n            } else {\n                Object field = fieldSerializers[i].deserialize(source);\n                fields[i].set(target, field);\n            }\n        }\n    } catch (IllegalAccessException e) {\n        throw new RuntimeException(\"Error during POJO copy, this should not happen since we check the fields\" + \"before.\");\n    }\n    return target;\n}"
    },
    {
      "commit": "76d4a75e823c31a899f2143fb6be185b90e55532",
      "startLine": 3,
      "endLine": 8,
      "methodCode": "@Override\npublic T deserialize(DataInputView source) throws IOException {\n    T target;\n    try {\n        target = clazz.newInstance();\n    } catch (Throwable t) {\n        throw new RuntimeException(\"Cannot instantiate class.\", t);\n    }\n    try {\n        for (int i = 0; i < numFields; i++) {\n            Object field = fieldSerializers[i].deserialize(source);\n            fields[i].set(target, field);\n        }\n    } catch (IllegalAccessException e) {\n        throw new RuntimeException(\"Error during POJO copy, this should not happen since we check the fields\" + \"before.\");\n    }\n    return target;\n}"
    }
  ]
}